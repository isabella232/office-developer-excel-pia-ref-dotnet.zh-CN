<Type Name="FreeformBuilder" FullName="Microsoft.Office.Interop.Excel.FreeformBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ae4621931af0643fa07ae14d1065da43e725e19b5754abfd20ae2a4d9b5f1e0" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54509162" /></Metadata><TypeSignature Language="C#" Value="public interface FreeformBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FreeformBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.FreeformBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface FreeformBuilder" />
  <TypeSignature Language="C++ CLI" Value="public interface class FreeformBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表任意多边形创建时的几何属性。</summary>
    <remarks><para>使用 <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> 方法可返回 <b>FreeformBuilder</b> 对象。 使用 <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> 方法向 freefrom 添加节点。 使用 <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> 方法创建 <b>FreeformBuilder</b> 对象中定义的形状，并将其添加到 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 集合中。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNodes">
      <MemberSignature Language="C#" Value="public void AddNodes (Microsoft.Office.Core.MsoSegmentType SegmentType, Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1, object X2, object Y2, object X3, object Y3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNodes([in]valuetype Microsoft.Office.Core.MsoSegmentType SegmentType, [in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1, [in]object X2, [in]object Y2, [in]object X3, [in]object Y3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNodes (SegmentType As MsoSegmentType, EditingType As MsoEditingType, X1 As Single, Y1 As Single, Optional X2 As Object, Optional Y2 As Object, Optional X3 As Object, Optional Y3 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1762)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SegmentType" Type="Microsoft.Office.Core.MsoSegmentType" />
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
        <Parameter Name="X2" Type="System.Object" />
        <Parameter Name="Y2" Type="System.Object" />
        <Parameter Name="X3" Type="System.Object" />
        <Parameter Name="Y3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SegmentType">必需 <see cref="T:Microsoft.Office.Interop.Office.MsoSegmentType" /> 。 要添加的线段的类型。<b>MsoSegmentType</b> 可以是以下常量之一<b>：msoSegmentLine</b><b>msoSegmentCurve</b></param>
        <param name="EditingType">必需 <see cref="T:Microsoft.Office.Interop.Office.MsoEditingType" /> 。 顶点的编辑属性。<b>MsoEditingType</b> 可以是以下常量之一：<b>msoEditingAuto</b><b>msoEditingCorner</b>不能是 <b>msoEditingSmooth</b> 或 <b>msoEditingSymmetric</b>。如果 <paramref name="SegmentType" /> 为 <b>msoSegmentLine</b>， <paramref name="EditingType" /> 必须为 <b>msoEditingAuto</b>。</param>
        <param name="X1">必需 <b>单个</b>。如果新线段的 为 <paramref name="EditingType" /> <b>msoEditingAuto</b>，则此参数指定从文档左上角到新线段终点的水平距离 (（以) 点表示）。如果新节点的 为 <paramref name="EditingType" /> <b>msoEditingCorner</b>，则此参数指定从文档左上角到新线段的第一个控制点的水平距离 (（以) 点表示）。</param>
        <param name="Y1">必需 <b>单个</b>。如果新线段的 为 <paramref name="EditingType" /> <b>msoEditingAuto</b>，则此参数指定从文档左上角到新线段终点的水平距离 (（以) 点表示）。如果新节点的 为 <paramref name="EditingType" /> <b>msoEditingCorner</b>，则此参数指定从文档左上角到新线段的第一个控制点的水平距离 (（以) 点表示）。</param>
        <param name="X2">可选 <b>对象</b>。如果新线段的 为 <paramref name="EditingType" /> <b>msoEditingCorner</b>，则此参数指定从文档左上角到新线段的第二个控制点的水平距离 (（以) 点表示）。如果 <paramref name="EditingType" /> 新线段的 为 <b>msoEditingAuto</b>，则不要为此参数指定值。</param>
        <param name="Y2">可选 <b>对象</b>。如果新线段的 为 <paramref name="EditingType" /> <b>msoEditingCorner</b>，则此参数指定从文档左上角到新线段的第二个控制点的水平距离 (（以) 点表示）。如果 <paramref name="EditingType" /> 新线段的 为 <b>msoEditingAuto</b>，则不要为此参数指定值。</param>
        <param name="X3">可选 <b>对象</b>。如果新线段的 为 <paramref name="EditingType" /> <b>msoEditingCorner</b>，则此参数以) 点指定从文档左上角到新线段终点的水平距离 (。如果 <paramref name="EditingType" /> 新线段的 为 <b>msoEditingAuto</b>，则不要为此参数指定值。</param>
        <param name="Y3">可选 <b>对象</b>。如果新线段的 为 <paramref name="EditingType" /> <b>msoEditingCorner</b>，则此参数指定从文档左上角到新线段终点的垂直距离 (，以) 点表示。如果 <paramref name="EditingType" /> 新线段的 为 <b>msoEditingAuto</b>，则不要为此参数指定值。</param>
        <summary>向任意多边形添加节点。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个对象，该对象Microsoft Excel应用程序。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ConvertToShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape ConvertToShape() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToShape () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ ConvertToShape();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1766)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建具有指定对象的几何特征 <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> 的形状。 返回 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> 一个代表新形状的对象。</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>注意</b>  使用 <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> <b>ConvertToShape</b>方法之前，必须至少<b>将该方法应用于 FreeformBuilder</b>对象一次。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks><para>如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</para>
          <para><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。 例如，Microsoft Excel 的创建者代码为 XCEL。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>