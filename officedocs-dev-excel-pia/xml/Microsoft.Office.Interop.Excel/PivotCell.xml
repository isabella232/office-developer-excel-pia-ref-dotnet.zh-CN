<Type Name="PivotCell" FullName="Microsoft.Office.Interop.Excel.PivotCell">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbbdae64cf7a054bab0c86aad763673fe235fd17db6bf4e764080c5fc2243be9" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54518739" /></Metadata><TypeSignature Language="C#" Value="public interface PivotCell" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract PivotCell" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.PivotCell" />
  <TypeSignature Language="VB.NET" Value="Public Interface PivotCell" />
  <TypeSignature Language="C++ CLI" Value="public interface class PivotCell" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024458-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表数据透视表中的一个单元格。</summary>
    <remarks><para>使用 <see cref="P:Microsoft.Office.Interop.Excel.Range.PivotCell" /> 集合的 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 属性可返回 <b>PivotCell</b> 对象。</para>
      <para>返回 <b>PivotCell</b> 对象后，可以使用 属性确定特定 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.PivotCellType" /> 区域是哪种单元格类型。</para>
      <para>可以使用 或 属性确定对应于列或行轴上代表选定数字 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.ColumnItems" /> <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.RowItems" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> 的项目的集合。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocateChange">
      <MemberSignature Language="C#" Value="public void AllocateChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChange() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotCell.AllocateChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在基于 OLAP 数据源的数据透视表中的指定单元格上执行回写操作。</summary>
        <remarks><para>此方法执行 UPDATE CUBE 语句，不仅添加此特定单元格中的更改，还包含先前应用的任何更改。执行 UPDATE CUBE 语句后，数据透视表更新运行，然后 ROLLBACK TRANSACTION 语句执行。</para>
          <para>对基于非 OLAP 数据源的数据透视表中的单元格运行 该方法将 <see cref="M:Microsoft.Office.Interop.Excel.PivotCell.AllocateChange" /> 生成运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个对象，该对象Microsoft Excel应用程序。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellChanged">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCellChangedState CellChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCellChangedState CellChanged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.CellChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CellChanged As XlCellChangedState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCellChangedState CellChanged { Microsoft::Office::Interop::Excel::XlCellChangedState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2931)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCellChangedState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取自创建数据透视表或上次执行提交操作以来，数据透视表值单元格是否已编辑或重新计算。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCellChangedState" /> 对象。</value>
        <remarks><para>默认情况下 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.CellChanged" /> ，属性的值 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 为 。</para>
          <para>对于具有非 OLAP 数据源的数据透视表，此属性的值只能是 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged" /> 。 它 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 适用于尚未编辑的单元格，适用于 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged" /> 已编辑的单元格。 放弃更改会将其值设置为 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 。</para>
          <para>应用并保存更改只适用于使用 OLAP 数据源的数据透视表。 以下属性可能状态的说明仅适用于具有 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.CellChanged" /> OLAP 数据源的数据透视表。</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> - 如果单元格 (包含自创建数据透视表) 或自上次执行保存或放弃更改操作以来的公式，则尚未编辑或重新计算该单元格。</description>
            </item>
            <item>
              <description>
                <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged" /> - 自创建数据透视表以来，或者自上次执行应用更改或保存更改操作以来，单元格已经过编辑或重新计算，但该更改尚未应用 (因此尚未运行 UPDATE CUBE 语句) 。</description>
            </item>
            <item>
              <description>
                <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChangeApplied" />- 自创建数据透视表以来，或者自上次执行应用更改、保存更改或放弃更改操作以来，单元格已经过编辑或重新计算 (并且已运行 UPDATE CUBE 语句) 。</description>
            </item>
          </list>
          <para>下表介绍用户的不同操作如何影响具有 OLAP 数据源的数据透视表中的 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.CellChanged" /> 属性设置。</para>
          <list type="table">
            <item>
              <term>在一个或多个单元格中输入值或公式。</term>
              <description>对于这些 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged" /> 单元格，设置为 。</description>
              <description>对于这些 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged" /> 单元格，设置为 。</description>
            </item>
            <item>
              <term>重新计算含公式的一个或多个单元格（手动计算 (F9)，或由 Excel 自动计算）。</term>
              <description>不适用</description>
              <description>对于这些 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged" /> 单元格，设置为 。</description>
            </item>
            <item>
              <term>保存（提交）更改。</term>
              <description>对于没有 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 公式的所有已编辑单元格，设置为 。</description>
              <description>对于包含 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChangeApplied" /> 公式的所有已编辑单元格，设置为 。</description>
            </item>
            <item>
              <term>放弃所有更改。</term>
              <description>对于没有 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 公式的所有已编辑单元格，设置为 。</description>
              <description>对于包含 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 公式的所有已编辑单元格，设置为 。</description>
            </item>
            <item>
              <term>放弃单个单元格中的更改。</term>
              <description>仅 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 针对该单元格设置为 。</description>
              <description>仅 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 针对该单元格设置为 。</description>
            </item>
            <item>
              <term>一次操作清除多个单元格。</term>
              <description>对于所有这些 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 单元格，设置为 。</description>
              <description>对于所有这些 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 单元格，设置为 。</description>
            </item>
            <item>
              <term>清除一个单元格。</term>
              <description>仅 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 针对该单元格设置为 。</description>
              <description>仅 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged" /> 针对该单元格设置为 。</description>
            </item>
            <item>
              <term>应用值之前，执行撤消操作，将该值改回先前编辑的值。</term>
              <description>对于没有 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged" /> 公式的所有已编辑单元格，设置为 。</description>
              <description>对于包含 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged" /> 公式的所有已编辑单元格，设置为 。</description>
            </item>
            <item>
              <term>应用值之后，执行撤消操作，将该值改回先前编辑的值。</term>
              <description>对于没有 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChangeApplied" /> 公式的所有已编辑单元格，设置为 。</description>
              <description>对于包含 <see cref="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChangeApplied" /> 公式的所有已编辑单元格，设置为 。</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItemList ColumnItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItemList ColumnItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.ColumnItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnItems As PivotItemList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItemList ^ ColumnItems { Microsoft::Office::Interop::Excel::PivotItemList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2191)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2191)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItemList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotItemList" /> 一个集合，该集合与代表选定范围的列轴上的项相对应。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks><para>如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</para>
          <para><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。 例如，Microsoft Excel 的创建者代码为 XCEL。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomSubtotalFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction CustomSubtotalFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction CustomSubtotalFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.CustomSubtotalFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomSubtotalFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction CustomSubtotalFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回对象的自定义小计函数字段 <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> 设置。</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> 可以是以下 <b>XlConsolidationFunction 常量</b> 之一：</para>
          <para>
            <b>xlAverage</b>
          </para>
          <para>
            <b>xlCount</b>
          </para>
          <para>
            <b>xlCountNums</b>
          </para>
          <para>
            <b>xlMax</b>
          </para>
          <para>
            <b>xlMin</b>
          </para>
          <para>
            <b>xlProduct</b>
          </para>
          <para>
            <b>xlStDev</b>
          </para>
          <para>
            <b>xlStDevP</b>
          </para>
          <para>
            <b>xlSum</b>
          </para>
          <para>
            <b>xlUnknown</b>
          </para>
          <para>
            <b>xlVar</b>
          </para>
          <para>
            <b>xlVarP</b>
          </para>
          <para>如果 <b>PivotCell</b> 对象类型不是自定义分类汇总，那么 <b>CustomSubtotalFunction</b> 属性将返回一个错误。该属性只应用于非 OLAP 源数据。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField DataField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField DataField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.DataField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ DataField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2091)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2091)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 对应于所选数据字段的对象。</summary>
        <value>To be added.</value>
        <remarks><para>如果<b>PivotCell</b>对象不是允许的类型之一，则此属性将返回错误：XlPivotCellTypeValue、XlPivotCellTypeDataField、XlPivotCellTypeSubtotal 或<b>XlPivotCellTypeGrandTotal</b>。 <b></b> <b></b> <b></b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceValue">
      <MemberSignature Language="C#" Value="public object DataSourceValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSourceValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.DataSourceValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSourceValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSourceValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2930)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上次从数据源中检索到的数据透视表中已编辑单元格的值。</summary>
        <value>上次从数据源检索到的数据透视表中已编辑单元格的值。</value>
        <remarks><para>只读。</para>
          <para>每当编辑数据透视表的值区域中的单元格时，该属性将保留上次从数据源检索到的值，然后再 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.DataSourceValue" /> 进行编辑。 对于尚未编辑或尚未显式检索数据源值的数据透视表值单元格，此属性将在数据透视表中返回空引用 (Nothing Visual Basic) 。 对于具有 OLAP 数据源的数据透视表，从单独的连接检索该属性的值，以确保它不包含用户可能执行的任何写回 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.DataSourceValue" /> 操作的值。</para>
          <para>读取 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.DataSourceValue" /> 数据透视表值区域之外的单元格的属性会产生运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChange">
      <MemberSignature Language="C#" Value="public void DiscardChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChange() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotCell.DiscardChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2929)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>放弃对数据透视表中指定单元格的更改。</summary>
        <remarks><para>对于基于 OLAP 数据源的数据透视表中的单元格，该方法删除指定单元格中输入的值或公式，然后运行数据透视表更新以从数据源检索最新 <see cref="M:Microsoft.Office.Interop.Excel.PivotCell.DiscardChange" /> 值。 数据源值将设置为空引用， (指定Visual Basic) 中为 Nothing。 此方法还会从更改Excel中删除对此单元格进行的所有更改，以便不再将其包含在数据源的 UPDATE CUBE 语句中。 此方法还将重新创建在事务中发生的所有其他更改的会话状态。 这包括执行 ROLLBACK TRANSACTION 语句，然后执行 UPDATE CUBE 语句（除指定单元格之外的所有更改）。 对于基于非 OLAP 数据源的数据透视表中的单元格，此方法只清除编辑的单元格。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy18">
      <MemberSignature Language="C#" Value="public string Dummy18 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Dummy18" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.Dummy18" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy18 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Dummy18 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个元组，该元组使用 OLAP 数据源提供数据透视表中指定值单元格的完整 MDX 坐标。</summary>
        <value>使用 OLAP 数据源在数据透视表中提供指定值单元格的完整 MDX 坐标的元组。</value>
        <remarks><para>只读。</para>
          <para>属性在元组中返回的 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.MDX" /> 维度包括行和列坐标以及报表筛选器坐标。 对于数据透视表值区域之外的单元格，以及数据透视表之外的单元格，访问此属性将生成运行时错误。 对于在报表筛选字段中有多项选择的数据透视表，访问此属性也将生成运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCellType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotCellType PivotCellType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotCellType PivotCellType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.PivotCellType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCellType As XlPivotCellType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotCellType PivotCellType { Microsoft::Office::Interop::Excel::XlPivotCellType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2189)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2189)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotCellType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个常量，该常量标识单元格所对应的数据透视表实体。</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlPivotCellType" /> 可以是以下 <b>XlPivotCellType 常量之</b> 一：</para>
          <para>
            <b>xlPivotCellBlankCell</b> 数据透视表中的结构空白单元格。</para>
          <para>
            <b>xlPivotCellCustomSubtotal</b> 行或列区域中作为自定义汇总的单元格。</para>
          <para>
            <b>xlPivotCellDataField</b> 数据字段标签 (" <b>数据"按钮</b>) 。</para>
          <para>
            <b>xlPivotCellDataPivotField</b> " <b>数据"</b> 按钮。</para>
          <para>
            <b>xlPivotCellGrandTotal</b> 行或列区域中总计的单元格。</para>
          <para>
            <b>xlPivotCellPageFieldItem</b> 显示"页面"字段的选定项的单元格。</para>
          <para>
            <b>xlPivotCellPivotField</b> 字段的按钮 ("数据 <b>"按钮</b>) 。</para>
          <para>
            <b>xlPivotCellPivotItem</b> 行或列区域中不是小计、总计、自定义汇总或空白行的单元格。</para>
          <para>
            <b>xlPivotCellSubtotal</b> 行或列区域中作为汇总的单元格。</para>
          <para>
            <b>xlPivotCellValue</b> 数据区域中的任何单元格 (空白行除外) 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotColumnLine">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLine PivotColumnLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLine PivotColumnLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.PivotColumnLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotColumnLine As PivotLine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotLine ^ PivotColumnLine { Microsoft::Office::Interop::Excel::PivotLine ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2674)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2674)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" /> 特定  <b>PivotCell</b> 对象的列上的 。 只读。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.PivotLine" /></value>
        <remarks><para>如果 <b>PivotCell</b> 位于行上， <b>则 PivotColumnLine</b> 属性将返回运行时错误。</para>
          <para>如果 <b>PivotCell</b> 位于列上， <b>则 PivotColumnLine</b> 属性返回 <b>列 PivotLine</b> 对象。</para>
          <para>如果 <b>PivotCell</b> 位于数据区域中，则 <b>PivotColumnLine</b> 属性返回相应的 <b>列 PivotLine</b> 对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField PivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField PivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.PivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ PivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，该对象代表包含指定区域左上角 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 的数据透视表字段。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItem PivotItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItem PivotItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.PivotItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotItem As PivotItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItem ^ PivotItem { Microsoft::Office::Interop::Excel::PivotItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，该对象代表包含指定区域左上角 <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> 的数据透视表项。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotRowLine">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLine PivotRowLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLine PivotRowLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.PivotRowLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotRowLine As PivotLine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotLine ^ PivotRowLine { Microsoft::Office::Interop::Excel::PivotLine ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2673)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" /> 特定  <b>PivotCell</b> 对象的行上的 。 只读 <b>PivotLine</b> 类型。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.PivotLine" /></value>
        <remarks><para>如果 <b>PivotCell</b> 位于行上， <b>则 PivotRowLine</b> 返回行的 <b>PivotLine</b> 对象。</para>
          <para>如果 <b>PivotCell</b> 位于列上， <b>则 PivotRowLine</b>  将返回运行时错误。</para>
          <para>如果 <b>PivotCell</b> 位于数据区域中， <b>则 PivotRowLine</b> 将返回相应的行的 <b>PivotLine</b> 对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTable PivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.PivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTable As PivotTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTable ^ PivotTable { Microsoft::Office::Interop::Excel::PivotTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，该对象代表包含指定区域左上角的数据透视表或与数据透视表数据透视图 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 报表。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.Range" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表指定的 PivotCell 所适用的区域。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItemList RowItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItemList RowItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.RowItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowItems As PivotItemList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItemList ^ RowItems { Microsoft::Office::Interop::Excel::PivotItemList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2190)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItemList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotItemList" /> 一个集合，该集合与分类轴上代表选定单元格的项目相对应。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerActions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Actions ServerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Actions ServerActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotCell.ServerActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerActions As Actions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Actions ^ ServerActions { Microsoft::Office::Interop::Excel::Actions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Actions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示由可执行的 OLAP 定义操作组成的操作集合。 操作特定于工作表级别现有的数据透视表。 只读</summary>
        <value>To be added.</value>
        <remarks><para>服务器操作是一项可选功能，OLAP 多维数据集管理员可在使用多维数据集成员或度量作为查询参数的服务器上定义此功能，以获取多维数据集中的详细信息。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>