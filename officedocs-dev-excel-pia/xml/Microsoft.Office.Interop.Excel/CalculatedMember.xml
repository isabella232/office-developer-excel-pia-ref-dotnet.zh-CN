<Type Name="CalculatedMember" FullName="Microsoft.Office.Interop.Excel.CalculatedMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c86f7dc26610f37d139c110969b898dc8368015b8738a8147643578eabe1ba9" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54508127" /></Metadata><TypeSignature Language="C#" Value="public interface CalculatedMember" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CalculatedMember" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CalculatedMember" />
  <TypeSignature Language="VB.NET" Value="Public Interface CalculatedMember" />
  <TypeSignature Language="C++ CLI" Value="public interface class CalculatedMember" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024455-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>对于那些具有联机分析处理 (OLAP) 数据源的数据透视表，该对象代表它们的计算字段和计算项。</summary>
    <remarks><para>使用 <see cref="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" /> 集合的 方法 <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> 或 属性 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> 可返回 <b>CalculatedMember</b> 对象。</para>
      <para>使用 <b>CalculatedMember</b> 对象，可以使用 属性检查数据透视表中计算字段或项目 <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" /> 的有效性。</para>
      <para>
        <b>注意</b> 如果数据透视表当前未连接到数据源，<b>则 IsValid</b>属性将返回<b>True。</b> 在 <see cref="M:Microsoft.Office.Interop.Excel.PivotCache.MakeConnection" /> 测试 <b>IsValid 属性之前，请使用</b> 方法。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个对象，该对象Excel应用程序。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks><para>如果对象是在 Excel中创建的，则此属性返回字符串 XCEL，它等效于十六进制数 5843454C。</para>
          <para>Creator <b></b>属性设计用于 Macintosh Excel，其中每个应用程序都有一个四字符的创建者代码。 例如，Excel创建者代码为 XCEL。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMember.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除对象。</summary>
        <remarks><para>只有在使用 <b>CalculatedMember.Add</b> 方法与参数一起自己创建多维数据集字段时，才能删除 <paramref name="xlCalculatedSet" /> 多维数据集字段。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFolder">
      <MemberSignature Language="C#" Value="public string DisplayFolder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayFolder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayFolder { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2927)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取显示文件夹集的名称。</summary>
        <value>命名显示文件夹的名称。</value>
        <remarks><para>只读。</para>
          <para>此属性的值对应于创建或编辑命名集时，可以在"新建/修改集"对话框的"显示文件夹"文本框中输入的可选值。 若要根据基于 OLAP 数据源的数据透视表中的数据创建新的命名集，请单击功能区上"数据透视表"上的"字段、项目"和"集"，再单击"管理集"，在"设置管理器"对话框中单击"新建"，然后单击"使用 MDX 创建集 &amp; "。 这将显示“新建集合”对话框，其中包含“显示文件夹”文本框。 同样，如果在“集合管理器”对话框中选择现有命名集，然后单击“编辑”，“管理集”对话框将显示。</para>
          <para>只能对命名集读取此属性以及 和 属性 (由属性等于) <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedSet" /> 的对象表示。 无法读取计算成员或度量值的这些属性 (由属性等于) 的对象 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedMember" /> 表示。 如果试图对计算成员或度量值读取这些属性，那么将引发运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public bool Dynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dynamic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取是否每次更新时重新计算指定的命名集。</summary>
        <value>如果每次更新都会重新计算指定的命名集，则其参数为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>只读。</para>
          <para>如果每次更新都会重新计算命名集，则其值为
            <b>true;</b>否则<b>为 false</b>。</para>
          <para>此属性的值对应于创建或编辑命名集时可用的新建/修改集对话框中"每次更新时重新计算集"复选框的设置。 若要根据基于 OLAP 数据源的数据透视表中的数据创建新的命名集，请单击功能区上"数据透视表"上的"字段、项目"和"集"，再单击"管理集"，在"设置管理器"对话框中单击"新建"，然后单击"使用 MDX 创建集 &amp; "。 这将显示“新建集合”对话框，其中包含“每次更新后重新计算集合”复选框。 同样，如果在“集合管理器”对话框中选择现有命名集，然后单击“编辑”，“管理集”对话框将显示。</para>
          <para>只能对命名集读取此属性以及 和 属性 (由属性等于) <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedSet" /> 的对象表示。 无法读取计算成员或度量值的这些属性 (由属性等于) 的对象 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedMember" /> 表示。 如果试图对计算成员或度量值读取这些属性，那么将引发运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlattenHierarchies">
      <MemberSignature Language="C#" Value="public bool FlattenHierarchies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlattenHierarchies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.FlattenHierarchies" />
      <MemberSignature Language="VB.NET" Value="Public Property FlattenHierarchies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlattenHierarchies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指定命名集的层次结构的所有级别的项目是否显示在基于数据透视表的数据透视表的同一字段中OLAP 多维数据集。</summary>
        <value><b>如果</b> 指定命名集的层次结构的所有级别的项目基于数据透视表的同一字段显示，则其OLAP 多维数据集;否则为 <b>false</b>。</value>
        <remarks><para>读/写。</para>
          <para>
            <b>如此</b> 如果指定集合的层次结构的所有级别的项目在同一字段中显示;否则 <b>为 false</b>。</para>
          <para>此属性的值对应于在创建或编辑命名集时，“新建/修改集合”对话框中“将不同级别的项目显示在单独字段中”复选框的设置。 若要根据基于 OLAP 数据源的数据透视表中的数据创建新的命名集，请单击功能区上"数据透视表"上的"字段、项目"和"集"，再单击"管理集"，在"设置管理器"对话框中单击"新建"，然后单击"使用 MDX 创建集 &amp; "。 这将显示“新建集合”对话框，其中包含“将不同级别的项目显示在单独字段中”复选框。 同样，如果在“集合管理器”对话框中选择现有命名集，然后单击“编辑”，“管理集”对话框将显示。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Formula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用 MDX 或 MDX 语法返回多维表达式 () 公式。</summary>
        <value>To be added.</value>
        <remarks><para>此属性对于 OLAP 数据源无效。</para>
          <para>如果单元格包含一个常量，此属性返回该常量。 如果单元格为空 <b>，Formula</b> 属性将返回空字符串。 如果单元格包含公式，<b>Formula</b> 属性将该公式作为字符串返回，所用格式与在编辑栏（包括等号）中显示时的格式相同。</para>
          <para>如果将单元格的值或者公式设置为日期类型，则 Microsoft Excel 将检查此单元格的数字格式是否符合日期或者时间格式。如果不符合，Microsoft Excel 将把数字格式设置为默认的短日期格式。</para>
          <para>如果区域是一维或二维区域，可以将公式设置为相同维度的数组。 同样，可以将公式放入数组中。</para>
          <para>如果为多单元格区域设置公式，则会用公式填充该区域所有的单元格。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HierarchizeDistinct">
      <MemberSignature Language="C#" Value="public bool HierarchizeDistinct { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HierarchizeDistinct" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" />
      <MemberSignature Language="VB.NET" Value="Public Property HierarchizeDistinct As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HierarchizeDistinct { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在基于数据透视表的数据透视表中显示指定命名集的层次结构时，是否对重复项OLAP 多维数据集。</summary>
        <value><b>如果在</b> 基于数据透视表的数据透视表中显示指定命名集的层次结构时，应排序和删除重复项，OLAP 多维数据集;否则为 <b>false</b>。</value>
        <remarks><para>读/写。</para>
          <para>如果命名集的层次结构按顺序显示并删除重复项，则其为
            <b>true;</b>否则<b>为 false</b>。</para>
          <para>此属性的值对应于在创建或编辑命名集时，“新建/修改集合”对话框中的“自动排序并从集合中删除重复项”复选框。 若要根据基于 OLAP 数据源的数据透视表中的数据创建新的命名集，请单击功能区上"数据透视表"上的"字段、项目"和"集"，再单击"管理集"，在"设置管理器"对话框中单击"新建"，然后单击"使用 MDX 创建集 &amp; "。 这将显示“新建集合”对话框，其中包含“自动排序并从集合中删除重复项”复选框。 同样，如果在“集合管理器”对话框中选择现有命名集，然后单击“编辑”，“管理集”对话框将显示。</para>
          <para>只能对命名集读取此属性以及 和 属性 (由属性等于) <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedSet" /> 的对象表示。 无法读取计算成员或度量值的这些属性 (由属性等于) 的对象 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedMember" /> 表示。 如果试图对计算成员或度量值读取这些属性，那么将引发运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2188)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <b>个 boolean</b> 值 ，指示指定的计算成员是否已在当前会话期间成功实例化 OLAP 提供程序。</summary>
        <value>To be added.</value>
        <remarks><para>即使数据透视表未与其数据源相连，该属性也返回 <b>True</b>。在查询 <b>IsValid</b> 属性的值之前，必须保证数据透视表与其数据源相连。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureGroup">
      <MemberSignature Language="C#" Value="public string MeasureGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MeasureGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.MeasureGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasureGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MeasureGroup { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3092)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3092)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回关联的度量值组。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回的对象的名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType NumberFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberFormat As XlCalcMemNumberFormatType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalcMemNumberFormatType NumberFormat { Microsoft::Office::Interop::Excel::XlCalcMemNumberFormatType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType" /> 一个值，该值代表计算成员的数量格式。 默认值为 <b>xlNumberFormatTypeDefault</b>。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentHierarchy">
      <MemberSignature Language="C#" Value="public string ParentHierarchy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentHierarchy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.ParentHierarchy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentHierarchy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentHierarchy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3093)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3093)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从多维数据集上可用的层次结构中返回当前父层次结构的名称。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentMember">
      <MemberSignature Language="C#" Value="public string ParentMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.ParentMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentMember { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3094)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3094)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回父层次结构的父成员的名称。 只读。</summary>
        <value>To be added.</value>
        <remarks><para>默认父成员由多维数据集设计器或作为选定层次结构的默认成员Analysis Services定义的任何内容确定。 例如，如果所选层次结构中存在"All"成员，则这通常是多维数据集上的默认父成员。</para>
          <para>如果选定的父层次结构没有"All"父成员，则多维数据集设计器或以编程方式通过父层次结构定义另一个默认父Analysis Services。  (如果多维数据集设计器未指定默认成员，则Analysis Services引擎会自动定义一个.) </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SolveOrder">
      <MemberSignature Language="C#" Value="public int SolveOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SolveOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.SolveOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SolveOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SolveOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <b>个 Integer</b> 类型的值，该值指定计算成员求解顺序 MDX (多维表达式) 参数的值。 默认值为 0。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的名称，该对象显示在指定数据透视表的原始源数据中。</summary>
        <value>To be added.</value>
        <remarks><para>如果用户在创建数据透视表后重命名了项目，则 <b>SourceName</b> 属性可能不同于当前项目名称。</para>
          <para>下表显示了给定<a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproSourceName1.htm">OLAP</a>的<b>SourceName</b>属性和相关属性的示例值</para>
          <list type="table">
            <item>
              <term>
                <b>Caption</b>
              </term>
              <description>巴黎</description>
              <description>巴黎</description>
            </item>
            <item>
              <term>
                <b>名称</b>
              </term>
              <description>[Europe].[France].[Paris]（只读）</description>
              <description>巴黎</description>
            </item>
            <item>
              <term>
                <b>SourceName</b>
              </term>
              <description>[Europe].[France].[Paris]（只读）</description>
              <description>（与 SQL 属性值相同，只读）</description>
            </item>
            <item>
              <term>
                <b>值</b>
              </term>
              <description>[Europe].[France].[Paris]（只读）</description>
              <description>巴黎</description>
            </item>
          </list>
          <para>在集合中指定索引 <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> 时，可以使用下表中所示的语法。</para>
          <list type="table">
            <item>
              <term>表达式。PivotItems ("[Europe]。[法国]。[Paris]") </term>
              <description>表达式。PivotItems ("Paris") </description>
            </item>
          </list>
          <para>使用 属性引用集合的特定成员时，可以使用文本 <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> 索引名称，如下表所示。</para>
          <list type="table">
            <item>
              <term>[欧洲]。[法国]。[Paris]</term>
              <description>巴黎</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculatedMemberType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculatedMemberType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlCalculatedMemberType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculatedMemberType Type { Microsoft::Office::Interop::Excel::XlCalculatedMemberType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculatedMemberType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回计算的成员类型。</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType" /> 可以是以下 <b>XlCalculatedMemberType</b> 常量之一：</para>
          <para>
            <b>xlCalculatedMember</b>
          </para>
          <para>
            <b>xlCalculatedSet</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>