<Type Name="ProtectedViewWindow" FullName="Microsoft.Office.Interop.Excel.ProtectedViewWindow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d5b8f1f9232b7e5bbe5c5632e0e54f5e3d4661ee7456d27a9aa5c93f93a78c1" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54516520" /></Metadata><TypeSignature Language="C#" Value="public interface ProtectedViewWindow" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ProtectedViewWindow" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />
  <TypeSignature Language="VB.NET" Value="Public Interface ProtectedViewWindow" />
  <TypeSignature Language="C++ CLI" Value="public interface class ProtectedViewWindow" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244CD-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表“受保护的视图”窗口。</summary>
    <remarks><para>“受保护的视图”窗口用来显示可能来自不安全位置的工作簿。不安全的位置定义如下：</para>
      <list type="number">
        <item>
          <description>从 Internet 上打开的文件。</description>
        </item>
        <item>
          <description>从邮件打开Microsoft Outlook 2010。</description>
        </item>
        <item>
          <description>文件阻止策略阻止的文件。</description>
        </item>
        <item>
          <description>未通过 Office 文件验证的文件。</description>
        </item>
        <item>
          <description>使用“打开”对话框中“打开”按钮的“在受保护的视图中打开”命令，在“受保护的视图”中显式打开的文件。</description>
        </item>
      </list>
      <para>在“受保护的视图”窗口中显示的工作簿不可编辑，并且受到限制，不能运行 Visual Basic for Applications 宏和数据连接等活动内容。</para>
      <para>若要从集合中返回单个对象，请使用 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> ProtectedViewWindows (Index) ，其中 Index 是要打开的窗口的索引号。 您还可以使用 对象的 属性访问代表活动的"受保护的视图"窗口 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> <see cref="P:Microsoft.Office.Interop.Excel.Application.ActiveProtectedViewWindow" /> <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 的对象。</para>
      <para>访问对象后，使用 属性访问表示在"受保护的视图"窗口中打开的 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Workbook" /> <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 工作簿文件的对象。 由于"受保护的视图"窗口旨在保护用户免受潜在恶意代码的攻击，因此使用对象返回的对象可以执行的操作 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> 将受到限制。 大多数不允许的操作将返回"运行时错误 1004：此命令在沙盒Excel不可用"。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>返回 <see cref="T:System.String" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将“受保护的视图”窗口放到 z 顺序的前面。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值代表在"受保护的视图"窗口的标题栏中显示的名称。</summary>
        <value>显示在"受保护的视图"窗口的标题栏中的名称。</value>
        <remarks><para>读/写。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Close" />
      <MemberSignature Language="VB.NET" Value="Public Function Close () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭指定的"受保护的视图"窗口。</summary>
        <returns>返回 <see cref="T:System.Boolean" /> 。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Edit (object WriteResPassword, object UpdateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Edit([in]object WriteResPassword, [in]object UpdateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Edit(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Edit (Optional WriteResPassword As Object, Optional UpdateLinks As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(562)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="WriteResPassword">写入受保护工作簿所需的密码。</param>
        <param name="UpdateLinks">指定更新文件中外部引用（链接）的方式，例如对以下公式 =SUM([Budget.xls]Annual!C10:C25) 的 Budget.xls 工作簿中范围的引用。</param>
        <summary>打开在指定“受保护的视图”窗口中打开的工作簿以供编辑。</summary>
        <returns>返回 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 一个对象。</returns>
        <remarks><para>如果 <paramref name="WriteResPassword" /> 省略此参数并且工作簿需要密码，则系统会提示用户输入密码。</para>
          <para>如果 <paramref name="UpdateLinks" /> 省略此参数，将提示用户指定链接的更新方法。 如果Excel WKS、WK1 或 WK3 格式打开文件，且参数为 0，则不创建图表;否则 Excel 从附加到该文件的图形生成图表。 <paramref name="UpdateLinks" /></para>
          <para>避免在应用程序中使用硬编码的密码。如果某个过程需要密码，可要求用户提供密码，将其以变量形式进行存储，然后在编码中使用该变量。</para>
          <para>您可以在 参数中指定下表中列出的值之一，以确定在打开工作簿时， (链接) 是否 <paramref name="UpdateLinks" /> 更新外部引用。</para>
          <list type="table">
            <item>
              <term>0</term>
              <description>工作簿打开时不更新外部引用（链接）。</description>
            </item>
            <item>
              <term>3</term>
              <description>工作簿打开时更新外部引用（链接）。</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableResize">
      <MemberSignature Language="C#" Value="public bool EnableResize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableResize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.EnableResize" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableResize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否可以调整"受保护的视图"窗口的大小。</summary>
        <value>如果可以调整"受保护的视图"窗口的大小，为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>读/写。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值代表"受保护的视图"窗口的高度（以点表示）。</summary>
        <value>"受保护的视图"窗口的高度（以点表示）。</value>
        <remarks><para>读/写。</para>
          <para>如果“受保护的视图”窗口已最大化或最小化，那么不可设置此属性。 使用 <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> 属性可确定窗口状态。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值代表从客户区的左边缘到"受保护的视图"窗口左边缘的距离（以点表示）。</summary>
        <value>从客户区的左边缘到"受保护的视图"窗口左边缘的距离（以点表示）。</value>
        <remarks><para>读/写。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在指定的"受保护的视图"窗口中打开的源文件的名称。</summary>
        <value>在指定的"受保护的视图"窗口中打开的源文件的名称。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SourcePath">
      <MemberSignature Language="C#" Value="public string SourcePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourcePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourcePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourcePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2993)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在指定的"受保护的视图"窗口中打开的源文件的路径。</summary>
        <value>在指定的"受保护的视图"窗口中打开的源文件的路径。</value>
        <remarks><para>只读。</para>
          <para>路径不包含结尾字符（例如，“C:\MSOffice”）。 使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" /> 属性可添加分隔文件夹和驱动器号的字符。 使用 <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourceName" /> 对象的 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> 返回不带路径的源文件名称。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值代表从指定"受保护的视图"窗口的上边缘到可用区域上边缘的距离（以点表示）。</summary>
        <value>从指定的"受保护的视图"窗口的上边缘到可用区域上边缘的距离（以点表示）。</value>
        <remarks><para>读/写。</para>
          <para>无法对最大化的“受保护的视图”窗口设置此属性。 使用 <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> 属性可返回或设置窗口的状态。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值确定指定的"受保护的视图"窗口是否可见。</summary>
        <value>如果指定的"受保护的视图"窗口可见，则其参数为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>读/写。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定指定的"受保护的视图"窗口的宽度（以点表示）。</summary>
        <value>指定的"受保护的视图"窗口的宽度（以点表示）。</value>
        <remarks><para>读/写。</para>
          <para>如果“受保护的视图”窗口已最大化或最小化，那么不可设置此属性。 使用 <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> 属性可确定窗口状态。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlProtectedViewWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlProtectedViewWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlProtectedViewWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlProtectedViewWindowState WindowState { Microsoft::Office::Interop::Excel::XlProtectedViewWindowState get(); void set(Microsoft::Office::Interop::Excel::XlProtectedViewWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlProtectedViewWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指定"受保护的视图"窗口的状态。</summary>
        <value>指定的"受保护的视图"窗口的状态。</value>
        <remarks><para>读/写。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Workbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Workbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Workbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Workbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(752)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(752)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象代表在指定的"受保护的视图"窗口中打开的工作簿。</summary>
        <value>在指定的"受保护的视图"窗口中打开的工作簿。</value>
        <remarks><para>只读。</para>
          <para>由于"受保护的视图"窗口旨在保护用户免受潜在恶意代码的攻击，因此使用方法返回的对象可以执行的操作 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> 将受到限制。 任何不允许的操作都将返回"运行时错误 1004：此命令在沙盒Excel不可用"。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>