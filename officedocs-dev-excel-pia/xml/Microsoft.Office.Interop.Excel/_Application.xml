<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d128d80c169cdac7c5089849d12bd3a7beea2b82241316cc21264ff243e5207" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54513538" /></Metadata><TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>这是 COM coclass（托管代码需要此 Coclass 来实现与相应的 COM 对象的互操作性）中的主接口。 仅当您想要使用的方法与 COM 对象的事件共享同一名称时才使用此主接口；在这种情况下，转换为此接口以调用该方法，转换为最新的事件接口以连接到该事件。 否则，请使用派生自 COM coclass 的 .NET 接口来访问方法、属性和 COM 对象的事件。 有关 COM 对象详细信息，请参阅 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留以供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" /> 。 指定要激活的 Microsoft 应用程序。<b>XlMSApplication</b>可以是以下<b>XlMSApplication</b>常量之一<b>：xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail xlMicrosoftAccess</b><b></b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></param>
        <summary>激活一个 Microsoft 应用程序。如果该应用程序已经处于运行状态，则本方法激活的是正在运行的应用程序。如果该应用程序不处于运行状态，则本方法将启动该应用程序的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，该对象代表活动窗口中活动 (或指定 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 窗口中) 活动单元格。 如果窗口中未显示工作表，则此属性将失败。</summary>
        <value>To be added.</value>
        <remarks><para>请仔细区分活动单元格和选定区域。活动单元格为选定区域内部的一个单元格。而选定区域可以包含多个单元格，但只有一个单元格为活动单元格。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 个对象，该对象代表活动 (嵌入图表或图表工作表) 。 嵌入式图表在被选中或激活时被认为是活动的。 当没有图表处于活动状态时，此属性返回 <b>Nothing</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>只读。</summary>
        <value><b>Integer</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置活动打印机的名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> 个对象，该对象代表活动"受保护的视图 (位于顶部窗口) 。</summary>
        <value>一个代表活动的"受保护的视图"窗口 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> (位于顶部窗口) 。</value>
        <remarks><para>如果没有打开受保护的视图 (，则Visual Basic) Nothing 中的空引用。 只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，它代表活动工作簿中或指定的窗口或工作簿中的活动工作表（最上面的工作表）。如果没有活动的工作表，则返回 <b>Nothing</b>。</summary>
        <value>To be added.</value>
        <remarks><para>如果某个工作簿出现在若干个窗口中，那么该工作簿的 <b>ActiveSheet</b> 属性在不同窗口中可能不同。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <see cref="T:Microsoft.Office.Interop.Excel.Window" /> 个对象，该对象代表活动 (位于最上面) 。 如果没有打开的窗口，则返回 <b>Nothing</b> 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 一个对象，该对象代表活动窗口中位于 (窗口的工作簿) 。 如果未打开任何窗口，或者“信息”窗口或“剪贴板”窗口为活动窗口，则返回 <b>Nothing</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart">必需的 <b>对象</b>。 包含应用新图表自动格式时将应用的格式的图表。</param>
        <param name="Name">必需的 <b>字符串</b> 。 自动格式的名称。</param>
        <param name="Description">可选 <b>对象</b>。 自定义自动格式的说明。</param>
        <summary>向图表的可用自动套用格式列表中添加自定义的自动套用格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">必需的 <b>对象</b>。 将源数据指定为字符串数组或 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象。</param>
        <param name="ByRow">可选 <b>对象</b>。 仅在为 <paramref name="ListArray" /> Range 对象 <b>时</b> 使用。 <b>如果为 True，</b> 则从区域的每一行创建自定义列表。 <b>如果为 False，</b> 则从区域的每一列创建自定义列表。 如果省略此参数，并且行数多于列 (或区域中的行数和列数相等) ，Microsoft Excel则从区域的每一列创建自定义列表。 如果省略此参数，并且该范围中的列数多于行数，则Microsoft Excel从区域的每一行创建自定义列表。</param>
        <summary>为自定义自动填充和/或自定义排序添加自定义列表。</summary>
        <remarks><para>如果要添加的列表已经存在，则本方法不起作用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个集合，该集合代表"工具"菜单的"Add-Ins <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> 对话框 (列出的) 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一组对象，这些对象代表当前在 Excel 中可用或打开的所有加载项，而不 <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> 考虑它们是否已安装。</summary>
        <value>对象的集合，这些对象代表当前在加载项中可用或 <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> 打开Excel。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 在执行拖放编辑操作过程中，在覆盖非空单元格之前显示一条消息，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置替换启动文件夹的名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一 <b>个boolean</b> 类型的值 ，表示是否使用 ClearType 显示菜单、 功能区和对话框文本中的字体。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>即使关闭 Microsoft Windows 的 ClearType 设置，将此属性设置为 <b>True</b> 也会替代 Windows 设置，并在所有 Microsoft Office 应用程序中使用 ClearType。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Core.AnswerWizard" /> 对象的 Microsoft Excel。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，该对象代表指定对象的创建者 (可以将此属性与 OLE 自动化对象一同使用，以返回该对象 <see cref="T:Microsoft.Office.Interop.Excel.Application" />) 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <b>Boolean</b> 类型的值，该值表示 Microsoft Excel 中的 XML 功能是否可用。</summary>
        <value>To be added.</value>
        <remarks><para>XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 打开带有链接的文件时询问用户是否更新链接，则该值为 <b>True</b>。 如果 Microsoft Excel 自动更新链接并且不显示对话框，则该值为 <b>False</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <see cref="T:Microsoft.Office.Core.IAssistance" /> 个代表short_Excel2007帮助查看器Microsoft Office对象。 只读。</summary>
        <value><b>IAssistance</b></value>
        <remarks><para><b>IAssistance</b> 对象使开发人员显示自定义帮助和安装在办公室帮助查看器中的 Office 的帮助。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Core.Assistant" /> 一个对象Microsoft Excel。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> 一个对象，该对象Microsoft Excel自动更正属性。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 按照键入的内容自动设置超链接的格式，则该值为 <b>True</b>（默认）。 如果 Excel 不按照键入的内容自动设置超链接的格式，则该值为 <b>False</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一 <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> 个常量，该常量代表Microsoft Excel打开文件时使用的安全模式。</summary>
        <value>To be added.</value>
        <remarks><para>当应用程序启动时，该属性自动设置为 <b>msoAutomationSecurityLow</b>。因此，要避免中断依赖于默认设置的解决方案，应该在以编程方式打开文件后，小心地将本属性重置为 <b>msoAutomationSecurityLow</b>。另外，在以编程方式打开文件前后，还应该立即对本属性进行设置，以避免恶意破坏。</para>
          <para>
            <b>MsoAutomationSecurity</b> 可以是其中一个 <b>MsoAutomationSecurity</b> 常量:</para>
          <list type="bullet">
            <item>
              <description>
                <b>msoAutomationSecurityByUI</b>   使用在"安全性"对话框中<b>指定的</b>设置。</description>
            </item>
            <item>
              <description>
                <b>msoAutomationSecurityForceDisable</b>   禁用以编程方式打开的所有文件的所有宏，而不显示任何安全警报。</description>
            </item>
            <item>
              <description>
                <b>msoAutomationSecurityLow</b>   启用所有宏。 此为启动应用程序时的默认值。</description>
            </item>
          </list>
          <para>设置为 <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> <b>False</b> 不会影响警报，并且不会影响安全警告。 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />该设置不适用于安全警告。 例如，如果用户将 <b>DisplayAlerts</b> 等于 <b>False，</b> 将 <b>AutomationSecurity</b> 设置为 <b>msoAutomationSecurityByUI，</b>而用户位于中等安全级别，则宏运行时将出现安全警告。 这使宏可以捕获文件打开错误，而仍将显示安全警告如果成功打开文件。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果在向格式设置为百分比的单元格中输入数据时，并不自动将该数据乘以 100，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> 一个对象，该对象将定期备份所有文件格式。</summary>
        <value>To be added.</value>
        <remarks><para>有效的时间间隔为从 1 到 120 的所有数值。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 Microsoft Excel 内部版本号。</summary>
        <value>To be added.</value>
        <remarks><para>测试属性通常更安全，除非确定需要知道内部 <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> 版本号。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>计算所有打开的工作簿</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>如果在</b> 将工作簿保存到磁盘之前计算工作簿， (该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> <b>xlManual，</b> 则其) 。 即使更改该属性，也保留 <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> 此属性。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>强制对所有打开工作簿中的数据进行完整计算。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>对于所有打开的工作簿，强制数据的完整计算并重建从属关系。</summary>
        <remarks><para>从属关系是取决于其他单元格的公式。例如，公式“=A1”取决于单元格 A1。<b>CalculateFullRebuild</b> 方法类似于重新输入所有公式。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>运行对 OLEDB 和 OLAP 数据源的所有待定查询。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置计算模式。 读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" /> 。</summary>
        <value>To be added.</value>
        <remarks><para>对于 OLAP 数据源，此属性只能返回或被设为 <b>xlNormal</b>。</para>
          <para>
            <b>XlCalculation</b> 可以是以下 <b>XlCalculation 常量</b> 之一：</para>
          <para>
            <b>xlCalculationAutomatic</b>
          </para>
          <para>
            <b>xlCalculationManual</b>
          </para>
          <para>
            <b>xlCalculationSmaticutomatic</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置或返回一个常量，该常量指定在执行计算 <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> 时Microsoft Excel中断的键。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>XlCalculationInterruptKey</b> 可以是以下 <b>XlCalculationInterruptKey</b> 常量之一：</para>
          <para>
            <b>xlAnyKey</b>
          </para>
          <para>
            <b>xlEscKey</b>
          </para>
          <para>
            <b>xlNoKey</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个常量，该常量指示应用程序在应用程序中执行的任何计算 <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> Microsoft Excel。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>XlCalculationState</b> 可以是以下 <b>XlCalculationState</b> 常量之一：</para>
          <para>
            <b>xlCalculating</b>
          </para>
          <para>
            <b>xlDone</b>
          </para>
          <para>
            <b>xlPending</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个数字，其最右侧两位表示计算引擎的次要版本号，而左侧的其他位表示 Microsoft Office Spreadsheet 组件的主要版本号。</summary>
        <value>To be added.</value>
        <remarks><para>如果工作簿保存在早期版本的 Excel并且工作簿尚未完全重新计算，则此属性返回 0。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 数组的索引。 仅当本属性返回数组时此参数才有用（有关详细信息，请参阅“注解”部分）。</param>
        <summary>返回关于调用 Visual Basic 的信息（有关详细信息，请参阅“注解”部分）。</summary>
        <value>To be added.</value>
        <remarks><para>本属性返回关于调用 Visual Basic 的信息，如下表所示。</para>
          <list type="table">
            <item>
              <term>在单个单元格中输入的自定义函数</term>
              <description>指定 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 该单元格的对象</description>
            </item>
            <item>
              <term>在单元格区域中作为数组公式一部分的自定义函数</term>
              <description>指定该单元格区域的<b>区域</b>对象</description>
            </item>
            <item>
              <term>Auto_Open、 Auto_Close 、 Auto_Activate 或 Auto_Deactivate 宏</term>
              <description>以文本形式返回的文档名</description>
            </item>
            <item>
              <term>由 或 属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> 设置的 <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> 宏</term>
              <description>该宏所应用的图表对象标识符或单元格引用（若适用）的名称</description>
            </item>
            <item>
              <term>“工具”菜单中的“宏”对话框，或上述之外的其他调用进程</term>
              <description>错误值 #REF!</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>本属性不应再被使用。语音批注已从 Microsoft Excel 中删除。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>本属性不应再被使用。语音批注已从 Microsoft Excel 中删除。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>主窗口的标题栏中显示的名称Microsoft Excel的名称。 如果未设置该名称，或将其设置为 <b>Empty</b>, 则此属性返回“Microsoft Excel”。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果启用单元格拖放功能，则为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表活动工作表上的所有单元格。 如果活动文档不是工作表，则此属性将失败。</summary>
        <value>To be added.</value>
        <remarks><para>由于该属性是 Range 对象的默认属性，因此您可以紧接在 Cells 关键字之后指定行 <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> 和<b></b>列索引。 <b></b> 有关详细信息，请参阅 <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> 属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters">必需 <b>双精度型</b>。 指定要转换为磅的厘米值。</param>
        <summary>将计量单位从厘米转换为磅（一磅等于 0.035 厘米）。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>如果为 True，</b> 则新创建文档中的所有图表都将使用单元格引用跟踪行为。 <b>boolean</b> (bool in C#) .</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 一个集合，该集合代表活动工作簿中所有的图表工作表。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort">可选 <b>对象</b>。 允许对 Range 执行 <b>重新计算</b>。</param>
        <summary>停止 Microsoft Excel 应用程序中的重新计算。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word">必需的 <b>字符串</b> 。 要检查的单词。</param>
        <param name="CustomDictionary">可选 <b>对象</b>。 一个字符串，它表示自定义词典的文件名，如果在主词典中找不到单词，则会到此词典中查找。 如果省略此参数，则使用当前指定的词典。</param>
        <param name="IgnoreUppercase">可选 <b>对象</b>。 如果为 <b>True</b>，则 Microsoft Excel 忽略所有字母都是大写的单词。 如果为 <b>False</b>，则 Microsoft Excel 检查所有字母都是大写的单词。 如果省略此参数，将使用当前的设置。</param>
        <summary>对单个单词进行拼写检查。 如果其中一个词典中找到了单词，则返回 <b>True;</b> 如果 <b>未找到</b> 单词，则返回 False。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 指明要返回的数组元素。 若省略此参数，该属性返回当前剪贴板上所有格式的数组。 有关详细信息，请参阅“备注”部分。</param>
        <summary>以数值数组的形式返回剪贴板上当前的格式。 可用数组中每个元素与“备注”部分所述的适当常量相比较，以判断剪贴板中是否包含特定的格式。</summary>
        <value>To be added.</value>
        <remarks><para>该属性返回数值数组。 若要确定剪贴板上是否包含特定格式，请将数组的每个元素与下列常量之 <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> 一进行比较：</para>
          <para>
            <b>xlClipboardFormatBIFF</b>
          </para>
          <para>
            <b>xlClipboardFormatBIFF2</b>
          </para>
          <para>
            <b>xlClipboardFormatBIFF3</b>
          </para>
          <para>
            <b>xlClipboardFormatBIFF4</b>
          </para>
          <para>
            <b>xlClipboardFormatBinary</b>
          </para>
          <para>
            <b>xlClipboardFormatBitmap</b>
          </para>
          <para>
            <b>xlClipboardFormatCGM</b>
          </para>
          <para>
            <b>xlClipboardFormatCSV</b>
          </para>
          <para>
            <b>xlClipboardFormatDIF</b>
          </para>
          <para>
            <b>xlClipboardFormatDspText</b>
          </para>
          <para>
            <b>xlClipboardFormatEmbeddedObject</b>
          </para>
          <para>
            <b>xlClipboardFormatEmbedSource</b>
          </para>
          <para>
            <b>xlClipboardFormatLink</b>
          </para>
          <para>
            <b>xlClipboardFormatLinkSource</b>
          </para>
          <para>
            <b>xlClipboardFormatLinkSourceDesc</b>
          </para>
          <para>
            <b>xlClipboardFormatMovie</b>
          </para>
          <para>
            <b>xlClipboardFormatNative</b>
          </para>
          <para>
            <b>xlClipboardFormatObjectDesc</b>
          </para>
          <para>
            <b>xlClipboardFormatObjectLink</b>
          </para>
          <para>
            <b>xlClipboardFormatOwnerLink</b>
          </para>
          <para>
            <b>xlClipboardFormatPICT</b>
          </para>
          <para>
            <b>xlClipboardFormatPrintPICT</b>
          </para>
          <para>
            <b>xlClipboardFormatRTF</b>
          </para>
          <para>
            <b>xlClipboardFormatScreenPICT</b>
          </para>
          <para>
            <b>xlClipboardFormatStandardFont</b>
          </para>
          <para>
            <b>xlClipboardFormatStandardScale</b>
          </para>
          <para>
            <b>xlClipboardFormatSYLK</b>
          </para>
          <para>
            <b>xlClipboardFormatTable</b>
          </para>
          <para>
            <b>xlClipboardFormatText</b>
          </para>
          <para>
            <b>xlClipboardFormatToolFace</b>
          </para>
          <para>
            <b>xlClipboardFormatToolFacePICT</b>
          </para>
          <para>
            <b>xlClipboardFormatVALU</b>
          </para>
          <para>
            <b>xlClipboardFormatWK1</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于运行 XLL 加载项中的用户定义函数 (HPC) 群集连接器的高性能计算名称。</summary>
        <value>HPC (HPC) 群集连接器的名称，用于在 XLL 加载项中运行用户定义函数。</value>
        <remarks><para>读/写。</para>
          <para>该属性的设置对应于"选项"对话框"高级"类别中的"公式"下的Excel <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 下拉框。</para>
          <para>
            <b>注意</b>：若要指定 <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 属性，必须在 HPC 群集连接器中 (高性能) 计算。 群集连接器可用来在 HPC 群集上远程运行群集安全的 XLL 函数，以提高性能。</para>
          <para>在可以指定属性之前，必须使用 属性才能Microsoft Excel 2010 XLL 加载项中运行用户定义的 <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 函数。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表活动工作表上的所有列。 如果活动文档不是工作表，则 <b>Columns</b> 属性失效。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Core.COMAddIns" /> 一个 Microsoft Excel 集合，该集合代表当前安装的 COM 加载项。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <see cref="T:Microsoft.Office.Core.CommandBars" /> 个对象，该对象Excel命令栏。</summary>
        <value>To be added.</value>
        <remarks><para>此属性返回一组可用于应用程序的内置和自定义命令栏。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel for the Macintosh 中命令加下划线的状态。</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> 可以是以下 <b>XlCommandUnderlines 常量</b> 之一：</para>
          <para>
            <b>xlCommandUnderlinesOn</b>
          </para>
          <para>
            <b>xlCommandUnderlinesOff</b>
          </para>
          <para>
            <b>xlCommandUnderlinesAutomatic</b>
          </para>
          <para>在 Microsoft Excel for Windows 中，该属性总是返回 <b>xlCommandUnderlinesOn</b>，该属性只能设置为 <b>xlCommandUnderlinesOn</b>，不允许设置为其他任何值。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果手写识别只能识别数字和标点符号，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks><para>该属性仅在使用 Microsoft Windows for Pen Computing 时可用。如果试图在其他操作系统中对该属性进行设置将产生错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 显示从右到左语言的控制字符，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks><para>只有在安装和选择了从右到左语言支持时，才可以设置该属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula">必需的 <b>对象</b>。 一 <b>个</b> 包含要转换的公式的 String。 必须为有效的公式，并且必须以等号开头。</param>
        <param name="FromReferenceStyle">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。 公式的引用样式。<b>XlReferenceStyle</b> 可以是以下 <b>XlReferenceStyle</b> 常量之一<b>：xlA1</b><b>xlR1C1</b></param>
        <param name="ToReferenceStyle">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。 要返回的引用样式。 如果省略此参数，则引用样式不变;公式保持由 指定的样式 <paramref name="FromReferenceStyle" /> 。XlReferenceStyle 可以是以下 XlReferenceStyle 常量之一。 <b>xlA1 </b> <b>xlR1C1</b></param>
        <param name="ToAbsolute">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。 指定转换的引用类型。 如果省略此参数，则不更改引用类型。<b>XlReferenceStyle</b> 可以是以下 <b>XlReferenceStyle</b> 常量之一<b>：xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></param>
        <param name="RelativeTo">可选 <b>对象</b>。 一个介于 0（零）和 100 之间的十进制数字，用于指定“整数最优”<b></b>百分比公差。 包含 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个单元格的对象。 相对引用与此单元格相对。</param>
        <summary>在 A1 和 R1C1 引用样式之间转换、在相对和绝对引用之间转换公式中的单元格引用，或者同时进行这两种转换。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果对象与单元格一同剪切、复制、提取和排序，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。 如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</summary>
        <value>To be added.</value>
        <remarks><para><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。 例如，Microsoft Excel 的创建者代码为 XCEL。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel 中鼠标指针的外观。</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> 可以是以下 <b>XlMousePointer 常量</b> 之一：</para>
          <para>
            <b>xlDefault</b> 默认指针。</para>
          <para>
            <b>xlIBeam</b> I 形指针。</para>
          <para>
            <b>xlNorthwestArrow</b> 方向箭头指针。</para>
          <para>
            <b>xlWait</b> 沙漏指针。</para>
          <para>当宏停止运行时，<b>Cursor</b> 属性不会自动重设。在宏停止运行前，应将指针重设为 <b>xlDefault</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个值，此值用于表明使用的是可见光标还是逻辑光标。 可为以下常量之一：<b>xlVisualCursor</b> 或 <b>xlLogicalCursor</b>。</summary>
        <value>To be added.</value>
        <remarks><para>对于所选择或安装的不同语言支持（例如，英语（美国）），这些常量可能不可用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回已定义的自定义序列的数目（包括内置序列）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置剪切或复制模式的状态。</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> 可以是以下 <b>XlCutCopyMode</b> 常量之一。</para>
          <list type="table">
            <item>
              <term>
                <b>False</b>
              </term>
              <description>不在剪切或复制模式下</description>
            </item>
            <item>
              <term>
                <b>xlCopy</b>
              </term>
              <description>复制模式</description>
            </item>
            <item>
              <term>
                <b>xlCut</b>
              </term>
              <description>剪切模式</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>
                <b>False</b>
              </term>
              <description>取消剪切或复制模式并清除移动边框。</description>
            </item>
            <item>
              <term>
                <b>True</b>
              </term>
              <description>取消剪切或复制模式并清除移动边框。</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置数据输入模式，如下表所示。 处于“数据输入”模式时，仅可在当前选定区域的未锁定单元格中输入数据。</summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term>
                <b>xlOn</b>
              </term>
              <description>“数据输入”模式处于打开状态。</description>
            </item>
            <item>
              <term>
                <b>xlOff</b>
              </term>
              <description>“数据输入”模式处于关闭状态。</description>
            </item>
            <item>
              <term>
                <b>xlStrict</b>
              </term>
              <description>数据输入模式已打开，按 Esc 不会关闭它。</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回应用程序特定的 DDE 返回代码，包含在由应用程序接收的最后一个 DDE 确认Excel。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">必需<b>类型，类型为 Integer。</b> 方法返回的通道 <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 号。</param>
        <param name="String">必需的 <b>字符串</b> 。 接收应用程序中定义的消息。</param>
        <summary>通过指定的 DDE 通道在另一个应用程序中运行一条命令或执行其他操作。</summary>
        <remarks><para><b>DDEExecute</b> 方法用于向另一个应用程序发送命令。 您还可以使用它将击键发送到另一个应用程序，尽管方法是发送 <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> 击键的首选方法。 该参数可以指定与 Alt、Ctrl 或 Shift 组合使用的任何单个键，也可以指定 <paramref name="String" /> 这些键的任意组合。 每个键可由一个或多个字符表示，例如 "a" 表示字符 a，"{ENTER}" 表示 Enter 键。</para>
          <para>若要指定那些没有屏幕回显该字符的键（例如，Enter 或 Tab），请使用下表所列的代码来表示相应的键。表中的每个代码表示键盘上的一个对应键。</para>
          <list type="table">
            <item>
              <term>Backspace</term>
              <description>{BACKSPACE} 或 {BS}</description>
            </item>
            <item>
              <term>Break</term>
              <description>{BREAK}</description>
            </item>
            <item>
              <term>Caps Lock</term>
              <description>{CAPSLOCK}</description>
            </item>
            <item>
              <term>清除</term>
              <description>{CLEAR}</description>
            </item>
            <item>
              <term>Delete 或 Del</term>
              <description>{DELETE} 或 {DEL}</description>
            </item>
            <item>
              <term>向下键</term>
              <description>{DOWN}</description>
            </item>
            <item>
              <term>结束</term>
              <description>{END}</description>
            </item>
            <item>
              <term>Enter</term>
              <description>~ (tilde) </description>
            </item>
            <item>
              <term>Enter（数字小键盘）</term>
              <description>{ENTER}</description>
            </item>
            <item>
              <term>Esc</term>
              <description>{ESCAPE} 或 {ESC}</description>
            </item>
            <item>
              <term>F1 到 F15</term>
              <description>{F1} 到 {F15}</description>
            </item>
            <item>
              <term>帮助</term>
              <description>{HELP}</description>
            </item>
            <item>
              <term>主页</term>
              <description>{HOME}</description>
            </item>
            <item>
              <term>Ins</term>
              <description>{INSERT}</description>
            </item>
            <item>
              <term>向左键</term>
              <description>{LEFT}</description>
            </item>
            <item>
              <term>Num Lock</term>
              <description>{NUMLOCK}</description>
            </item>
            <item>
              <term>PageDown</term>
              <description>{PGDN}</description>
            </item>
            <item>
              <term>PageUp</term>
              <description>{PGUP}</description>
            </item>
            <item>
              <term>Return</term>
              <description>{RETURN}</description>
            </item>
            <item>
              <term>向右键</term>
              <description>{RIGHT}</description>
            </item>
            <item>
              <term>Scroll Lock</term>
              <description>{SCROLLLOCK}</description>
            </item>
            <item>
              <term>Tab</term>
              <description>{TAB}</description>
            </item>
            <item>
              <term>向上键</term>
              <description>{UP}</description>
            </item>
          </list>
          <para>还可指定与 Shift 和/或 Ctrl 和/或 Alt 组合使用的键。若要指定前面提到的这些键的组合键，请使用下表的用法。</para>
          <list type="table">
            <item>
              <term>Shift</term>
              <description>+（加号）</description>
            </item>
            <item>
              <term>Ctrl</term>
              <description>^ (点) </description>
            </item>
            <item>
              <term>Alt</term>
              <description>%（百分号）</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App">必需的 <b>字符串</b> 。 应用程序名称。</param>
        <param name="Topic">必需的 <b>字符串</b> 。 描述通道所指向的应用程序的有关信息，通常为该应用程序的一个文档。</param>
        <summary>打开到一个应用程序的 DDE 通道。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果成功的话，<b>DDEInitiate</b> 方法将返回打开通道的通道号，所有随后的 DDE 函数将使用此号码指定通道。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel">必需<b>类型，类型为 Integer。</b> 方法返回的通道 <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 号。</param>
        <param name="Item">必需的 <b>对象</b>。 数据被发送到的项。</param>
        <param name="Data">必需的 <b>对象</b>。 发送到应用程序的数据。</param>
        <summary>向应用程序发送数据。</summary>
        <remarks><para>如果本方法调用失效将产生错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">必需<b>类型，类型为 Integer。</b> 方法返回的通道 <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 号。</param>
        <param name="Item">必需的 <b>字符串</b> 。 需要进行查询的项。</param>
        <summary>请求指定应用程序中的信息。该方法始终返回数组。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel">必需<b>类型，类型为 Integer。</b> 方法返回的通道 <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 号。</param>
        <summary>关闭到另一个应用程序的通道。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>将用于小数分隔符的字符设置或返回为 <b>字符串</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel 打开文件时使用的默认路径。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置保存文件的默认格式。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel 显示新窗口和工作表时的默认方向。 可为以下常量之一：<b>xlRTL</b>（从右到左）或 <b>xlLTR</b>（从左到右）。</summary>
        <value>To be added.</value>
        <remarks><para>由于选择或安装的语言支持（例如美国英语）不同，有些常量可能无法使用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回包含全局应用程序级属性的对象，Microsoft Excel将文档另存为网页或打开 <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> 网页时，</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在工作表由 VBA 代码计算时是否执行对 OLAP 数据源的异步查询。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>将 <b>DeferAsyncQueries</b> 属性设置为 <b>True</b> 可阻止在调用方法之前执行 <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> 任何异步查询表单。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">必需的 <b>字符串</b> 。 要删除的自定义自动格式的名称。</param>
        <summary>从图表的可用自动套用格式列表中删除自定义图表自动套用格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">必需<b>类型，类型为 Integer。</b> 自定义序列数字。 此数字必须大于或等于 5（Microsoft Excel 有四个不可删除的内置自定义序列）。</param>
        <summary>删除一个自定义序列。</summary>
        <remarks><para>如果列表数字小于 5 或者没有匹配的自定义序列，则使用本方法将产生错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> 一个集合，该集合代表所有内置对话框。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果宏运行时 Microsoft Excel 显示特定的警告和消息，则为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks><para>默认值为 <b>True</b>。 如果不想在程序运行时受到提示和警告消息的干扰，则将此属性设置为<b>False;</b>当邮件需要响应时，Microsoft Excel选择默认响应。</para>
          <para>如果将此属性设置为<b>False</b>，则Microsoft Excel代码完成时，除非运行的是跨进程代码，否则此属性设置为<b>True</b> 。</para>
          <para>使用工作簿的 方法覆盖现有文件时，"Overwrite"警告的默认值为"否 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> "，而<b>DisplayAlerts</b>属性设置为<b>False</b>时，Excel 选择"是"响应。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果能显示 Microsoft Office 剪贴板，则返回 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置单元格显示批注和标识符的方式。 可以是下列常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> ：xlNoIndicator、xlCommentIndicatorOnly 或<b>xlCommentAndIndicator</b>。 <b></b> <b></b></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置为 <b>True</b> 可显示"文档操作"任务窗格;设置为 <b>False</b> 可隐藏"文档操作"任务窗格。</summary>
        <value>To be added.</value>
        <remarks><para>如果活动工作簿不是智能文档，则将该属性设置为 <b>True</b> 将产生运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个 <b>boolean 类型的值</b> ，该值表示是否显示文档属性面板。读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 显示 4.0 版的菜单栏，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值表示在生成单元格公式时是否显示相关函数和已定义名称的列表。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果显示编辑栏，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 处于全屏显示模式，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks><para>全屏显示模式将应用程序窗口最大化，从而可覆盖整个屏幕并隐藏应用程序窗口的标题栏。工具栏、状态栏和编辑栏对全屏显示模式和普通显示模式保留各自独立的显示设置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果可以显示函数的“工具提示”，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>如此</b> 如果插入选项按钮应显示。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果包含注释的单元格显示单元格提示并包含注释标识符（单元格右上角的小圆点），则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>如此</b> 如果可以显示 粘贴选项按钮。</summary>
        <value>To be added.</value>
        <remarks><para>这是一个 Microsoft Office 范围的设置。 该设置影响所有其他的 Microsoft Office 应用程序。 将<b>DisplayPasteOptions</b>属性设置为<b>True</b>将关闭"自动填充选项"Microsoft Excel。 <b>“自动填充选项”</b>按钮只存在于 Excel 中，而“粘贴选项”按钮存在于所有其他的 Microsoft Office 应用程序中。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>如此</b> 如果最近使用的文件列表显示在 文件菜单上。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果滚动条在所有工作簿中显示，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果显示状态栏，则其值为 <b>True</b> 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap">可选 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 对象。 要在任务窗格中显示的 XML 映射。</param>
        <summary>打开"XML 源"任务窗格并显示参数指定的 XML <paramref name="XmlMap" /> 映射。</summary>
        <remarks><para>XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>等价于双击活动单元格。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary>保留以供内部使用。 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留以供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留以供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns><b>s</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留以供内部使用。 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留以供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 允许在单元格中直接进行编辑，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果启用记忆式键入功能，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>控制 Microsoft Excel 如何处理 Ctrl+Break（或 Esc、Command+Period）用户中断以用于运行过程。 读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" /> 。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>XlEnableCancelKey</b> 可以是以下 <b>XlEnableCancelKey</b> 常量之一：</para>
          <list type="bullet">
            <item>
              <description>
                <b>xlDisabled</b>   取消键捕获完全禁用。</description>
            </item>
            <item>
              <description>
                <b>xlErrorHandler</b>   中断作为错误发送到正在运行的过程，由使用 On Error GoTo 语句设置的错误处理程序捕获。 可捕获的错误代码为 18。</description>
            </item>
            <item>
              <description>
                <b>xlInterrupt</b>   当前过程中断，用户可以调试或结束该过程。</description>
            </item>
          </list>
          <para>使用此属性时应非常小心。 如果使用 <b>xlDisabled，</b>则无法中断一个不终止的循环或其他非自我终止的代码。 同样，如果使用 <b>xlErrorHandler，</b> 但错误处理程序始终使用 <b>Resume</b> 语句返回，则无法停止代码运行。</para>
          <para>只要 Microsoft Excel 返回空闲状态并且没有程序处于运行状态，<b>EnableCancelKey</b> 属性都会重置为 <b>xlInterrupt</b>。若要在程序运行中捕获或者禁用取消过程，则每次在程序被调用时必须明确更改 <b>EnableCancelKey</b> 属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果为 True，则启用"Microsoft Excel操作是否不是用于查看和编辑电子表格的默认程序"对话框。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果指定对象已启用事件，此属性的值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置或返回一个 <b>Boolean</b> 值，该值表示当用户尝试执行的操作所影响的单元格数目比 Office 中心 UI 中指定的数目大时，是否显示警告消息。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>此属性的默认值为 <b>True</b> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置或返回一个 <b>boolean 类型的值</b> ，该值表示是显示还是隐藏使用的库时所出现的库预览，预览的支持。 如果将此属性设置为 <b>True</b>，则会在应用命令之前显示工作簿预览。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>此属性对应于“Excel 选项”对话框中的“启用实时预览”复选框。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>控制是否启用宏动画。 <b>如此</b> 如果用户界面动画或图表动画已启用。 设置为 <b>False</b> (默认情况下没有) 动画。 如果在宏运行期间设置为<b>True，</b>它将启用动画，然后在宏运行后将重置为<b>False。</b> 读/写 <b>boolean</b> (<b>bool in</b> C#) 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果对 Microsoft Office 启用声音，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> 一个对象，该对象代表应用程序的错误检查选项。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">必需的 <b>对象</b>。 使用 Microsoft Excel 命名约定的对象名称。</param>
        <summary>将 Microsoft Excel 名称转换为一个对象或值。</summary>
        <returns>To be added.</returns>
        <remarks><para>该方法可使用下列 Microsoft Excel 名称类型：</para>
          <list type="bullet">
            <item>
              <description>A1 格式引用。可以通过 A1 格式表示法引用单个单元格。所有引用均视为绝对引用。</description>
            </item>
            <item>
              <description>区域。在引用中可以使用区域、交集和联合运算符（分别为冒号、空格和逗号）。</description>
            </item>
            <item>
              <description>定义的名称。可用宏语言指定任何名称。</description>
            </item>
            <item>
              <description>外部引用。可以使用 ! 运算符引用另一工作簿中的单元格或已定义的名称，例如，Evaluate("[BOOK1.XLS]Sheet1!A1")。</description>
            </item>
          </list>
          <para>
            <b>注意</b>：使用方括号 (例如，"[A1：C5]") 与使用字符串参数调用 <b>Evaluate</b> 方法相同。 使用方括号的优点在于代码更短。 使用 <b>Evaluate</b> 的优点是参数是字符串，因此可以在代码中构造字符串或使用变量。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 个集合，该集合代表Microsoft Excel工作簿中所有的 4.0 国际宏表。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 个集合，该集合代表Microsoft Excel 4.0 宏表的所有工作表。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">必需的 <b>字符串</b> 。 一个不带等号的 Microsoft Excel 4.0 宏语言函数。 所有引用必须是像 R1C1 这样的字符串。 如果 <paramref name="String" /> 包含嵌入的双引号，则必须将其双引号。 例如，若要运行宏函数 =MID ("sometext"，1，4 <paramref name="String" />) ，必须是"MID (""sometext""，1，4) "。</param>
        <summary>运行 Microsoft Excel 4.0 宏函数，然后返回函数的结果。 返回结果的类型取决于函数的类型。</summary>
        <returns>To be added.</returns>
        <remarks><para>Microsoft Excel 4.0 宏不在当前工作簿或工作表的环境中求值。 也就是说所有的引用都应该是外部引用，而且需要明确指定工作簿名。 例如，若要在 Book1 Microsoft Excel 4.0 宏"My_Macro"，必须使用"Book1！My_Macro () "。 如果不指定工作簿名，此方法将失效。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 自动将格式和公式扩展到清单中新增的数据上，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks><para>要实现格式和公式的扩展，则清单中新行或新列前五行或五列中至少应有三行或三列必须具有这些格式和公式，且数据必须添加到清单的底部或右方。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个值（常量），该值指定 Microsoft Excel 如何处理对所需功能尚未安装的方法和属性的调用。 读/写 <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" /> 。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>MsoFeatureInstall</b> 可以是以下 <b>MsoFeatureInstall</b> 常量之一：</para>
          <list type="bullet">
            <item>
              <description>
                <b>msoFeatureInstallNone</b>   调用卸载的功能时，运行时生成一个通用的自动化错误。 这是默认常量。</description>
            </item>
            <item>
              <description>
                <b>msoFeatureInstallOnDemand</b>   提示用户安装新功能。</description>
            </item>
            <item>
              <description>
                <b>msoFeatureInstallOnDemandWithUI</b>   在安装过程中显示进度表;不会提示用户安装新功能。</description>
            </item>
          </list>
          <para>可以使用 <b>msoFeatureInstallOnDemandWithUI</b> 常量来防止用户误以为在安装某功能时应用程序没有响应。如果希望只有开发者才能安装某些功能，则可使用 <b>msoFeatureInstallNone</b> 常量。</para>
          <para>如果将 属性设置为 False ，则即使 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>FeatureInstall</b>属性设置为<b></b><b>msoFeatureInstallOnDemand</b>，也不会提示用户安装新功能。 如果 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 该属性设置为 <b>True</b>，则当 <b>FeatureInstall</b> 属性设置为 <b>msoFeatureInstallOnDemand</b>时，将显示安装进度表。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">可选 <b>对象</b>。 转换器的长名称，包括 Windows 中的文件类型搜索字符串，例如"Lotus 1-2-3 文件 (*.wk*) "。</param>
        <param name="Index2">可选 <b>对象</b>。 转换器 DLL 或代码资源的路径。</param>
        <summary>返回有关已安装的文件转换器的信息。 如果没有安装转换器，则返回<b>Null。</b></summary>
        <value>To be added.</value>
        <remarks><para>如果不指定参数，则此属性返回一个数组，其中包含有关所有已安装的文件转换器的信息。 数组中的每一行包含有关单个文件转换器的信息，如下表所示。</para>
          <list type="table">
            <item>
              <term>1</term>
              <description>转换器的长名称</description>
            </item>
            <item>
              <term>2</term>
              <description>转换器动态 DLL 或代码资源的路径</description>
            </item>
            <item>
              <term>3</term>
              <description>文件扩展名搜索字符串</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType">必需 <see cref="T:Microsoft.Office.Core.MsoFileDialogType" /> 。 文件对话框的类型。<b>MsoFileDialogType</b> 可以是以下 <b>MsoFileDialogType</b> 常量之一<b>：msoFileDialogFilePicker</b> 允许用户选择文件。<b>msoFileDialogFolderPicker</b> 允许用户选择文件夹。<b>msoFileDialogOpen</b> 允许用户打开文件。<b>msoFileDialogSaveAs</b> 允许用户保存文件。</param>
        <summary>返回 <see cref="T:Microsoft.Office.Core.FileDialog" /> 一个对象，该对象代表文件对话框的实例。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> 一个集合，该集合代表用于保存可供用户Microsoft Excel。 只读。</summary>
        <value>返回 <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Core.FileSearch" /> 用于文件搜索的对象。 此属性仅适用于 Microsoft Windows。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置Microsoft Excel文件之前如何验证这些文件。</summary>
        <value><see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> 对象。</value>
        <remarks><para>读/写。</para>
          <para>未通过验证的文件将在受保护的视图窗口中打开。 如果设置 <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> 属性，该设置将在应用程序打开的整个会话中保持有效。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置Microsoft Excel数据透视表的数据缓存内容进行验证的方法。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> 对象。</value>
        <remarks><para>读/写。</para>
          <para>包含未验证的数据缓存的文件将在“受保护的视图”窗口中打开。 如果设置 <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> 属性，该设置将在应用程序打开的整个会话中保持有效。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>显示“打开”对话框。</summary>
        <returns>To be added.</returns>
        <remarks><para>本方法显示“打开”对话框并让用户打开一个文件。如果成功打开一个新文件，则该方法返回 <b>True</b>。如果用户退出该对话框，则该方法返回 <b>False</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置或返回要查找的单元格格式类型的搜索条件。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在此属性设置为 <b>True</b> 之后输入的所有数据都将使用该属性设置的固定小数位数进行 <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> 格式设置。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置该属性设置为 True 时所使用的固定 <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> 小数位数。 <b></b></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>如果</b>为 TRUE，Excel快速填充功能已启用且处于活动状态。 <b>Boolean</b> (<b>bool in</b> C#) Read/Write</summary>
        <value>To be added.</value>
        <remarks><para>快速填充可检测何时修改适合模式的数据，这些数据可以填充并应用于工作簿中的其他数据，然后使用结果自动向下填充列。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果启用了快速填充功能，则其为<b>True。</b> <b>Boolean</b> (<b>bool in</b> C#) Read/Write</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>允许用户指定行中编辑栏的高度。 读/写。</summary>
        <value><b>Integer</b></value>
        <remarks><para>如果 <b>FormulaBarHeight</b> 的指定值大于可查看窗口空间，则编辑栏的大小将调整为等于窗口高度。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 Microsoft Excel 能够获取数据透视表数据时，返回 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>该属性确定是使用传统表示法方法还是新的结构化引用表示法方法来引用公式 <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> 中的表。 读/写。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">必需<b>类型，类型为 Integer。</b> 列表数字。</param>
        <summary>返回一个自定义序列（一个字符串数组）。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">必需的 <b>对象</b>。 字符串数组。</param>
        <summary>返回字符串数组的自定义序列号。使用本方法既可对内置序列进行匹配，也可对自定义序列进行匹配。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果没有对应序列，则使用本方法将出错。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter">可选 <b>对象</b>。 指定文件筛选条件的字符串。此字符串由文件筛选器字符串对后跟 MS-DOS 通配符文件筛选器规范组成，每个部分和每个对用逗号分隔。 各对字符串在“文件类型”下拉列表框中列出。 例如，以下字符串指定两个文件筛选器 text 和 addin："Text Files (*.txt) ，*.txt，Add-In Files (*.xla) ，*.xla"。若要对单个文件筛选器类型使用多个 MS-DOS 通配符表达式，请使用分号分隔通配符表达式，例如，"Visual Basic Files (*.bas;*.txt) 、.bas;**.txt"。如果省略，此参数默认为"所有文件 (*。*) ，*.*"。</param>
        <param name="FilterIndex">可选 <b>对象</b>。 指定默认文件筛选条件的索引号，从 1 到 中指定的筛选器数 <paramref name="FileFilter" /> 。 如果此参数被省略或大于存在的筛选器数，使用的是第一个文件筛选器。</param>
        <param name="Title">可选 <b>对象</b>。 指定对话框的标题。 如果此参数被省略，标题为“打开”。</param>
        <param name="ButtonText">可选 <b>对象</b>。 仅限 Macintosh。</param>
        <param name="MultiSelect">可选 <b>对象</b>。 若为 <b>True</b>，允许选择多个文件名。 若为 <b>False</b>，仅允许选择一个文件名。 默认值为 <b>False</b>。</param>
        <summary>显示标准的“打开”对话框，并获取用户文件名，而不必真正打开任何文件。</summary>
        <returns>To be added.</returns>
        <remarks><para>此方法返回选定文件名或用户输入的文件名。 返回的文件名可能包含路径规范。 如果为 True ，则返回值是所选文件名的数组， (即使只选择了一 <paramref name="MultiSelect" /> 个文件名) 。 <b></b> 如果用户取消了对话框，则该值为 <b>False</b>。</para>
          <para>此方法可能会更改当前驱动器或文件夹。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">可选 <b>对象</b>。 指定要转化为拼音文本的文本。 如果省略此参数，则返回下一个可能的 (文本字符串) 以前指定的文本 <paramref name="Text" /> 字符串。 如果没有其他可能的拼音文本串，则返回一个空字符串。</param>
        <summary>返回指定文本串的日语拼音文本。本方法只有在选择或安装了 Microsoft Office 的日语语言支持时才有效。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename">可选 <b>对象</b>。 指定建议的文件名。 如果省略该参数，Microsoft Excel 使用活动工作簿的名称。</param>
        <param name="FileFilter">可选 <b>对象</b>。 指定文件筛选条件的字符串。此字符串由文件筛选器字符串对后跟 MS-DOS 通配符文件筛选器规范组成，每个部分和每个对用逗号分隔。 各对字符串在“文件类型”下拉列表框中列出。 例如，以下字符串指定两个文件筛选器 text 和 addin："Text Files (*.txt) ， *.txt， Add-In Files (*.xla) ， *.xla"。若要对* 单个文件筛选器类型使用多个 MS-DOS 通配符表达式，请使用分号分隔通配符表达式，例如，"Visual Basic Files (.bas;*.txt) 、.bas;**.txt"。如果省略，此参数默认为"所有文件 (*。*) ，*.*"。</param>
        <param name="FilterIndex">可选 <b>对象</b>。 指定默认文件筛选条件的索引号，从 1 到 中指定的筛选器数 <paramref name="FileFilter" /> 。 如果此参数被省略或大于存在的筛选器数，使用的是第一个文件筛选器。</param>
        <param name="Title">可选 <b>对象</b>。 指定对话框的标题。 如果省略该参数，则使用默认标题。</param>
        <param name="ButtonText">可选 <b>对象</b>。 仅限 Macintosh。</param>
        <summary>显示标准的“另存为”对话框，获取用户文件名，而无须真正保存任何文件。</summary>
        <returns>To be added.</returns>
        <remarks><para>本方法返回选定的文件名或用户输入的名称。返回的名称可能包含路径说明。如果用户取消了对话框，则该值为 <b>False</b>。</para>
          <para>此方法可能会更改当前驱动器或文件夹。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference">可选 <b>对象</b>。 目标。 可以是对象、包含 R1C1 样式表示法中的单元格引用的字符串，或者是包含过程名称Visual Basic <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 字符串。 如果省略该参数，目标将为最近一次用 <b>Goto</b> 方法选定的区域。</param>
        <param name="Scroll">可选 <b>对象</b>。 如果为 <b>True</b>，则滚动窗口直至区域的左上角出现在窗口的左上角中。 如果为 <b>False</b>，则不滚动窗口。 默认值为 <b>False</b>。</param>
        <summary>选择任何工作簿Visual Basic区域或活动过程，如果该工作簿尚未处于活动状态，则激活该工作簿。</summary>
        <remarks><para>此方法与 方法在 <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> 以下方面不同：</para>
          <list type="bullet">
            <item>
              <description>如果指定的区域不在位于最前面屏幕的工作表中，Microsoft Excel 将在选定该区域之前切换至该工作表。（如果对不在屏幕的最前面的工作表中的区域使用 <b>Select</b> 方法，则选定该区域时并不激活该工作表）。</description>
            </item>
            <item>
              <description>此方法具有 <paramref name="Scroll" /> 允许您滚动目标窗口的参数。</description>
            </item>
            <item>
              <description>使用 <b>Goto</b> 方法时，在 <b>Goto</b> 方法 (之前的选定内容) 将添加到之前所选内容数组 (有关详细信息，请参阅属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />) 。 可以使用该功能快速跳过选定区域，选定区域最多为四个。</description>
            </item>
            <item>
              <description><b>Select</b>方法具有 <paramref name="Replace" /> 参数<b>;Goto</b>方法没有。</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>主应用程序窗口的高度（以点表示）。 如果窗口处于最小化，则此属性为只读，并引用图标的高度。 如果窗口处于最大化，则无法设置此属性。 使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> 属性可确定窗口状态。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile">可选 <b>对象</b>。 要显示的联机帮助文件名。 如果不指定该参数，则使用“Microsoft Excel 帮助”。</param>
        <param name="HelpContextID">可选 <b>对象</b>。 指定帮助主题上下文 ID 号。 如果不指定该参数，将显示“帮助主题”对话框。</param>
        <summary>显示一个帮助主题。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置Excel是否使用高质量模式打印图形。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>此属性对应于“Excel 选项”对话框“高级”类别的“打印”部分中“图形的高质量模式”复选框的设置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回调用该实例的实例的实例Microsoft Excel。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由指定对象Microsoft Excel 2010对象的实例的 <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 句柄。</summary>
        <value>由指定对象Microsoft Excel 2010实例的 <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 句柄。</value>
        <remarks><para>只读<b>变体</b>。</para>
          <para>此属性在 32 位和 64 位版本的 Excel 中均返回正确的句柄。 它扩展了对象属性的功能，这仅在 32 位版本的 Excel <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 中Excel。</para>
          <para>与数据类型一起使用的理想方法为 <b>LongPtr</b> 数据类型。 将此属性返回的值分配给<b>LongPtr</b>变量将按预期在 32 位和 64 位版本的 Excel。 出于内部实现原因<b>，将属性定义为 Variant。</b> 但是，它在 32 位系统上始终返回 32 位值，在 64 位系统上返回 64 位值。</para>
          <para>此属性仅从 Excel 2010 开始工作，并且仅在 64 位版本的 Excel。 如果必须编写同样与 Excel 早期版本一起运行的代码，为了避免编译错误，请阅读 #if Win64 条件编译指令下的此属性，并使用 #else 指令下的 属性。 <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /></para>
          <para>
            <b>注意</b>：此属性在 2010 年 32 位和 64 位环境中Excel良好。 因此，如果代码只用于 Excel 2010 或更高版本（32 位或 64 位）时，它可以读取此属性，而无需条件编译。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一<b>个 Integer</b>类型的值，指示窗口的顶级Microsoft Excel句柄。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果远程 DDE 请求被忽略，则该值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches">必需 <b>双精度型</b>。 指定要转换为磅值的英寸值。</param>
        <summary>将度量单位从英寸转换为磅。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt">必需的 <b>对象</b>。 要在对话框中显示的消息。 它可以是字符串、数字、日期或 <b>布尔</b> 值。</param>
        <param name="Title">可选 <b>对象</b>。 输入框的标题。 如果省略此参数，则默认标题为“输入”。</param>
        <param name="Default">可选 <b>对象</b>。 指定在对话框最初显示时文本框中显示的值。 如果省略此参数，即表示将文本框留空。 此值可以是 <b>Range</b> 对象。</param>
        <param name="Left">可选 <b>对象</b>。 指定对话框相对于屏幕左上角的 x 位置（以点表示）。</param>
        <param name="Top">可选 <b>对象</b>。 指定对话框相对于屏幕左上角的 y 位置（以点表示）。</param>
        <param name="HelpFile">可选 <b>对象</b>。 此输入框使用的帮助文件名。 如果存在 <paramref name="HelpFile" /> 和 <paramref name="HelpContextID" /> 参数，对话框中将显示"帮助"按钮。</param>
        <param name="HelpContextID">可选 <b>对象</b>。 中上下文 ID帮助主题的编号 <paramref name="HelpFile" /> 。</param>
        <param name="Type">可选 <b>对象</b>。 指定返回的数据类型。 如果省略此参数，则对话框返回文本。 可以是下列值之一或总和。可以使用 的允许值的总和 <paramref name="Type" /> 。 例如，对于可接受文本和数字的输入框，设置为 <paramref name="Type" /> 1 + 2。</param>
        <summary>显示一个接收用户输入的对话框。返回此对话框中输入的信息。</summary>
        <returns>To be added.</returns>
        <remarks><para><b>InputBox</b> 可用于显示简单对话框，方便用户输入要在宏中使用的信息。 对话框中有“确认”按钮和“取消”按钮。 If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box. If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</para>
          <para>如果为 0，InputBox 将返回文本格式的公式， <paramref name="Type" /> 例如，"=2*PI () /360"。 <b></b> 只要公式中有引用，就会以 A1 样式引用的形式返回。  (用于 <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> 转换引用样式。) </para>
          <para>如果 <paramref name="Type" /> 为 8，InputBox 将返回<b>一个 Range</b>对象。 <b></b></para>
          <para>如果使用 <b>InputBox</b> 方法要求用户输入公式，则必须使用 属性将公式 <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> 分配给 <b>Range</b> 对象。 输入公式使用用户语言。</para>
          <para><b>InputBox</b>方法与<b>InputBox</b>函数的一个区别是，它允许对用户输入进行选择性验证，并且可用于 Microsoft Excel 对象、错误值和公式。 没有对象限定符的 InputBox 调用 <b>InputBox</b> 函数。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 处于交互模式，则该属性值为 <b>True</b>；该属性值通常为 <b>True</b>。 如果将此属性设置为<b>False</b>，则Microsoft Excel将阻止键盘和鼠标输入的所有输入 (代码对话框显示的对话框的输入除外) 。 阻止用户输入将防止用户在代码移动或激活代码时Microsoft Excel代码。</summary>
        <value>To be added.</value>
        <remarks><para>如果要编写代码以与另一个应用程序中的 Microsoft Excel通信，则此属性非常有用。</para>
          <para>如果将该属性设为 <b>False</b>，记注要将它设回 <b>True</b>。 Microsoft Excel代码停止运行时，系统不会自动将此属性设置回<b>True。</b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">必需的 <b>对象</b>。 要返回的设置。 可以是下表 <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> 中列出的常量之一。</param>
        <summary>返回当前国家/地区和国际设置的信息。</summary>
        <value>To be added.</value>
        <remarks><para>括号</para>
          <list type="table">
            <item>
              <term>
                <b>xlLeftBrace</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>在字面数组中左大括号 ({) 的替代字符。</description>
            </item>
            <item>
              <term>
                <b>xlLeftBracket</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>在 R1C1-样式相对引用中左方括号 ([) 的替代字符。</description>
            </item>
            <item>
              <term>
                <b>xlLowerCaseColumnLetter</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>小写列字母。</description>
            </item>
            <item>
              <term>
                <b>xlLowerCaseRowLetter</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>小写行字母。</description>
            </item>
            <item>
              <term>
                <b>xlRightBrace</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>在字面数组中右大括号 (}) 的替代字符。</description>
            </item>
            <item>
              <term>
                <b>xlRightBracket</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>在 R1C1-样式引用中右方括号 (]) 的替代字符。</description>
            </item>
            <item>
              <term>
                <b>xlUpperCaseColumnLetter</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>大写列字母。</description>
            </item>
            <item>
              <term>
                <b>xlUpperCaseRowLetter</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>大写行字母（对于 R1C1-样式引用）。</description>
            </item>
          </list>
          <para>国家/地区设置</para>
          <list type="table">
            <item>
              <term>
                <b>xlCountryCode</b>
              </term>
              <description>
                <b>Integer</b>
              </description>
              <description>Microsoft Excel 的国家/地区版本。</description>
            </item>
            <item>
              <term>
                <b>xlCountrySetting</b>
              </term>
              <description>
                <b>Integer</b>
              </description>
              <description>Windows“控制面板”中的当前国家/地区设置。</description>
            </item>
            <item>
              <term>
                <b>xlGeneralFormatName</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>“常规”数字格式名称。</description>
            </item>
          </list>
          <para>货币</para>
          <list type="table">
            <item>
              <term>
                <b>xlCurrencyBefore</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果货币符号在货币值之前，则返回 
                <b>True</b>；如果货币符号在货币值之后，则返回 <b>False</b>。</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyCode</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>货币符号。</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyDigits</b>
              </term>
              <description>
                <b>Integer</b>
              </description>
              <description>货币格式中的小数位数。</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyLeadingZeros</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果显示零货币值的前导零，则返回 
                <b>True</b>。</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyMinusSign</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果对负数使用负号，则返回 
                <b>True</b>；如果使用括号，则返回 <b>False</b>。</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyNegative</b>
              </term>
              <description>
                <b>Integer</b>
              </description>
              <description>负数货币值的货币格式：0 = (symbolx) 或 (xsymbol) 1 = -symbolx 或 -xsymbol 2 = symbol-x 或 x-symbol 3 = symbolx- 或 xsymbol-，其中 symbol 为国家/地区的货币符号。 请注意货币符号的位置由 <b>xlCurrencyBefore</b> 决定。</description>
            </item>
            <item>
              <term>
                <b>xlCurrencySpaceBefore</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果在货币符号前面添加空格，则返回 
                <b>True</b>。</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyTrailingZeros</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果显示零货币值的尾部零，则返回 
                <b>True</b>。</description>
            </item>
            <item>
              <term>
                <b>xlNoncurrencyDigits</b>
              </term>
              <description>
                <b>Integer</b>
              </description>
              <description>以非货币格式使用的小数位数。</description>
            </item>
          </list>
          <para>日期和时间</para>
          <list type="table">
            <item>
              <term>
                <b>xl24HourClock</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果使用 24 小时制时间，则返回 
                <b>True</b>；如果使用 12 小时制时间，则返回 <b>False</b>。</description>
            </item>
            <item>
              <term>
                <b>xl4DigitYears</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果使用四位年，则返回 
                <b>True</b>；如果使用两位年，则返回 <b>False</b>。</description>
            </item>
            <item>
              <term>
                <b>xlDateOrder</b>
              </term>
              <description>
                <b>Integer</b>
              </description>
              <description>日期元素的次序：0 = 月-日-年 1 = 日-月-年 2 = 年-月-日</description>
            </item>
            <item>
              <term>
                <b>xlDateSeparator</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>日期分隔符 (/)。</description>
            </item>
            <item>
              <term>
                <b>xlDayCode</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>日符号 (d)。</description>
            </item>
            <item>
              <term>
                <b>xlDayLeadingZero</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果在日期中显示前导零，则返回 True。</description>
            </item>
            <item>
              <term>
                <b>xlHourCode</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>小时符号 (h)。</description>
            </item>
            <item>
              <term>
                <b>xlMDY</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果长日期显示中日期次序为月-日-年，则返回 
                <b>True</b>；如果次序为日-月-年，则返回 <b>False</b>。</description>
            </item>
            <item>
              <term>
                <b>xlMinuteCode</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>分钟符号 (m)。</description>
            </item>
            <item>
              <term>
                <b>xlMonthCode</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>月符号 (m)。</description>
            </item>
            <item>
              <term>
                <b>xlMonthLeadingZero</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果以数字显示月份时显示月份中的前导零，则返回 
                <b>True</b>。</description>
            </item>
            <item>
              <term>
                <b>xlMonthNameChars</b>
              </term>
              <description>
                <b>Integer</b>
              </description>
              <description>为了向后兼容总是返回三个字符。月份名称的缩写从 Microsoft Windows 中读取并且可以为任意长度。</description>
            </item>
            <item>
              <term>
                <b>xlSecondCode</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>秒符号 (s)。</description>
            </item>
            <item>
              <term>
                <b>xlTimeSeparator</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>时间分隔符 (:)。</description>
            </item>
            <item>
              <term>
                <b>xlTimeLeadingZero</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果在时间表示中显示前导零，则该值为 
                <b>True</b>。</description>
            </item>
            <item>
              <term>
                <b>xlWeekdayNameChars</b>
              </term>
              <description>
                <b>Integer</b>
              </description>
              <description>为了向后兼容总是返回三个字符。星期名称的缩写从 Microsoft Windows 中读取并且可以为任意长度。</description>
            </item>
            <item>
              <term>
                <b>xlYearCode</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>数字格式中的年符号 (y)。</description>
            </item>
          </list>
          <para>度量系统</para>
          <list type="table">
            <item>
              <term>
                <b>xlMetric</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果使用米制度量系统，则返回 
                <b>True</b>；如果使用英制度量系统，则返回 <b>False</b>。</description>
            </item>
            <item>
              <term>
                <b>xlNonEnglishFunctions</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>如果不以英文显示函数，则返回 
                <b>True</b>。</description>
            </item>
          </list>
          <para>分隔符</para>
          <list type="table">
            <item>
              <term>
                <b>xlAlternateArraySeparator</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>如果当前数组分隔符与小数分隔符相同时替代的数组项分隔符。</description>
            </item>
            <item>
              <term>
                <b>xlColumnSeparator</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>数组文字类型的列分隔符。</description>
            </item>
            <item>
              <term>
                <b>xlDecimalSeparator</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>小数分隔符。</description>
            </item>
            <item>
              <term>
                <b>xlListSeparator</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>列表分隔符。</description>
            </item>
            <item>
              <term>
                <b>xlRowSeparator</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>数组文字类型的行分隔符。</description>
            </item>
            <item>
              <term>
                <b>xlThousandsSeparator</b>
              </term>
              <description>
                <b>字符串</b>
              </description>
              <description>零或千位分隔符。</description>
            </item>
          </list>
          <para>上表显示的符号、分隔符和货币格式可能因所用语言和地理位置而异，而且可能不可用，这取决于选择或安装的语言支持（例如，美国英语）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">必需 <b>范围</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg2">必需 <b>范围</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg3">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg4">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg5">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg6">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg7">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg8">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg9">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg10">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg11">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg12">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg13">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg14">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg15">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg16">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg17">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg18">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg19">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg20">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg21">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg22">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg23">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg24">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg25">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg26">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg27">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg28">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg29">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg30">必需的 <b>对象</b>。 重叠的区域。 必须至少指定两个 <b>Range</b> 对象。</param>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象表示两个或多个范围的矩形交集。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指定的工作簿是否在"受保护的视图"窗口中打开。</summary>
        <value>如果指定的工作簿在"受保护的视图"窗口中打开，则其参数为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>只读</para>
          <para>使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> 属性可确定工作簿在"受保护的视图"窗口中是否打开。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 使用迭代来处理循环引用，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Core.LanguageSettings" /> 对象，该对象包含有关 Microsoft Excel 中的语言Microsoft Excel。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置操作中所需的单元格的最大数目，如果超过此数目，将触发警告。 读/写。</summary>
        <value><b>Integer</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从屏幕左边缘到主窗口左边缘的距离（以Microsoft Excel值。</summary>
        <value>To be added.</value>
        <remarks><para>如果窗口最大化，则此属性返回一个负数，该负数因窗口边框的宽度而异。 如果将此属性设置为 0 (零) 则会使窗口在应用程序窗口最大化时略小一些。 换句话说，如果此属性为 0 (零) ，则主 Microsoft Excel 窗口的左边框将在屏幕上几乎不可见。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回"库"文件夹的路径，但不返回最后的分隔符。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">可选 <b>对象</b>。 宏的名称或用户定义函数 (UDF) 的名称。</param>
        <param name="Description">可选 <b>对象</b>。 宏的描述。</param>
        <param name="HasMenu">可选 <b>对象</b>。 忽略该参数。</param>
        <param name="MenuText">可选 <b>对象</b>。 忽略该参数。</param>
        <param name="HasShortcutKey">可选 <b>对象</b>。 <b>如果为 True，</b> 则还必须在宏 (<paramref name="ShortcutKey" /> 指定快捷键) 。 如果该参数为 <b>False</b>，则不为宏指定快捷键。 如果宏已经有快捷键，则将该参数设置为 <b>False</b> 可删除快捷键。 默认值为 <b>False</b>。</param>
        <param name="ShortcutKey">可选 <b>对象</b>。 如果 为 <paramref name="HasShortcutKey" /> <b>True，则必需</b>;否则忽略。 快捷键。</param>
        <param name="Category">可选 <b>对象</b>。 一个整数，用于指定现有的宏函数 (Financial、Date Time 或 &amp; User Defined，例如) 。 请参阅"备注"部分以确定映射到内置类别的整数。 还可指定自定义类别的字符串。 如果您提供一个字符串，该字符串将被视为"插入函数"对话框中显示的类别名称。 如果此类别名称从未使用过，则将用该名称定义一个新的类别。 如果使用的类别名称与内置名称相同，Excel将用户定义的函数映射到该内置类别。</param>
        <param name="StatusBar">可选 <b>对象</b>。 宏的状态栏文本。</param>
        <param name="HelpContextID">可选 <b>对象</b>。 一个指定分配给宏的帮助主题上下文 ID 的整数。</param>
        <param name="HelpFile">可选 <b>对象</b>。 包含由 定义的帮助主题的帮助文件的名称 <paramref name="HelpContextId" /> 。</param>
        <summary>对应于“宏选项”对话框中的选项。还可使用此方法将用户定义函数 (UDF) 显示在“插入函数”对话框的内置类别或新类别中。</summary>
        <remarks><para>下表列出了哪些整数被映射到可在 Category 参数中使用的内置类别。</para>
          <list type="table">
            <item>
              <term>1</term>
              <description>
                <b>财务</b>
              </description>
            </item>
            <item>
              <term>2</term>
              <description>
                <b>日期 &amp; 时间</b>
              </description>
            </item>
            <item>
              <term>3</term>
              <description>
                <b>数学 &amp; 三角函数</b>
              </description>
            </item>
            <item>
              <term>4 </term>
              <description>
                <b>统计</b>
              </description>
            </item>
            <item>
              <term>5 </term>
              <description>
                <b>查找 &amp; 参考</b>
              </description>
            </item>
            <item>
              <term>6 </term>
              <description>
                <b>数据库</b>
              </description>
            </item>
            <item>
              <term>7 </term>
              <description>
                <b>文本</b>
              </description>
            </item>
            <item>
              <term>8 </term>
              <description>
                <b>逻辑</b>
              </description>
            </item>
            <item>
              <term>9 </term>
              <description>
                <b>信息</b>
              </description>
            </item>
            <item>
              <term>10 </term>
              <description>
                <b>命令</b>
              </description>
            </item>
            <item>
              <term>11</term>
              <description>
                <b>自定义</b>
              </description>
            </item>
            <item>
              <term>12 </term>
              <description>
                <b>宏控件</b>
              </description>
            </item>
            <item>
              <term>13</term>
              <description>
                <b>DDE/External</b>
              </description>
            </item>
            <item>
              <term>14 </term>
              <description>
                <b>用户定义</b>
              </description>
            </item>
            <item>
              <term>15</term>
              <description>第一个自定义类别</description>
            </item>
            <item>
              <term>16 </term>
              <description>第二个自定义类别</description>
            </item>
            <item>
              <term>17 </term>
              <description>第三个自定义类别</description>
            </item>
            <item>
              <term>18 </term>
              <description>第四个自定义类别</description>
            </item>
            <item>
              <term>19</term>
              <description>第五个自定义类别</description>
            </item>
            <item>
              <term>20</term>
              <description>第六个自定义类别</description>
            </item>
            <item>
              <term> 21</term>
              <description>第七个自定义类别</description>
            </item>
            <item>
              <term>22</term>
              <description>第八个自定义类别</description>
            </item>
            <item>
              <term>23</term>
              <description>第九个自定义类别</description>
            </item>
            <item>
              <term>24</term>
              <description>第十个自定义类别</description>
            </item>
            <item>
              <term>25</term>
              <description>第十一个自定义类别</description>
            </item>
            <item>
              <term>26</term>
              <description>第十二个自定义类别</description>
            </item>
            <item>
              <term>27</term>
              <description>第十三个自定义类别</description>
            </item>
            <item>
              <term>28</term>
              <description>第十四个自定义类别</description>
            </item>
            <item>
              <term>29</term>
              <description>第十五个自定义类别</description>
            </item>
            <item>
              <term>30</term>
              <description>第十六个自定义类别</description>
            </item>
            <item>
              <term>31</term>
              <description>第十七个自定义类别</description>
            </item>
            <item>
              <term>32</term>
              <description>第十八个自定义类别</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭 Microsoft Excel 建立的 MAPI 邮件会话。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">可选 <b>对象</b>。 邮件帐户名或 Microsoft Exchange 配置文件名。 如果省略该参数，将使用默认的邮件帐户名。</param>
        <param name="Password">可选 <b>对象</b>。 邮件帐户密码。 在 Microsoft Exchange 中忽略该参数。</param>
        <param name="DownloadNewMail">可选 <b>对象</b>。 如果为 <b>True</b>，则立即下载新邮件。</param>
        <summary>登录进入 MAPI Mail 或 Microsoft Exchange 并建立一个邮件会话。如果 Microsoft Mail 不处于运行状态，必须在使用邮件或文档传送功能之前先使用本方法建立邮件会话。</summary>
        <remarks><para>Microsoft Excel 在尝试建立新的邮件会话之前将先退出所有已建立的邮件会话。</para>
          <para>要直接返回到系统默认的邮件会话，请省略名称和密码这两个参数。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果存在活动会话，则以十六进制 (返回 MAPI 邮件会话) ，如果没有会话，则返回<b>Null。</b></summary>
        <value>To be added.</value>
        <remarks><para>该属性仅应用于由 Microsoft Excel 建立的邮件会话（不返回 Microsoft Mail 的邮件会话号）。</para>
          <para>该属性不用于 PowerTalk 邮件系统。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回安装在主机上的邮件系统。 只读 <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" /> 。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>XlMailSystem</b> 可以是以下 <b>XlMailSystem</b> 常量之一：</para>
          <para>
            <b>xlMAPI</b>
          </para>
          <para>
            <b>xlNoMailSystem</b>
          </para>
          <para>
            <b>xlPowerTalk</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果自动调整以其他国家/地区的标准纸张大小（例如，A4）来设置格式的文档，以便以用户所在的国家/地区的标准纸张大小（例如，信件）来正确地打印文档，则该值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数学协处理器可用，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel 处理循环引用时迭代之间的最大变化值。</summary>
        <value>To be added.</value>
        <remarks><para><see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />属性设置在解析循环引用Microsoft Excel可以使用的最大迭代次数。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel 处理循环引用的最大迭代次数。</summary>
        <value>To be added.</value>
        <remarks><para>该属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> 在循环引用解析时设置每个迭代Microsoft Excel的最大变化量。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定应用程序中使用的度量单位。 读取 <b>/写入</b> 对应于枚举中的常量的 Integer <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> 值。</summary>
        <value><b>Integer</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以字节为单位返回仍可供Microsoft Excel的内存量。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果为 True，将应用程序的多个实例合并到单个实例中。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果鼠标可用，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果按 Enter (Return) 键后活动单元格的位置改变，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks><para>使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> 属性指定活动单元格的移动方向。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置当用户按 Enter 时，活动单元格的移动方向。 读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /> 。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>XlDirection</b> 可以是以下 <b>XlDirection 常量</b> 之一：</para>
          <para>
            <b>xlDown</b>
          </para>
          <para>
            <b>xlToLeft</b>
          </para>
          <para>
            <b>xlToRight</b>
          </para>
          <para>
            <b>xlUp</b>
          </para>
          <para>如果 <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> 该属性为 <b>False，</b>则无论 <b>MoveAfterReturnDirection</b> 属性是如何设置的，所选内容都一定不会移动。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> 一个对象，该对象控制 2007 年 2007 年新增Excel重新计算设置。 只读。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回的对象的名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Names" /> 一个集合，该集合代表活动工作簿中所有的名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回保存模板的网络路径。 网络路径不存在时，该属性返回一个空的字符串。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <b>个 NewFile</b> 对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个集合，该集合包含由最近的查询表或数据透视表操作 <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> 生成的所有 ODBC 错误。</summary>
        <value>To be added.</value>
        <remarks><para>如果同时运行多个查询，则集合包含最后完成的查询中的 <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> ODBC 错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 ODBC 查询时间限制（以秒表示）。 默认值为 45 秒。</summary>
        <value>To be added.</value>
        <remarks><para>返回值为 0（零）表示没有时间限制。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> 集合，该集合代表最近一次 OLE DB 查询返回的错误信息。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key">必需的 <b>字符串</b> 。 表示要按的键的字符串。</param>
        <param name="Procedure">可选 <b>对象</b>。 表示要运行的过程名称的字符串。 如果 <paramref name="Procedure" /> 为空文本 ("，) 时 <paramref name="Key" /> 不执行任何操作。 该格式的 <b>OnKey</b> 将更改键击在 Microsoft Excel 中产生的正常结果。 如果省略，则恢复为在Microsoft Excel中的正常结果，并清除使用以前的 OnKey 方法进行 <paramref name="Procedure" /> <paramref name="Key" /> 的任何特殊<b></b>键分配。</param>
        <summary>当按特定键或特定的组合键时运行指定的过程。</summary>
        <remarks><para>该参数可以指定与 Alt、Ctrl 或 Shift 组合使用的任何单个键，也可以指定 <paramref name="Key" /> 这些键的任意组合。 每一个键可由一个或多个字符表示，比如 "a" 表示字符 a，"{ENTER}" 表示 Enter。</para>
          <para>若要指定按对应的键（例如 Enter 或 Tab）时的非显示字符，请使用下表所列出的代码。表中的每个代码表示键盘上的一个对应键。</para>
          <list type="table">
            <item>
              <term>Backspace</term>
              <description>{BACKSPACE} 或 {BS}</description>
            </item>
            <item>
              <term>Break</term>
              <description>{BREAK}</description>
            </item>
            <item>
              <term>Caps Lock</term>
              <description>{CAPSLOCK}</description>
            </item>
            <item>
              <term>清除</term>
              <description>{CLEAR}</description>
            </item>
            <item>
              <term>Delete 或 Del</term>
              <description>{DELETE} 或 {DEL}</description>
            </item>
            <item>
              <term>向下键</term>
              <description>{DOWN}</description>
            </item>
            <item>
              <term>结束</term>
              <description>{END}</description>
            </item>
            <item>
              <term>Enter</term>
              <description>~ (tilde) </description>
            </item>
            <item>
              <term>Enter（数字小键盘）</term>
              <description>{ENTER}</description>
            </item>
            <item>
              <term>Esc</term>
              <description>{ESCAPE} 或 {ESC}</description>
            </item>
            <item>
              <term>F1 到 F15</term>
              <description>{F1} 到 {F15}</description>
            </item>
            <item>
              <term>帮助</term>
              <description>{HELP}</description>
            </item>
            <item>
              <term>主页</term>
              <description>{HOME}</description>
            </item>
            <item>
              <term>Ins</term>
              <description>{INSERT}</description>
            </item>
            <item>
              <term>向左键</term>
              <description>{LEFT}</description>
            </item>
            <item>
              <term>Num Lock</term>
              <description>{NUMLOCK}</description>
            </item>
            <item>
              <term>PageDown</term>
              <description>{PGDN}</description>
            </item>
            <item>
              <term>PageUp</term>
              <description>{PGUP}</description>
            </item>
            <item>
              <term>Return</term>
              <description>{RETURN}</description>
            </item>
            <item>
              <term>向右键</term>
              <description>{RIGHT}</description>
            </item>
            <item>
              <term>Scroll Lock</term>
              <description>{SCROLLLOCK}</description>
            </item>
            <item>
              <term>Tab</term>
              <description>{TAB}</description>
            </item>
            <item>
              <term>向上键</term>
              <description>{UP}</description>
            </item>
          </list>
          <para>还可指定与 Shift 和/或 Ctrl 和/或 Alt 组合使用的键。若要指定与其他键组合使用的键，可使用下表。</para>
          <list type="table">
            <item>
              <term>Shift</term>
              <description>+（加号）</description>
            </item>
            <item>
              <term>Ctrl</term>
              <description>^ (点) </description>
            </item>
            <item>
              <term>Alt</term>
              <description>%（百分号）</description>
            </item>
          </list>
          <para>若为特定字符指定处理过程（如 +、^、% 等等），可将此字符用圆括号括起。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">必需的 <b>字符串</b> 。 与“编辑”菜单的“重复”命令一起显示的文本。</param>
        <param name="Procedure">必需的 <b>字符串</b> 。 选择“编辑”菜单的“重复”命令时将运行的过程的名称。</param>
        <summary>设置“重复”菜单项和过程的名称；如果在运行设置此属性的过程之后选择“编辑”菜单的“重复”命令，将运行此处命名的过程。</summary>
        <remarks><para>如果某个过程不使用 <b>OnRepeat</b> 方法，则 Repeat 命令将重复最近运行的过程。</para>
          <para>该过程必须使用 <b>OnRepeat</b> 和 last 方法，以防止过程中的后续操作覆盖重复和 <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> 撤消过程。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime">必需的 <b>对象</b>。 希望此过程运行的时间。</param>
        <param name="Procedure">必需的 <b>字符串</b> 。 要运行的过程的名称。</param>
        <param name="LatestTime">可选 <b>对象</b>。 可以运行相应过程的最后时间。 例如，如果设置为 + 30 并且 Microsoft Excel 由于另一个过程正在运行而未处于 Ready、Copy、Cut 或 Find 模式，Microsoft Excel 将等待 <paramref name="LatestTime" /> <paramref name="EarliestTime" /> 30 秒，直到第一个过程 <paramref name="EarliestTime" /> 完成。 如果Microsoft Excel 30 秒钟内未进入"就绪"模式，则过程将不会运行。 如果省略此参数，Microsoft Excel 将会一直等待，直到可以运行该过程。</param>
        <param name="Schedule">可选 <b>对象</b>。 <b>如果为 True，</b> 将安排新的 <b>OnTime</b> 过程。 如果为 <b>False</b>，则清除以前设置的过程。 默认值为 <b>True</b> 。</param>
        <summary>安排一个过程在将来的特定时间运行（既可以是具体指定的某个时间，也可以是指定的一段时间之后）。</summary>
        <remarks><para>使用 Now+TimeValue (时间) 计划从现在开始计算的特定时间量 (运行) 运行。 使用 TimeValue(time) 可安排某个过程只运行指定的时间。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">必需的 <b>字符串</b> 。 与“撤消”命令（“编辑”菜单）一起显示的文本。</param>
        <param name="Procedure">必需的 <b>字符串</b> 。 选择“编辑”菜单的“撤消”命令时运行的过程的名称。</param>
        <summary>设置“撤消”的文本和过程的名称；如果在运行设置该属性的过程之后选择“编辑”菜单上的“撤消”命令，将运行此处命名的过程。</summary>
        <remarks><para>如果过程不使用 <b>OnUndo</b> 方法，则禁用"撤消"命令。</para>
          <para>最后，该过程必须使用 <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> <b>和 OnUndo</b> 方法，以防止过程中的后续操作覆盖重复和撤消过程。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置每当激活一个窗口时要运行的过程的名称。</summary>
        <value>To be added.</value>
        <remarks><para>当其他过程切换到窗口时，或者当通过 DDE 通道接收切换到窗口的命令时，不运行此属性指定的过程。 相反，此过程会响应用户的操作，例如，用鼠标单击窗口，单击"编辑"菜单上的"转到"，等等。</para>
          <para>如果一个工作表或宏表具有为它定义的 Auto_Activate 或 Auto_Deactivate 宏，这些宏将会在 <b>OnWindow</b> 属性指定的过程之后运行。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回当前操作系统的名称和版本号，例如，"Windows (32 位) 4.00"或"Macintosh 7.00"。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回注册组织名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回应用程序的完整路径，不包括应用程序的最终分隔符和名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回路径分隔符 (" \") 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表使用结构化选择，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 前一区域或者名称的索引号（从 1 到 4）。</param>
        <summary>返回最后选择的四个区域或名称的数组。 数组中每个元素都是一 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 个对象。</summary>
        <value>To be added.</value>
        <remarks><para>每次使用"名称"框或"转到"命令 ("编辑"菜单) 转到某个区域或单元格时，或者每次宏调用该方法时，前一区域都作为元素编号 1 添加到此数组中，数组中的其他项将下移。 <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否打开与打印机的通信。</summary>
        <value>如果打开与打印机的通信，则其为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>
            <b>boolean</b> 读/写。</para>
          <para>将 <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> 属性设置为 <b>false</b> 可加快设置 PageSetup 属性的代码的执行速度。 将 <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> 属性设置为 <b>true</b> 后，将属性设置为提交所有缓存的 PageSetup 命令。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 Microsoft Excel 的全球唯一标识符 (GUID)。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果在保存文件时 Microsoft Excel 要求用户输入汇总信息，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> 一个集合，该集合代表应用程序中打开的所有"受保护的视图"窗口。</summary>
        <value>一 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> 个集合，该集合代表应用程序中打开的所有"受保护的视图"窗口。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> 一个对象，该对象表示应用程序的快速分析选项。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>退出 Microsoft Excel。</summary>
        <remarks><para>如果使用此方法时，有未保存的工作簿处于打开状态，Microsoft Excel 会显示一个对话框，询问是否要保存所做的更改。 您可以通过在使用 <b>Quit</b> 方法之前保存所有工作簿或将属性设置为 False 来防止 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>此错误</b>。 如果该属性为 <b>False</b>，则在 Microsoft Excel 退出时，即使有未保存的工作簿，也不会显示对话框，而且不保存就退出。</para>
          <para>如果将工作簿的属性设置为 True 而不将工作簿保存到磁盘，Microsoft Excel退出而不 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> 要求您保存工作簿。 <b></b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>返回 <see cref="T:System.Boolean" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">必需的 <b>对象</b>。 区域名称。 必须为采用宏语言的 A1 样式引用。 可包括区域操作符（冒号）、相交区域操作符（空格）或合并区域操作符（逗号）。 也可包括货币符号，但它们会被忽略掉。 您可以在区域中任一部分使用局部定义名称。 如果使用名称，则假定该名称使用的是宏语言。</param>
        <param name="Cell2">可选 <b>对象</b>。 区域左上角和右下角的单元格。 可以是一个包含单个单元格、整列或整行的 <b>Range</b> 对象，或者也可以是一个用宏语言为单个单元格命名的字符串。</param>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表单元格或单元格区域。</summary>
        <value>To be added.</value>
        <remarks><para>属性相对于 <b>Range</b> 对象。 例如，如果所选内容是单元格 C3，则 Selection.Range ("B1") 返回单元格 D3，因为它相对于属性返回的 <b>Range</b> <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> 对象。 此外，代码 ActiveSheet.Range("B1") 始终返回单元格 B1。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 Microsoft Excel 应用程序就绪时，返回 <b>True</b>，当 Microsoft Excel 未就绪时，返回 <b>False</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> 一个集合，该集合代表最近使用的文件的列表。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode">可选 <b>对象</b>。 一个字符串，指定向 Visual Basic 模块录入宏录制程序时将录制的 Visual Basic 代码。 该字符串录制在一行中。 如果字符串中包含回车（即 ASCII 字符为 10，或代码中含有 Chr$(10)），将分多行录制该字符串。</param>
        <param name="XlmCode">可选 <b>对象</b>。 忽略该参数。</param>
        <summary>如果宏录制程序正在运行，则记录相应代码。</summary>
        <remarks><para><b>RecordMacro</b> 方法不能录入活动模块（即运行 <b>RecordMacro</b> 方法的模块）。</para>
          <para>若要中止录制（例如，如果用户取消了对话框），请使用两个空字符串调用此函数。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果以相对引用录制宏，则该属性值为 <b>True</b>；如果以绝对引用录制宏，则该属性值为 <b>False</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel 是以 A1 引用样式还是以 R1C1 引用样式显示单元格引用和行、列标题。 读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>XlReferenceStyle</b> 可以是以下 <b>XlReferenceStyle</b> 常量之一：</para>
          <para>
            <b>xlA1</b>
          </para>
          <para>
            <b>xlR1C1</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">可选 <b>对象</b>。 动态链接库或代码资源的名称。</param>
        <param name="Index2">可选 <b>对象</b>。 函数的名称。</param>
        <summary>返回在动态链接库或代码资源中的用 REGISTER 或 REGISTER.ID 宏函数登记的函数信息。</summary>
        <value>To be added.</value>
        <remarks><para>如果不指定这些参数，则此属性返回包含所有注册函数列表的数组。 数组中的每一行包含一个函数的信息，如下表所示。</para>
          <list type="table">
            <item>
              <term>1</term>
              <description>动态链接库或代码资源的名称</description>
            </item>
            <item>
              <term>2</term>
              <description>动态链接库或代码资源中过程的名称</description>
            </item>
            <item>
              <term>3</term>
              <description>指定返回值的数据类型以及参数的数量和数据类型的字符串</description>
            </item>
          </list>
          <para>如果没有注册的函数，则此属性返回 <b>Null</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">必需的 <b>字符串</b> 。 指定要加载的 XLL 的名称。</param>
        <summary>加载 XLL 代码源，并自动注册该代码源中包含的函数和命令。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果代码源加载成功，则该方法返回 <b>True</b>；否则返回 <b>False</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重复上一次用户界面操作。</summary>
        <remarks><para>此方法仅重复用户在运行过程之前执行的最后一次操作。 它必须是过程中的第一行。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置替换条件以用于替换单元格格式。 替换条件随后在对象方法的后续调用 <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 中 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重新设置传送名单，从而可用同一名单初始化一个新的传送过程（使用同一收件人列表和收件人地址信息）。使用本方法之前，该传送过程必须已完成。否则本方法将导致错误。</summary>
        <remarks>To be added.</remarks>
        <example><para>如果工作簿 Book1.xls 的传送过程已完成，本示例将重新设置传送名单。</para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para>如果工作簿 Book1.xls 的传送过程已完成，本示例将重新设置传送名单。</para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para>如果工作簿 Book1.xls 的传送过程已完成，本示例将重新设置传送名单。</para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果使用智能鼠标进行缩放而不是滚动，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表活动工作表上的所有行。 如果活动文档不是工作表，则 <b>Rows</b> 属性失效。</summary>
        <value>To be added.</value>
        <remarks><para>该属性在应用于是多个选定区域的 <b>Range</b> 对象时，只从该区域中第一个子区域内返回行。 例如，如果 <b>Range</b> 对象有两个子区域：A1:B2 和 C3:D4，则 Selection.Rows.Count 返回 2 而不是 4。 若要在一个可能包含多个选定区域的区域中使用此属性，请测试 <b>Areas.Count</b> 以确定该区域是否包含多个选择区域。 如果是，则循环遍历区域的每个区域。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> 一个对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">可选 <b>对象</b>。 要运行的宏。 它可以是一个包含宏名称的字符串、一个指示函数位置的对象，或者是一个注册的 DLL (XLL) <see cref="T:Microsoft.Office.Interop.Excel.Range" /> ID。 如果使用字符串，将在当前工作表的上下文中对该字符串求值。</param>
        <param name="Arg1">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg2">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg3">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg4">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg5">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg6">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg7">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg8">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg9">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg10">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg11">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg12">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg13">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg14">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg15">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg16">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg17">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg18">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg19">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg20">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg21">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg22">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg23">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg24">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg25">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg26">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg27">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg28">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg29">可选 <b>对象</b>。 传递给函数的参数。</param>
        <param name="Arg30">可选 <b>对象</b>。 传递给函数的参数。</param>
        <summary>运行一个宏或者调用一个函数。</summary>
        <returns>To be added.</returns>
        <remarks><para>此方法不可使用命名参数，参数必须通过位置进行传递。</para>
          <para><b>Run</b> 方法返回被调用的宏返回的任何值。 作为参数传递给宏的对象将转换为值 (将属性应用于对象 <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" />) 。 这意味着不能用 <b>Run</b> 方法将对象传递给宏。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>保存对指定工作簿所做的更改。</summary>
        <remarks><para>若要打开工作簿文件，请使用 <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> 方法。</para>
          <para> </para>
          <para>若要在未将工作簿写入磁盘的情况下将其标记为已保存，请将其 <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> 属性设置为 <b>True</b>。</para>
          <para> </para>
          <para>首次保存工作簿时，请使用 <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> 方法指定文件的名称。</para>
          <para> </para></remarks>
        <example><para>本示例保存活动工作簿。</para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para>本示例保存所有打开的工作簿，然后关闭 Microsoft Excel。</para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para>本示例保存活动工作簿。</para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para>本示例保存所有打开的工作簿，然后关闭 Microsoft Excel。</para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para>本示例保存活动工作簿。</para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para>本示例保存所有打开的工作簿，然后关闭 Microsoft Excel。</para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果屏幕更新已启用，此属性的值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks><para>关闭屏幕更新以加快代码速度。 你无法查看代码正在做什么，但它的运行速度更快。</para>
          <para>请记住，在代码<b>结束时将 ScreenUpdating</b>属性设置回<b>True。</b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回活动窗口中的选定对象。</summary>
        <value>To be added.</value>
        <remarks><para>返回对象类型取决于当前所选内容 (例如，如果选择了一个单元格，则此属性返回一 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 个) 。 如果未选择任何内容，<b>Selection</b> 属性将返回 <b>Nothing</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys">必需的 <b>对象</b>。 要以文本格式发送到应用程序的键或组合键。</param>
        <param name="Wait">可选 <b>对象</b>。 若该值为 <b>True</b>，则 Microsoft Excel 等待击键处理完后再将控制返回给宏。 如果该值为 <b>False</b>（或省略），则宏继续执行而不等待击键处理完毕。</param>
        <summary>将击键发送至活动应用程序。</summary>
        <remarks><para>本方法将击键放到键盘缓冲区。某些情况下，在调用要使用击键的方法之前必须先调用此方法。例如，若要往对话框中发送密码，则必须在显示对话框之前调用 <b>SendKeys</b> 方法。</para>
          <para>该 <paramref name="Keys" /> 参数可以指定任何单个键或与 Alt、Ctrl 或 Shift 组合键 (或这些键的任意组合) 。 每个键可由一个或多个字符表示，例如 "a" 表示字符 a，"{ENTER}" 表示 Enter 键。</para>
          <para>若要指定那些没有屏幕回显该字符的键（例如，Enter 或 Tab），请使用下表所列的代码来表示相应的键。表中的每个代码表示键盘上的一个对应键。</para>
          <list type="table">
            <item>
              <term>Backspace</term>
              <description>{BACKSPACE} 或 {BS}</description>
            </item>
            <item>
              <term>Break</term>
              <description>{BREAK}</description>
            </item>
            <item>
              <term>Caps Lock</term>
              <description>{CAPSLOCK}</description>
            </item>
            <item>
              <term>清除</term>
              <description>{CLEAR}</description>
            </item>
            <item>
              <term>Delete 或 Del</term>
              <description>{DELETE} 或 {DEL}</description>
            </item>
            <item>
              <term>向下键</term>
              <description>{DOWN}</description>
            </item>
            <item>
              <term>结束</term>
              <description>{END}</description>
            </item>
            <item>
              <term>Enter</term>
              <description>~ (tilde) </description>
            </item>
            <item>
              <term>Enter（数字小键盘）</term>
              <description>{ENTER}</description>
            </item>
            <item>
              <term>Esc</term>
              <description>{ESCAPE} 或 {ESC}</description>
            </item>
            <item>
              <term>F1 到 F15</term>
              <description>{F1} 到 {F15}</description>
            </item>
            <item>
              <term>帮助</term>
              <description>{HELP}</description>
            </item>
            <item>
              <term>主页</term>
              <description>{HOME}</description>
            </item>
            <item>
              <term>Ins</term>
              <description>{INSERT}</description>
            </item>
            <item>
              <term>向左键</term>
              <description>{LEFT}</description>
            </item>
            <item>
              <term>Num Lock</term>
              <description>{NUMLOCK}</description>
            </item>
            <item>
              <term>PageDown</term>
              <description>{PGDN}</description>
            </item>
            <item>
              <term>PageUp</term>
              <description>{PGUP}</description>
            </item>
            <item>
              <term>Return</term>
              <description>{RETURN}</description>
            </item>
            <item>
              <term>向右键</term>
              <description>{RIGHT}</description>
            </item>
            <item>
              <term>Scroll Lock</term>
              <description>{SCROLLLOCK}</description>
            </item>
            <item>
              <term>Tab</term>
              <description>{TAB}</description>
            </item>
            <item>
              <term>向上键</term>
              <description>{UP}</description>
            </item>
          </list>
          <para>还可指定与 Shift 和/或 Ctrl 和/或 Alt 组合使用的键。若要指定与其他键组合使用的键，可使用下表。</para>
          <list type="table">
            <item>
              <term>Shift</term>
              <description>+（加号）</description>
            </item>
            <item>
              <term>Ctrl</term>
              <description>^ (点) </description>
            </item>
            <item>
              <term>Alt</term>
              <description>%（百分号）</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName">可选 <b>对象</b>。 指定自定义自动格式的名称。 此名称可以是一个指定自定义自动格式的字符串，也可以是指定内置图表模板的特殊常量<b>xlBuiltIn。</b></param>
        <param name="Gallery">可选属性，类型为 Object。 指定库的名称。</param>
        <summary>指定图表模板的名称，Microsoft Excel图表时将使用该模板。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl">要检查的网站 URL。</param>
        <summary>返回指定 URL 的网站上运行的 SharePoint Foundation 版本号。</summary>
        <returns><b>Integer</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 一个集合，该集合代表活动工作簿中所有的工作表。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel 自动插入到新工作簿中的工作表数目。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果图表显示图表提示名称，则该属性值为 <b>True</b>。 默认值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果图表显示图表提示值，则该属性值为 <b>True</b>。 默认值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一 <b>个boolean</b> 值 ，表示是否在功能区中显示开发工具选项卡。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>此属性对应于“Excel 选项”对话框中的“在功能区显示‘开发工具’选项卡”复选框。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一 <b>个boolean</b> 值 ，表示是否在用户右单击工作簿窗口中显示浮动工具栏。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>控制是否在选定内容上显示快速分析上下文用户界面。 <b>TRUE</b> 表示将显示"快速分析"按钮。 对应于"文件"菜单、"选项"和"Excel"，然后是"常规<b>"</b>选项卡中的"在选择上显示快速分析选项"复选框。可读/写。 <b>Boolean</b> (<b>bool</b> in C#) 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一 <b>个boolean</b> 值 ，表示当用户选择文本时是否显示浮动工具栏。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>对应于“Excel 选项”对话框中的“选择时显示浮动工具栏”复选框。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<b>True</b> (应用程序) 新建工作簿任务窗格时的默认Microsoft Excel True 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果打开工具提示，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用程序中当前加载的颜色样式集。</summary>
        <value>应用程序中当前加载的颜色样式集。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用程序中当前加载的 SmartArt 布局集。</summary>
        <value>应用程序中当前加载的 SmartArt 布局集。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用程序中当前加载的 SmartArt 快速样式集。</summary>
        <value>应用程序中当前加载的 SmartArt 快速样式集。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> 应用程序的集合。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> 一个对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> 一个对象，该对象代表应用程序的拼写选项。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置标准字体的名称。</summary>
        <value>To be added.</value>
        <remarks><para>如果使用该属性更改标准字体，则直到重新启动 Microsoft Excel 后，所做的更改才能生效。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以磅为单位返回或设置标准字体大小。</summary>
        <value>To be added.</value>
        <remarks><para>如果使用该属性更改标准字体大小，则直到重新启动 Microsoft Excel 后，所做的更改才能生效。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回不包括最后的分隔符的启动文件夹的完整路径。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置状态栏中的文字。</summary>
        <value>To be added.</value>
        <remarks><para>如果 Microsoft Excel 控制状态栏，则本属性返回 <b>False</b>。若要恢复默认的状态栏文字，可将本属性设为 <b>False</b>，这在状态栏处于隐藏状态时也起作用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>仅供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回模板所存储的本地路径。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回作为对象调用用户定义函数的 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 单元格。</summary>
        <value>To be added.</value>
        <remarks><para>在用户定义的函数中，用户不能访问 <b>Range</b> 对象上的属性或方法。当完成了重新计算后，用户可以为今后的使用和执行附加操作而存储 <b>Range</b> 对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 一个对象，该对象代表运行当前宏代码的工作簿。</summary>
        <value>To be added.</value>
        <remarks><para>使用此属性来引用包含宏代码的工作簿。 仅可使用 <b>ThisWorkbook</b> 从加载项自身内部引用加载项工作簿。 <b>ActiveWorkbook</b> 属性不返回加载项工作簿，它返回的是调用加载项的工作簿。 <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />属性可能会失败，因为工作簿名称可能在您创建外接程序时发生更改。 <b>ThisWorkbook</b> 始终返回其中正在运行代码的工作簿。</para>
          <para>此属性只能从内部Excel。 不可用它来访问任何其他应用程序中的工作簿。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置或返回用于千位分隔符的字符作为 <b>字符串</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从屏幕的上边缘到主窗口的上边缘的距离（以Microsoft Excel）。 如果应用程序窗口已最小化，则此属性将控制窗口图标的位置（在屏幕的任何位置）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Excel 菜单或帮助键，通常为“/”。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置按下 Microsoft Excel 菜单键后将执行的操作。 可为 <b>xlExcelMenus</b> 或 <b>xlLotusHelp</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Lotus 1-2-3 常用键是活动的，则该属性值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消最后一个用户界面操作。</summary>
        <remarks><para>此方法仅撤消用户在运行过程之前执行的最后一个操作。 它必须是过程中的第一行。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">必需 <b>范围</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg2">必需 <b>范围</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg3">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg4">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg5">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg6">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg7">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg8">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg9">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg10">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg11">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg12">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg13">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg14">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg15">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg16">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg17">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg18">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg19">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg20">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg21">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg22">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg23">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg24">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg25">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg26">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg27">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg28">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg29">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <param name="Arg30">必需的 <b>对象</b>。 必须至少指定两个 <b>Range</b> 对象。</param>
        <summary>返回两个或多个区域的合并区域。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回在应用程序窗口区域中一个窗口能占有的最大高度（以磅为单位）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回窗口在应用程序窗口区域中可以占用的最大宽度（以点表示）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置Microsoft Excel函数是否允许在计算群集上运行 XLL 加载项中的用户定义函数。</summary>
        <value>如果Excel XLL 加载项中的用户定义函数在计算群集上运行，则其值为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>读/写。</para>
          <para>如果Excel XLL 加载项中的用户定义函数在计算群集上运行，则其值为
            <b>true;</b>否则<b>为 false</b>。 该属性的设置对应于"选项"对话框"高级"类别中的"公式"下的"允许用户 <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 定义的 XLL 函数在计算群集Excel复选框。</para>
          <para>
            <b>注意</b>：若要启用 <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 属性，必须在 HPC 群集连接器中 (高性能) 计算。 群集连接器可用来在 HPC 群集上远程运行群集安全的 XLL 函数，以提高性能。</para>
          <para>设置该属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 后，使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 属性指定要使用的 HPC 群集连接器。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> 一个对象，该对象代表在工作簿中分配的对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果应用程序可见，或者用户已创建或启动应用程序，则该值为 <b>True</b>。 <b>假</b>如果使用<b>CreateObject 或 GetObject</b>函数以<b></b>编程方式创建或启动应用程序，并且应用程序处于隐藏状态。</summary>
        <value>To be added.</value>
        <remarks><para>当对象的 <b>UserControl</b> 属性为 <b>False</b> 时，则最后一个以编程方式对该对象的引用释放以后，该对象也将释放。如果本属性为 <b>False</b>，会话中最后一个对象释放后，Microsoft Excel 将退出。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回用户计算机上 COM 加载宏安装位置的路径。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置当前用户的名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 的系统分隔符已启用，则该属性的值为 <b>True</b>（默认值）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回"Microsoft Excel"。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <b>VBE</b> 对象表示 Visual Basic 编辑器中。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回Microsoft Excel版本号。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>决定对象是否可见。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile">可选 <b>对象</b>。 如果为 <b>True</b>，则将函数标记为易失性函数。 如果为 <b>False</b>，则将函数标记为非易失性函数。 默认值为 <b>True</b>。</param>
        <summary>用于将用户自定义函数标记为易失性函数，无论何时在工作表的任意单元格中进行计算时，易失性函数都必须重新进行计算。非易失性函数只在输入变量改变时才重新计算，若不用于计算工作表单元格的用户自定义函数中，则此方法无效。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">必需的 <b>对象</b>。 希望宏以日期格式恢复Microsoft Excel的时间。</param>
        <summary>暂停运行宏，直到一特定时间才可继续执行。如果到达指定时间，则该值为 <b>True</b>。</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>重要</b>提示<b>：Wait</b>方法挂起Microsoft Excel活动，并可能阻止在<b>Wait</b>生效时在计算机上执行其他操作。 不过，后台操作（如打印和重新计算）将继续进行。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>该属性设置为 True 时，如果开发人员尝试使用现有函数名称创建新函数， <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> 则引发警报。 <b></b> 读/写 <b>Boolean</b>。</summary>
        <value><b>Boolean</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> 一个对象，该对象代表重新计算工作表时跟踪的范围。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从应用程序窗口左边缘到其右边缘的距离（以点表示）。 如果窗口已最小化，则此属性为只读，并返回窗口图标的宽度。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> 一个集合，该集合代表所有工作簿中所有窗口。</summary>
        <value>To be added.</value>
        <remarks><para>此属性返回的集合中既包括可见窗口，也包括隐藏窗口。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果此计算机正在运行的是 Microsoft Windows for Pen Computing，则该属性的值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置窗口的状态。 读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" /> 。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>XlWindowState</b> 可以是以下 <b>XlWindowState</b> 常量之一：</para>
          <para>
            <b>xlMaximized</b>
          </para>
          <para>
            <b>xlNormal</b>
          </para>
          <para>
            <b>xlMinimized</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> 一个集合，该集合代表所有打开的工作簿。</summary>
        <value>To be added.</value>
        <remarks><para>由 <b>Workbooks</b> 属性返回的集合并不包含打开的外接程序（一种特殊的隐藏工作簿）。 但如果知道文件名，则可返回单个打开的外接程序。 例如，Workbooks ("Oscar.xla") 将返回名为"Oscar.xla"的打开的外接程序作为 <b>Workbook</b> 对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> 对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 一个集合，该集合代表活动工作簿中所有的工作表。</summary>
        <value>To be added.</value>
        <remarks><para>此属性不返回宏表;使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> 属性或 <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> 属性返回这些工作表。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
