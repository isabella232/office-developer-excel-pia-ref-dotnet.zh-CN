<Type Name="ValueChange" FullName="Microsoft.Office.Interop.Excel.ValueChange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9243c520a514e3662b0ffb78c0565edaaf8c69dd321a3d8fc69e5c126a8ab31" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54519719" /></Metadata><TypeSignature Language="C#" Value="public interface ValueChange" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ValueChange" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ValueChange" />
  <TypeSignature Language="VB.NET" Value="Public Interface ValueChange" />
  <TypeSignature Language="C++ CLI" Value="public interface class ValueChange" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244C0-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示基于 OLAP 数据源的数据透视表中已更改的值。</summary>
    <remarks><para>该集合包含表示用户对数据透视表中的值单元格 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> 所做的更改的对象。</para>
      <para>对象的属性指定有关所做的更改的详细信息，如更改的值、与更改的单元格关联的元组、更改相对于其他更改的顺序，以及单元格在数据透视表中是否 <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> 可见。 <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" />对象还提供了属性，该属性返回表示已更改的单元格的对象， <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.PivotCell" /> 并提供有关已更改单元格 <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> 的其他信息。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocationMethod">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAllocationMethod AllocationMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAllocationMethod AllocationMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllocationMethod As XlAllocationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAllocationMethod AllocationMethod { Microsoft::Office::Interop::Excel::XlAllocationMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2875)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2875)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAllocationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在执行"如果分析"时用于分配此值的方法。</summary>
        <value>执行模拟分析时要用来分配此值的方法。</value>
        <remarks><para>只读。</para>
          <para>该属性对应于基于 OLAP 数据源的数据透视表在最初应用此更改时设置的 What-If Analysis 设置 对话框中的"分配方法" <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationMethod" /> 设置。 如果指定的对象是使用集合的方法创建的，并且未提供相应的参数，则返回 <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> <see cref="M:Microsoft.Office.Interop.Excel.PivotTableChangeList.Add(System.String,System.Double,System.Object,System.Object,System.Object)" /> OLAP 服务器 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> <paramref name="AllocationMethod" /> 的默认分配方法。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocationValue">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAllocationValue AllocationValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAllocationValue AllocationValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllocationValue As XlAllocationValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAllocationValue AllocationValue { Microsoft::Office::Interop::Excel::XlAllocationValue get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2874)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2874)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAllocationValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在执行"如果分析"时要分配的值。</summary>
        <value>执行模拟分析时要分配的值。</value>
        <remarks><para>只读。</para>
          <para>该属性对应于基于 OLAP 数据源的数据透视表的"What-If 分析 设置"对话框中的"要分配的值"设置，该设置是在最初应用此更改时设置的 <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationValue" /> 。 如果指定的对象是使用集合的方法创建的，并且未提供相应的参数，则返回 <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> <see cref="M:Microsoft.Office.Interop.Excel.PivotTableChangeList.Add(System.String,System.Double,System.Object,System.Object,System.Object)" /> OLAP 服务器 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> <paramref name="AllocationValue" /> 的默认分配值。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocationWeightExpression">
      <MemberSignature Language="C#" Value="public string AllocationWeightExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AllocationWeightExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationWeightExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllocationWeightExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AllocationWeightExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2876)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在执行"如果分析"时要用于此值的 MDX 加权表达式。</summary>
        <value>执行模拟分析时要用于此值的 MDX 加权表达式。</value>
        <remarks><para>只读。</para>
          <para>该属性对应于基于 OLAP 数据源的数据透视表的"What-If 分析 设置"对话框中的"加权表达式"设置，该设置是在最初应用此更改时设置的 <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationWeightExpression" /> 。 如果指定的对象是使用集合的方法创建的，并且未提供相应的参数，则返回 <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> <see cref="M:Microsoft.Office.Interop.Excel.PivotTableChangeList.Add(System.String,System.Double,System.Object,System.Object,System.Object)" /> OLAP 服务器 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> <paramref name="AllocationWeightExpression" /> 的默认加权表达式。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果不与对象限定符一起使用，则此属性返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表应用程序Microsoft Excel对象。 当与对象限定符一同使用时，此属性返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个对象，该对象表示指定对象的创建者。</summary>
        <value>对象 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 32 <b>位整数</b> ，指示创建此对象时所使用应用程序。</summary>
        <value>一个 32 <b>位整数</b> ，指示创建此对象时所使用应用程序。</value>
        <remarks><para>只读的 <b>长</b>。</para>
          <para>如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。 该属性旨在用于 Macintosh Microsoft Excel，其中每个应用程序都有一个四字符的 <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Creator" /> 创建者代码。 例如，Microsoft Excel 的创建者代码为 XCEL。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ValueChange.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从集合中删除 <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> 指定的 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> 对象。</summary>
        <remarks><para>您还可以使用 <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> 集合的 方法 <see cref="M:Microsoft.Office.Interop.Excel.PivotTableChangeList.Delete" /> 删除 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> 对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.Order" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示相对于集合中其他更改执行此更改 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> 的顺序。</summary>
        <value>相对于集合中其他更改执行此更改 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> 的顺序。</value>
        <remarks><para>只读。</para>
          <para>属性值由数据透视表Excel单元格应用更改的顺序自动指定 <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> 。 如果一次操作中应用了多个更改，Excel 将随意分配该组更改中各个更改的顺序。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指定对象的父对象。</summary>
        <value>指定对象的父对象。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCell PivotCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotCell PivotCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.PivotCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCell As PivotCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotCell ^ PivotCell { Microsoft::Office::Interop::Excel::PivotCell ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一 <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> 个对象，该对象代表 (元) 单元格的单元格。</summary>
        <value>更改 (元) 元组。</value>
        <remarks><para>只读。</para>
          <para>当指定对象的属性值为 true 时，该属性返回更改 (元组) <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.VisibleInPivotTable" /> <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.PivotCell" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> 对象。 当指定对象的属性值为 false 时，该属性返回空引用 (<see cref="P:Microsoft.Office.Interop.Excel.ValueChange.VisibleInPivotTable" /> <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> Nothing in <b></b> <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.PivotCell" /> Visual Basic) 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Tuple">
      <MemberSignature Language="C#" Value="public string Tuple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tuple" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.Tuple" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tuple As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tuple { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2972)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 OLAP 数据源中已更改值的 MDX 元组。</summary>
        <value>该值的 MDX 元组在 OLAP 数据源中已更改。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户在单元格中输入的值或上次对 OLAP 数据源运行 UPDATE CUBE 语句时计算单元格中的公式的值。</summary>
        <value>值。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleInPivotTable">
      <MemberSignature Language="C#" Value="public bool VisibleInPivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VisibleInPivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ValueChange.VisibleInPivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleInPivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VisibleInPivotTable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2971)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据透视表中 (元) 单元格当前是否可见。</summary>
        <value>如果数据透视表中 (元) 单元格，则其为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>只读。</para>
          <para>如果 <b>数据透视</b> 表中当前 (元) ，则返回 true;否则 <b>为 false</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>