<Type Name="PivotTable" FullName="Microsoft.Office.Interop.Excel.PivotTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3adc582d805c6c63aa2301fb45e65416c52208390707a5ae643559dbbe4dfc4a" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54507812" /></Metadata><TypeSignature Language="C#" Value="public interface PivotTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract PivotTable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.PivotTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface PivotTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class PivotTable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020872-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表工作表上的数据透视表。 <b>PivotTable</b>对象是集合的成员 <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> 。 <b>PivotTables</b> 集合包含某一张工作表上的所有 <b>PivotTable</b> 对象。</summary>
    <remarks><para>使用 <b>数据</b> 透视 () （其中是数据透视表索引号或名称）可 <paramref name="index" /> <paramref name="index" /> 返回一 <b>个 PivotTable</b> 对象。</para>
      <para>因为对数据透视表进行编程可能会很复杂，所以，最方便的做法是将数据透视表操作录制到宏中，然后再修订所录制的宏代码。 若要录制宏，请在"工具"菜单上指向"宏"，然后单击"录制新宏"。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PivotSelect">
      <MemberSignature Language="C#" Value="public void _PivotSelect (string Name, Microsoft.Office.Interop.Excel.XlPTSelectionMode Mode = Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PivotSelect([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlPTSelectionMode Mode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable._PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PivotSelect (Name As String, Optional Mode As XlPTSelectionMode = Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlPTSelectionMode" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <param name="Mode">To be added.</param>
        <summary>保留以供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveFilters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotFilters ActiveFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotFilters ActiveFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ActiveFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveFilters As PivotFilters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotFilters ^ ActiveFilters { Microsoft::Office::Interop::Excel::PivotFilters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2559)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2559)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示指定 中的当前活动筛选器 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 只读。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDataField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField AddDataField (object Field, object Caption, object Function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotField AddDataField([in]object Field, [in]object Caption, [in]object Function) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.AddDataField(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDataField (Field As Object, Optional Caption As Object, Optional Function As Object) As PivotField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Caption" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field">必需的 <b>对象</b>。 服务器上的唯一字段。 如果源数据是联机分析处理 (OLAP)，则唯一字段是多维数据集字段。 如果源数据不是 OLAP（非 OLAP 源数据），则唯一字段是数据透视表字段。</param>
        <param name="Caption">可选 <b>对象</b>。 数据透视表中使用的标签，用于识别该数据字段。</param>
        <param name="Function">可选 <b>对象</b>。 在已添加数据字段中执行的函数。</param>
        <summary>将数据字段添加到数据透视表中。 返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 一个代表新数据字段的对象。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFields">
      <MemberSignature Language="C#" Value="public object AddFields (object RowFields, object ColumnFields, object PageFields, object AddToTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddFields([in]object RowFields, [in]object ColumnFields, [in]object PageFields, [in]object AddToTable) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.AddFields(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFields (Optional RowFields As Object, Optional ColumnFields As Object, Optional PageFields As Object, Optional AddToTable As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(708)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowFields" Type="System.Object" />
        <Parameter Name="ColumnFields" Type="System.Object" />
        <Parameter Name="PageFields" Type="System.Object" />
        <Parameter Name="AddToTable" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowFields">可选 <b>对象</b>。 指定要作为 (或要添加到分类轴) 字段名称的字段名称或字段名称数组。</param>
        <param name="ColumnFields">可选 <b>对象</b>。 指定要添加为 (或要添加到系列轴) 字段名称的字段名或字段名数组。</param>
        <param name="PageFields">可选 <b>对象</b>。 指定要添加为 (或要添加到页面) 字段名称的字段名称数组。</param>
        <param name="AddToTable">可选 <b>对象</b>。 仅适用于数据透视表。 如果为 <b>True</b>，则将指定的字段添加到报表中（不替换现有字段）。 如果为 <b>False</b>，则用新的字段替换现有的字段。 默认值为 <b>False</b>。</param>
        <summary>向数据透视表或数据透视图中添加行字段、列字段和页字段。</summary>
        <returns>To be added.</returns>
        <remarks><para>必须指定其中某个字段参数。</para>
          <para>字段名称指定对象的属性 <see cref="P:Microsoft.Office.Interop.Excel.PivotField.SourceName" /> 返回的唯一 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 名称。</para>
          <para>这个方法对 OLAP 数据源不可用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在基于 OLAP 数据源的数据透视表中的所有已编辑的单元格上执行回写操作。</summary>
        <remarks><para>该方法将针对自上次提交应用更改操作以来在数据透视表的值区域中进行的所有更改，或者如果从未执行过提交应用更改而创建了数据透视表，该方法将执行 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.AllocateChanges" /> UPDATE CUBE 语句。 如果对基于非 OLAP 数据源的数据透视表执行此方法，那么将生成运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAllocation Allocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAllocation Allocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Allocation" />
      <MemberSignature Language="VB.NET" Value="Public Property Allocation As XlAllocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAllocation Allocation { Microsoft::Office::Interop::Excel::XlAllocation get(); void set(Microsoft::Office::Interop::Excel::XlAllocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2873)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2873)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2873)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAllocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是编辑每个单元格的 <b>UPDATE CUBE</b> 语句，还是仅在用户选择在基于 OLAP 数据源对数据透视表执行"如果"分析时计算更改时。</summary>
        <value>对象 <see cref="T:Microsoft.Office.Interop.Excel.XlAllocation" /> 。</value>
        <remarks><para>读/写。</para>
          <para>该属性 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.Allocation" /> 对应于"分析分析"对话框中的"What-If更改设置设置。 默认设置是 ，它对应于选择计算数据透视表 (时手动) <see cref="F:Microsoft.Office.Interop.Excel.XlAllocation.xlManualAllocation" /> 设置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocationMethod">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAllocationMethod AllocationMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAllocationMethod AllocationMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property AllocationMethod As XlAllocationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAllocationMethod AllocationMethod { Microsoft::Office::Interop::Excel::XlAllocationMethod get(); void set(Microsoft::Office::Interop::Excel::XlAllocationMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2875)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2875)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2875)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAllocationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在基于 OLAP 数据源对数据透视表执行"如果"分析时要用于分配值的方法。</summary>
        <value>对象 <see cref="T:Microsoft.Office.Interop.Excel.XlAllocationMethod" /> 。</value>
        <remarks><para>读/写。</para>
          <para>属性 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod" /> 对应于"分析策略"对话框中What-If分配设置设置。 默认设置为 <see cref="F:Microsoft.Office.Interop.Excel.XlAllocationMethod.xlEqualAllocation" /> ，对应于"等分配"设置。 如果属性设置为 ，对应于加权分配设置，您可以选择通过设置属性 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod" /> <see cref="F:Microsoft.Office.Interop.Excel.XlAllocationMethod.xlWeightedAllocation" /> 来指定使用的加权 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression" /> 表达式。 如果不指定权重表达式，则使用与叶单元格值现有值 &lt; &gt;  /  &lt; 等效的 &gt; 加权表达式。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocationValue">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAllocationValue AllocationValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAllocationValue AllocationValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationValue" />
      <MemberSignature Language="VB.NET" Value="Public Property AllocationValue As XlAllocationValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAllocationValue AllocationValue { Microsoft::Office::Interop::Excel::XlAllocationValue get(); void set(Microsoft::Office::Interop::Excel::XlAllocationValue value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2874)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2874)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2874)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAllocationValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在基于 OLAP 数据源对数据透视表执行按结果分析时要分配的值。</summary>
        <value>对象 <see cref="T:Microsoft.Office.Interop.Excel.XlAllocationValue" /> 。</value>
        <remarks><para>读/写。</para>
          <para>属性 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationValue" /> 对应于"分析策略"对话框中的"要分配What-If设置设置。 默认设置是 ，对应于 输入的值 <see cref="F:Microsoft.Office.Interop.Excel.XlAllocationValue.xlAllocateValue" /> 除以分配数设置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocationWeightExpression">
      <MemberSignature Language="C#" Value="public string AllocationWeightExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AllocationWeightExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property AllocationWeightExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AllocationWeightExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2876)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2876)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在基于 OLAP 数据源对数据透视表执行本该分析时使用的 MDX 加权表达式。</summary>
        <value>对基于 OLAP 数据源的数据透视表执行本该分析时使用的 MDX 加权表达式。</value>
        <remarks><para>读/写。</para>
          <para>该属性 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression" /> 对应于"分析分析"对话框中What-If"设置"设置。 必须先 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression" /> 将 属性设置为 ，然后才能 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod" /> 设置 属性 <see cref="F:Microsoft.Office.Interop.Excel.XlAllocationMethod.xlWeightedAllocation" /> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowMultipleFilters">
      <MemberSignature Language="C#" Value="public bool AllowMultipleFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultipleFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AllowMultipleFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultipleFilters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultipleFilters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2570)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置或检索一个值，该值指示 是否可以同时应用多个 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 筛选器。
读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>默认值为 <b>False</b> 。</para>
          <para>当此属性设置为 True <b>时</b>，多个筛选器可以应用于单个 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 。 设置为 <b>False</b>时，将筛选器应用于已筛选的 将删除现有筛选器并 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 应用新筛选器。

如果 具有应用了多个筛选器的字段，则此属性设置为 <b>False</b> 将静默删除 中的所有筛选器 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />  ，而不会 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />  显示任何警报。 但是通过用户界面删除筛选时，将显示警告。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AlternativeText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternativeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternativeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指定 (数据) 字符串的描述性可选属性。</summary>
        <value>描述性 (数据) 数据透视表的文本字符串。</value>
        <remarks><para>读/写。</para>
          <para>该属性的值对应于"数据透视表选项"对话框的"可选文字"选项卡上"标题"框中 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AlternativeText" /> 的值。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个对象，该对象Microsoft Excel应用程序。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheIndex">
      <MemberSignature Language="C#" Value="public int CacheIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CacheIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1483)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1483)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1483)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置数据透视表缓存的索引号。 <b>Integer</b> 型，可读/写。</summary>
        <value>To be added.</value>
        <remarks><para>如果设置 <b>CacheIndex</b> 属性，以便于数据透视表使用第二张数据透视表的高速缓存，则第一个报表的字段必须是第二个报表中字段的有效子集。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedFields CalculatedFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CalculatedFields CalculatedFields() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.CalculatedFields" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculatedFields () As CalculatedFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::CalculatedFields ^ CalculatedFields();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1484)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedFields</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedFields" /> 一个集合，该集合代表指定数据透视表中的所有计算字段。 只读。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedMembers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMembers CalculatedMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalculatedMembers CalculatedMembers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculatedMembers As CalculatedMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalculatedMembers ^ CalculatedMembers { Microsoft::Office::Interop::Excel::CalculatedMembers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2125)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2125)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个集合，该集合代表 OLAP 数据透视表的所有 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> 计算成员和计算度量值。</summary>
        <value>To be added.</value>
        <remarks><para>本属性用于联机分析处理 (OLAP) 源，非 OLAP 源将返回一个运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedMembersInFilters">
      <MemberSignature Language="C#" Value="public bool CalculatedMembersInFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculatedMembersInFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembersInFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculatedMembersInFilters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculatedMembersInFilters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2884)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2884)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2884)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否在筛选器中计算 OLAP 服务器中的计算成员。</summary>
        <value>如果应在筛选器中评估 OLAP 服务器中的计算成员，为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>读/写。</para>
          <para>如果在筛选器中计算计算成员，则其值为
            <b>true;</b>否则<b>为 false</b>。</para>
          <para>此属性的值对应于基于 OLAP 数据源的数据透视表的"数据透视表选项"对话框的"筛选总计"选项卡上"计算来自筛选器的 OLAP 服务器的计算成员"复选框的设置。 &amp;</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConnection">
      <MemberSignature Language="C#" Value="public void ChangeConnection (Microsoft.Office.Interop.Excel.WorkbookConnection conn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeConnection([in]class Microsoft.Office.Interop.Excel.WorkbookConnection conn) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ChangeConnection(Microsoft.Office.Interop.Excel.WorkbookConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeConnection (conn As WorkbookConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeConnection(Microsoft::Office::Interop::Excel::WorkbookConnection ^ conn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conn" Type="Microsoft.Office.Interop.Excel.WorkbookConnection" />
      </Parameters>
      <Docs>
        <param name="conn">必需 <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> 对象，该对象表示 的新连接 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。</param>
        <summary>更改指定 的连接 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。</summary>
        <remarks><para><see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ChangeConnection(Microsoft.Office.Interop.Excel.WorkbookConnection)" />该方法只能与连接到 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 外部数据源的 一同使用。 如果方法与使用工作表上存储的数据作为数据源的 一同使用，将 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ChangeConnection(Microsoft.Office.Interop.Excel.WorkbookConnection)" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 发生运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeList">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTableChangeList ChangeList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTableChangeList ChangeList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ChangeList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeList As PivotTableChangeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTableChangeList ^ ChangeList { Microsoft::Office::Interop::Excel::PivotTableChangeList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTableChangeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个集合，该集合代表基于 OLAP 数据源对指定数据透视表 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> 所做的更改列表。</summary>
        <value>该集合代表基于 OLAP 数据源对指定数据透视表所做的更改 <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> 列表。</value>
        <remarks><para>只读。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePivotCache">
      <MemberSignature Language="C#" Value="public void ChangePivotCache (object PivotCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangePivotCache([in]object PivotCache) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ChangePivotCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangePivotCache (PivotCache As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangePivotCache(System::Object ^ PivotCache);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2577)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PivotCache" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PivotCache">必需 <b>属性，</b> 类型为 String a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 或 <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />  对象，表示 <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />  指定 的新 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 对象。</param>
        <summary>更改 <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> 指定的 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。</summary>
        <remarks><para>方法只能与将工作表上存储的数据用作数据源的 一 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ChangePivotCache(System.Object)" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />  同使用。 如果将方法与连接到外部数据源的 一同使用， <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ChangePivotCache(System.Object)" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 则会发生运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllFilters">
      <MemberSignature Language="C#" Value="public void ClearAllFilters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAllFilters() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ClearAllFilters" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearAllFilters ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearAllFilters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2561)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearAllFilters" />方法删除当前应用于 的所有筛选器 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 这包括删除对象集合中所有的筛选器、删除应用的任何手动筛选以及将"报告筛选器"区域中的所有筛选器设置为 <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 默认项目。</summary>
        <remarks><para>调用 方法 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearAllFilters" /> 后， <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> 集合将为空。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearTable">
      <MemberSignature Language="C#" Value="public void ClearTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ClearTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2552)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearTable" />方法用于清除 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 清除 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 包括删除所有字段以及删除应用于 的所有筛选和排序 <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> 。 此方法在将 任何字段添加到之前，将 重置为它创建后的状态 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。</summary>
        <remarks><para><see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearTable" />该函数不采用任何参数，并且可用于关系和 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> OLAP。 </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnFields">
      <MemberSignature Language="C#" Value="public object ColumnFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(713)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(713)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 字段的名称或编号（可为指定多个字段的数组）。</param>
        <summary>返回一个对象，该对象代表 (数据透视表字段) 或当前显示为列字段 (对象) <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 所有字段 <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 的集合。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGrand">
      <MemberSignature Language="C#" Value="public bool ColumnGrand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnGrand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnGrand" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnGrand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnGrand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表显示列总计，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ColumnRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ColumnRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(702)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表数据透视表中包含列区域的区域。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitChanges">
      <MemberSignature Language="C#" Value="public void CommitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.CommitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>对基于 OLAP 数据源的数据透视表的数据源执行提交操作。</summary>
        <remarks><para>该方法将 COMMIT TRANSACTION 语句发送到 OLAP 服务器，并清除通过输入值编辑的所有单元格，但不清除值单元格 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.CommitChanges" /> 中的公式。 如果对基于非 OLAP 数据源的数据透视表执行此方法，那么将生成运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CompactLayoutColumnHeader">
      <MemberSignature Language="C#" Value="public string CompactLayoutColumnHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompactLayoutColumnHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CompactLayoutColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property CompactLayoutColumnHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompactLayoutColumnHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定在压缩行布局表单中时列标题 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 中显示的标题。 读/写。</summary>
        <value>字符串</value>
        <remarks><para>用户在网格中自定义这些标题时，这些标题也会反映到这些属性中。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CompactLayoutRowHeader">
      <MemberSignature Language="C#" Value="public string CompactLayoutRowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompactLayoutRowHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CompactLayoutRowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property CompactLayoutRowHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompactLayoutRowHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2571)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2571)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定在压缩行布局窗体中时在 行 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 标题中显示的标题。 读/写。</summary>
        <value><b>String</b></value>
        <remarks><para>用户在网格中自定义这些标题时，这些标题也会反映到这些属性中。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CompactRowIndent">
      <MemberSignature Language="C#" Value="public int CompactRowIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompactRowIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CompactRowIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property CompactRowIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CompactRowIndent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置启用压缩行布局 <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> 窗体时缩进增量。 读/写。</summary>
        <value><b>Integer</b></value>
        <remarks><para>默认值为 1。此设置的有效值为 0 到 Microsoft Excel 中指定的最大缩进。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToFormulas">
      <MemberSignature Language="C#" Value="public void ConvertToFormulas (bool ConvertFilters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertToFormulas([in]bool ConvertFilters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ConvertToFormulas(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertToFormulas (ConvertFilters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ConvertToFormulas(bool ConvertFilters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConvertFilters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ConvertFilters">必需 <b>Boolean</b> 包含 <b>True</b> 或 <b>False</b> 以指示 ReportFilter 区域的状态。</param>
        <summary>该方法是 1st_Excel12中的新增功能， <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ConvertToFormulas(System.Boolean)" /> 用于将 转换为 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 多维数据集公式。</summary>
        <remarks><para>该参数控制 是否转换 的 ReportFilter 区域 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCubeFile">
      <MemberSignature Language="C#" Value="public string CreateCubeFile (string File, object Measures, object Levels, object Members, object Properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateCubeFile([in]string File, [in]object Measures, [in]object Levels, [in]object Members, [in]object Properties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.CreateCubeFile(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCubeFile (File As String, Optional Measures As Object, Optional Levels As Object, Optional Members As Object, Optional Properties As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="File" Type="System.String" />
        <Parameter Name="Measures" Type="System.Object" />
        <Parameter Name="Levels" Type="System.Object" />
        <Parameter Name="Members" Type="System.Object" />
        <Parameter Name="Properties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="File">必需的 <b>字符串</b> 。 要创建的多维数据集文件的名称。 如果该文件已存在，则将被覆盖。</param>
        <param name="Measures">可选 <b>对象</b>。 度量的唯一名称的数组，该度量是扇面的一部分。</param>
        <param name="Levels">可选 <b>对象</b>。 字符串数组。 每个数组项都是一个唯一的级别名称。 该参数表示扇面中的层次结构的最低级别。</param>
        <param name="Members">可选 <b>对象</b>。 字符串数组的数组。 元素顺序对应于数组中表示的 <paramref name="Levels" /> 层次结构。 每个元素都是字符串数组的一个数组，由维（包括在扇面中）中的最高级别成员的唯一名称组成。</param>
        <param name="Properties">可选属性，类型为 <b>Boolean</b>。 如果该值为 <b>False</b>，则扇区中不包含成员属性。 默认值为 <b>True</b>。</param>
        <summary>创建数据透视表的多维数据集文件，该数据透视表与联机分析处理 (OLAP) 数据源相连接。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。 如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。 只读 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 。</summary>
        <value>To be added.</value>
        <remarks><para><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。 例如，Microsoft Excel 的创建者代码为 XCEL。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CubeFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CubeFields CubeFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CubeFields CubeFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CubeFields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CubeFields As CubeFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CubeFields ^ CubeFields { Microsoft::Office::Interop::Excel::CubeFields ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1839)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1839)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CubeFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.CubeFields" /> 集合。 每个 <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> 对象都包含多维数据集字段元素的属性。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBodyRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DataBodyRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DataBodyRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DataBodyRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBodyRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DataBodyRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，该对象代表在标题行和插入行之间的列表中包含数据 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 区域的区域。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFields">
      <MemberSignature Language="C#" Value="public object DataFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DataFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(715)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(715)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 字段的名称或编号（可为指定多个字段的数组）。</param>
        <summary>返回一个对象，该对象代表 (数据透视表字段) 或当前显示为数据字段 (对象) 所有字段 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 的集合。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLabelRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DataLabelRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DataLabelRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DataLabelRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataLabelRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DataLabelRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表包含数据透视表中数据字段的标签的范围。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataPivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField DataPivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField DataPivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DataPivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ DataPivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2120)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2120)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 一个对象，该对象代表数据透视表中的所有数据字段。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>放弃基于 OLAP 数据源的数据透视表中经过编辑的单元格中的所有更改。</summary>
        <remarks><para>对于基于 OLAP 数据源的数据透视表，此方法删除在值单元格中输入的所有值和公式，然后运行数据透视表更新操作从数据源中检索最新值。 它将数据源值设置为空引用， (编辑的所有值单元格的 Visual Basic) 中为 Nothing，并且还会对 OLAP 服务器执行 ROLLBACK TRANSACTION 语句。</para>
          <para>如果尝试对基于非 OLAP 数据源的数据透视表执行此方法，则会生成运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayContextTooltips">
      <MemberSignature Language="C#" Value="public bool DisplayContextTooltips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayContextTooltips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayContextTooltips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayContextTooltips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayContextTooltips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>控制是否显示单元格的工具 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 提示。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>如果 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayContextTooltips" /> 设置为 <b>False</b>，则不显示单元格的 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 上下文工具提示。 如果设置为 <b>True，</b>将显示行、列和数据区域单元格 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 的工具提示。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayEmptyColumn">
      <MemberSignature Language="C#" Value="public bool DisplayEmptyColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayEmptyColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayEmptyColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayEmptyColumn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayEmptyColumn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果对数值轴的 OLAP 提供程序的查询中包括非空 MDX 关键字，则返回 <b>True</b>。在结果集中，OLAP 提供程序不返回空列。如果省略非空关键字，则返回 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>数据透视表必须与一个联机分析处理 (OLAP) 数据源相连，以避免运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayEmptyRow">
      <MemberSignature Language="C#" Value="public bool DisplayEmptyRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayEmptyRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayEmptyRow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayEmptyRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayEmptyRow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果对分类轴的 OLAP 提供程序的查询中包括非空 MDX 关键字，则返回 <b>True</b>。在结果集中，OLAP 提供程序不返回空行。如果省略非空关键字，则返回 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>数据透视表必须与一个联机分析处理 (OLAP) 数据源相连，以避免运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayErrorString">
      <MemberSignature Language="C#" Value="public bool DisplayErrorString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayErrorString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayErrorString" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayErrorString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayErrorString { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表在有错误的单元格中显示用户自定义的错误字符串，则该值为 <b>True</b>。默认值为 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>使用 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ErrorString" /> 属性设置自定义错误字符串。</para>
          <para>当透视处理计算字段时，该属性对于消除被零除错误尤其有用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFieldCaptions">
      <MemberSignature Language="C#" Value="public bool DisplayFieldCaptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFieldCaptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayFieldCaptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFieldCaptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFieldCaptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2555)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2555)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2555)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>控制是否在网格中显示筛选按钮以及行和 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 列的标题。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>默认值为 <b>True</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayImmediateItems">
      <MemberSignature Language="C#" Value="public bool DisplayImmediateItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayImmediateItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayImmediateItems" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayImmediateItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayImmediateItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 <b>Boolean</b>，用于指明当数据透视表的数据区域为空时，行和列区域中的项是否可见。如果该属性为 <b>False</b>，则当数据透视表的数据区域为空时，将隐藏行和列区域中的项。默认值为 <b>True</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberPropertyTooltips">
      <MemberSignature Language="C#" Value="public bool DisplayMemberPropertyTooltips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayMemberPropertyTooltips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayMemberPropertyTooltips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMemberPropertyTooltips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayMemberPropertyTooltips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2550)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2550)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2550)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>控制是否在工具提示中显示成员属性。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>如果 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayMemberPropertyTooltips" /> 设置为 <b>False</b>，则工具提示中不会显示任何成员属性。 如果它设置为 <b>True</b>，则将在工具提示中显示成员属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNullString">
      <MemberSignature Language="C#" Value="public bool DisplayNullString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNullString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayNullString" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNullString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNullString { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表在包含空值的单元格中显示用户自定义的字符串，则该值为 <b>True</b>。默认值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>使用 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.NullString" /> 属性设置自定义空字符串。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DrillDown">
      <MemberSignature Language="C#" Value="public void DrillDown (Microsoft.Office.Interop.Excel.PivotItem PivotItem, object PivotLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrillDown([in]class Microsoft.Office.Interop.Excel.PivotItem PivotItem, [in]object PivotLine) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.DrillDown(Microsoft.Office.Interop.Excel.PivotItem,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3068)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PivotItem" Type="Microsoft.Office.Interop.Excel.PivotItem" />
        <Parameter Name="PivotLine" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PivotItem">从中执行向下钻取的成员。</param>
        <param name="PivotLine">指定操作起始成员所在的数据透视表中的行。 如果未指定 PivotLine，则默认为显示成员的顶部 PivotLine。</param>
        <summary>使您能够深入到 OLAP 或基于 OLAP 的多维数据集PowerPivot内的数据。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrillTo">
      <MemberSignature Language="C#" Value="public void DrillTo (Microsoft.Office.Interop.Excel.PivotItem PivotItem, Microsoft.Office.Interop.Excel.CubeField CubeField, object PivotLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrillTo([in]class Microsoft.Office.Interop.Excel.PivotItem PivotItem, [in]class Microsoft.Office.Interop.Excel.CubeField CubeField, [in]object PivotLine) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.DrillTo(Microsoft.Office.Interop.Excel.PivotItem,Microsoft.Office.Interop.Excel.CubeField,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PivotItem" Type="Microsoft.Office.Interop.Excel.PivotItem" />
        <Parameter Name="CubeField" Type="Microsoft.Office.Interop.Excel.CubeField" />
        <Parameter Name="PivotLine" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PivotItem">执行钻取操作的成员。</param>
        <param name="CubeField">要深化到的目标层次结构。</param>
        <param name="PivotLine">指定操作起始成员所在的数据透视表中的行。 如果未指定 PivotLine，则默认为显示成员的顶部 PivotLine。</param>
        <summary>使您可以钻取到 OLAP 或基于多维数据集层次结构PowerPivot位置。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrillUp">
      <MemberSignature Language="C#" Value="public void DrillUp (Microsoft.Office.Interop.Excel.PivotItem PivotItem, object PivotLine, object LevelUniqueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrillUp([in]class Microsoft.Office.Interop.Excel.PivotItem PivotItem, [in]object PivotLine, [in]object LevelUniqueName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.DrillUp(Microsoft.Office.Interop.Excel.PivotItem,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PivotItem" Type="Microsoft.Office.Interop.Excel.PivotItem" />
        <Parameter Name="PivotLine" Type="System.Object" />
        <Parameter Name="LevelUniqueName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PivotItem">执行钻取的成员。</param>
        <param name="PivotLine">指定操作起始成员所在的数据透视表中的行。 如果未指定 PivotLine，则默认为显示成员的顶部 PivotLine。</param>
        <param name="LevelUniqueName">多级钻取的目标。 如果未指定，则默认操作是一级钻取。</param>
        <summary>使您可以深入了解 OLAP 或基于 OLAP 的多维数据集PowerPivot数据。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy15">
      <MemberSignature Language="C#" Value="public object Dummy15 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy15([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.Dummy15(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy15 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>仅供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.Dummy2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataValueEditing">
      <MemberSignature Language="C#" Value="public bool EnableDataValueEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataValueEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataValueEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataValueEditing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果为 <b>True</b>，则当用户覆盖数据透视表数据区域中的值时禁用警告。设置为 <b>True</b> 也可以使用户更改先前无法更改的数据值。默认值为 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>在数据值上进行的任何编辑，在刷新时都将丢失。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDrilldown">
      <MemberSignature Language="C#" Value="public bool EnableDrilldown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDrilldown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDrilldown" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDrilldown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDrilldown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1487)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1487)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1487)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果启用“显示明细数据”，则该值为 <b>True</b>。默认值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>为数据透视表设置该属性将对该表中的所有字段有效。</para>
          <para>对于 OLAP 数据源，该属性值总是 <b>True</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFieldDialog">
      <MemberSignature Language="C#" Value="public bool EnableFieldDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFieldDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableFieldDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFieldDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFieldDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1488)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1488)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1488)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果当用户双击数据透视表字段时，<b>“数据透视表字段”</b>对话框可用，则该属性值为 <b>True</b>。默认值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>为数据透视表设置该属性将对该表中的所有字段有效。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFieldList">
      <MemberSignature Language="C#" Value="public bool EnableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>如果为 False，</b> 则禁止显示数据透视表的字段列表。 如果已经显示字段列表，则该列表将消失。 默认值为 <b>True</b> 。 读/写 <b>boolean 类型的值</b> 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableWizard">
      <MemberSignature Language="C#" Value="public bool EnableWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1489)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1489)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1489)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表向导可用，则其为<b>True。</b> 默认值为 <b>True</b> 。 读/写 <b>boolean 类型的值</b> 。</summary>
        <value>To be added.</value>
        <remarks><para>在设置该属性时，字段井并不会显示在工作表上。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableWriteback">
      <MemberSignature Language="C#" Value="public bool EnableWriteback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableWriteback" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableWriteback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableWriteback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2872)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2872)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2872)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否对指定的数据透视表启用写回数据源。</summary>
        <value><b>如果</b> 为指定的数据透视表启用了写回数据源，则其返回值 true;否则为 <b>false</b>。 默认值为 <b>false</b>。</value>
        <remarks><para>读/写。</para>
          <para>对于 OLAP 数据源，将 属性设置为 true 可启用写回，并禁用用户覆盖数据透视表数据区域中的值时 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> 发出警报。 <b></b> 对于非 OLAP 数据源，将该属性设置为 true 可启用代码回写，还允许用户更改以前无法更改 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> 的数据值。 <b></b></para>
          <para><see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" />对象的 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> 和 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 属性不能同时设置为<b>true。</b></para>
          <para>如果该属性设置为 true，然后将该属性设置为 true，则会自动将该属性设置为 false，刷新数据透视表，并且对数据值执行的任何编辑 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> 操作都会丢失。 <b></b></para>
          <para>如果该属性设置为 true，然后将该属性设置为 true，则该属性将自动设置为 false，不刷新数据透视表，并还原 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> 数据源值。 <b></b></para>
          <para>对于非 OLAP 数据源，设置此属性将会生成运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorString">
      <MemberSignature Language="C#" Value="public string ErrorString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ErrorString" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1490)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1490)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1490)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置当属性为 True 时，在包含错误的 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayErrorString" /> 单元格中显示的 <b>字符串</b>。 默认值为空字符串 ("")。 读/写 <b>String</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldListSortAscending">
      <MemberSignature Language="C#" Value="public bool FieldListSortAscending { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FieldListSortAscending" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.FieldListSortAscending" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldListSortAscending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FieldListSortAscending { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2573)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2573)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2573)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>控制字段列表中的字段的 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 排序顺序。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>当此属性设置为 <b>True</b> 时，字段按升序顺序排序。 当它设置为 <b>False</b> 时，字段按数据源顺序排序。 </para>
          <para>不适用于连接到 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> OLAP 数据源。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public void Format (Microsoft.Office.Interop.Excel.XlPivotFormatType Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Format([in]valuetype Microsoft.Office.Interop.Excel.XlPivotFormatType Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Format (Format As XlPivotFormatType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Format(Microsoft::Office::Interop::Excel::XlPivotFormatType Format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlPivotFormatType" />
      </Parameters>
      <Docs>
        <param name="Format">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFormatType" /> 。 指定要应用于指定数据透视表的报表格式类型。</param>
        <summary>将数据透视表设置为预定义的缩进、非缩进或交叉制表符格式之一。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public double GetData (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetData([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (Name As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetData(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">必需的 <b>字符串</b> 。 使用与计算项公式中的方法或数据透视表引用类似的语法描述数据透视表中的单个 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)" /> 单元格。</param>
        <summary>从指定的数据透视表单元格中返回数据。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPivotData">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range GetPivotData (object DataField, object Field1, object Item1, object Field2, object Item2, object Field3, object Item3, object Field4, object Item4, object Field5, object Item5, object Field6, object Item6, object Field7, object Item7, object Field8, object Item8, object Field9, object Item9, object Field10, object Item10, object Field11, object Item11, object Field12, object Item12, object Field13, object Item13, object Field14, object Item14);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range GetPivotData([in]object DataField, [in]object Field1, [in]object Item1, [in]object Field2, [in]object Item2, [in]object Field3, [in]object Item3, [in]object Field4, [in]object Item4, [in]object Field5, [in]object Item5, [in]object Field6, [in]object Item6, [in]object Field7, [in]object Item7, [in]object Field8, [in]object Item8, [in]object Field9, [in]object Item9, [in]object Field10, [in]object Item10, [in]object Field11, [in]object Item11, [in]object Field12, [in]object Item12, [in]object Field13, [in]object Item13, [in]object Field14, [in]object Item14) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.GetPivotData(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPivotData (Optional DataField As Object, Optional Field1 As Object, Optional Item1 As Object, Optional Field2 As Object, Optional Item2 As Object, Optional Field3 As Object, Optional Item3 As Object, Optional Field4 As Object, Optional Item4 As Object, Optional Field5 As Object, Optional Item5 As Object, Optional Field6 As Object, Optional Item6 As Object, Optional Field7 As Object, Optional Item7 As Object, Optional Field8 As Object, Optional Item8 As Object, Optional Field9 As Object, Optional Item9 As Object, Optional Field10 As Object, Optional Item10 As Object, Optional Field11 As Object, Optional Item11 As Object, Optional Field12 As Object, Optional Item12 As Object, Optional Field13 As Object, Optional Item13 As Object, Optional Field14 As Object, Optional Item14 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2090)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DataField" Type="System.Object" />
        <Parameter Name="Field1" Type="System.Object" />
        <Parameter Name="Item1" Type="System.Object" />
        <Parameter Name="Field2" Type="System.Object" />
        <Parameter Name="Item2" Type="System.Object" />
        <Parameter Name="Field3" Type="System.Object" />
        <Parameter Name="Item3" Type="System.Object" />
        <Parameter Name="Field4" Type="System.Object" />
        <Parameter Name="Item4" Type="System.Object" />
        <Parameter Name="Field5" Type="System.Object" />
        <Parameter Name="Item5" Type="System.Object" />
        <Parameter Name="Field6" Type="System.Object" />
        <Parameter Name="Item6" Type="System.Object" />
        <Parameter Name="Field7" Type="System.Object" />
        <Parameter Name="Item7" Type="System.Object" />
        <Parameter Name="Field8" Type="System.Object" />
        <Parameter Name="Item8" Type="System.Object" />
        <Parameter Name="Field9" Type="System.Object" />
        <Parameter Name="Item9" Type="System.Object" />
        <Parameter Name="Field10" Type="System.Object" />
        <Parameter Name="Item10" Type="System.Object" />
        <Parameter Name="Field11" Type="System.Object" />
        <Parameter Name="Item11" Type="System.Object" />
        <Parameter Name="Field12" Type="System.Object" />
        <Parameter Name="Item12" Type="System.Object" />
        <Parameter Name="Field13" Type="System.Object" />
        <Parameter Name="Item13" Type="System.Object" />
        <Parameter Name="Field14" Type="System.Object" />
        <Parameter Name="Item14" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DataField">可选 <b>对象</b>。 包含数据透视表数据的字段的名称。</param>
        <param name="Field1">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item1">可选 <b>对象</b>。 中项的名称 <paramref name="Field1" /> 。</param>
        <param name="Field2">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item2">可选 <b>对象</b>。 中项的名称 <paramref name="Field2" /> 。</param>
        <param name="Field3">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item3">可选 <b>对象</b>。 中项的名称 <paramref name="Field3" /> 。</param>
        <param name="Field4">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item4">可选 <b>对象</b>。 中项的名称 <paramref name="Field4" /> 。</param>
        <param name="Field5">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item5">可选 <b>对象</b>。 中项的名称 <paramref name="Field5" /> 。</param>
        <param name="Field6">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item6">可选 <b>对象</b>。 中项的名称 <paramref name="Field6" /> 。</param>
        <param name="Field7">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item7">可选 <b>对象</b>。 中项的名称 <paramref name="Field7" /> 。</param>
        <param name="Field8">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item8">可选 <b>对象</b>。 中项的名称 <paramref name="Field8" /> 。</param>
        <param name="Field9">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item9">可选 <b>对象</b>。 中项的名称 <paramref name="Field9" /> 。</param>
        <param name="Field10">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item10">可选 <b>对象</b>。 中项的名称 <paramref name="Field10" /> 。</param>
        <param name="Field11">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item11">可选 <b>对象</b>。 中项的名称 <paramref name="Field11" /> 。</param>
        <param name="Field12">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item12">可选 <b>对象</b>。 中项的名称 <paramref name="Field12" /> 。</param>
        <param name="Field13">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item13">可选 <b>对象</b>。 中项的名称 <paramref name="Field13" /> 。</param>
        <param name="Field14">可选 <b>对象</b>。 数据透视表中的列或行字段的名称。</param>
        <param name="Item14">可选 <b>对象</b>。 中项的名称 <paramref name="Field14" /> 。</param>
        <summary>返回一个 <b>Range</b> 对象，该对象带有数据透视表中数据项的相关信息。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrandTotalName">
      <MemberSignature Language="C#" Value="public string GrandTotalName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GrandTotalName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.GrandTotalName" />
      <MemberSignature Language="VB.NET" Value="Public Property GrandTotalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GrandTotalName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1840)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1840)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1840)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置显示在指定数据透视表的总计列或行标题中的文本串标志。默认值为字符串“Grand Total”。<b>String</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAutoFormat">
      <MemberSignature Language="C#" Value="public bool HasAutoFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAutoFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.HasAutoFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HasAutoFormat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAutoFormat { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表在刷新时或移动字段时自动设置格式，则其为<b>True。</b> 读/写 <b>Boolean</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public bool Hidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Hidden { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检查数据透视表是否存在于工作表级别。 <b>Boolean</b> (<b>bool</b> in C#) 。 只读</summary>
        <value>To be added.</value>
        <remarks><para>当 <b>Hidden</b> 属性设置为 <b>True</b>时， <b>数据透视表</b> 对象在工作表级别隐藏。 当该属性设置为 False <b>时</b>，数据透视表位于工作表上。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HiddenFields">
      <MemberSignature Language="C#" Value="public object HiddenFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HiddenFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.HiddenFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HiddenFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HiddenFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(711)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 指定要返回的字段的名称或编号（可以是指定多个字段的数组）。</param>
        <summary>返回一个对象，该对象表示单个数据透视表字段 (对象) 或对象) 当前未显示为行、列、页或数据字段的所有字段 (的集合。 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 只读。</summary>
        <value>To be added.</value>
        <remarks><para>对于 OLAP 数据源，该属性总返回一个空集合。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InGridDropZones">
      <MemberSignature Language="C#" Value="public bool InGridDropZones { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InGridDropZones" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.InGridDropZones" />
      <MemberSignature Language="VB.NET" Value="Public Property InGridDropZones As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InGridDropZones { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2560)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2560)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2560)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此属性用于切换对象的网格内拖放 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 区域。  在某些情况下，它还会影响 的布局 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>当属性设置为 True 时，的网格内表示形式与在 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.InGridDropZones" /> <b></b> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 2003 年 3 月Excel相同。 当此属性设置为 <b>False</b> 时，不存在网格中的拖放区域。 布局 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 也会随此属性一起更改。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerDetail">
      <MemberSignature Language="C#" Value="public string InnerDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.InnerDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerDetail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InnerDetail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置当最里层的行或列字段的属性为 True 时将显示为明细的 <see cref="P:Microsoft.Office.Interop.Excel.PivotItem.ShowDetail" /> 字段的名称。 <b></b> 读/写 <b>String</b>。</summary>
        <value>To be added.</value>
        <remarks><para>该属性不可用于 OLAP 数据源。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutRowDefault">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLayoutRowType LayoutRowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLayoutRowType LayoutRowDefault" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.LayoutRowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutRowDefault As XlLayoutRowType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLayoutRowType LayoutRowDefault { Microsoft::Office::Interop::Excel::XlLayoutRowType get(); void set(Microsoft::Office::Interop::Excel::XlLayoutRowType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2554)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2554)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2554)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLayoutRowType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此属性指定第一次将布局 <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 设置 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 添加到 时的布局设置。 读/写。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlLayoutRowType" /></value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlLayoutRowType" /> 可以是 xlCompactRow、xlTabularRow 或 xlOutlineRow。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFormulas">
      <MemberSignature Language="C#" Value="public void ListFormulas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ListFormulas() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ListFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Sub ListFormulas ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ListFormulas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在分离工作表上创建数据透视表的计算项和计算字段的列表。</summary>
        <remarks><para>本方法对 OLAP 数据源无效。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public string Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Location { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一 <b>个字符串</b> ，表示指定 正文中的左上单元格 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 读/写。</summary>
        <value><b>String</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualUpdate">
      <MemberSignature Language="C#" Value="public bool ManualUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ManualUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表仅在用户请求时重新计算，则该值为 <b>True</b>。默认值为 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>程序终止后立即将此属性设置为<b>False。</b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <b>个字符串</b> ，指示 MDX (多维) ，将发送到提供程序以填充当前数据透视表视图。 只读。</summary>
        <value>To be added.</value>
        <remarks><para>如果对非联机分析处理 (OLAP) 数据透视表查询此值，或者当没有数据透视表视图 (没有数据项) 时，将返回运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeLabels">
      <MemberSignature Language="C#" Value="public bool MergeLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeLabels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.MergeLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeLabels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeLabels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果指定的数据透视表的外部行项、列项、分类汇总和总计标志使用合并单元格，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置对象的名称。 <b>String</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullString">
      <MemberSignature Language="C#" Value="public string NullString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.NullString" />
      <MemberSignature Language="VB.NET" Value="Public Property NullString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1495)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1495)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置当属性为 True 时，在包含 null 值的 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayNullString" /> 单元格中显示的 <b>字符串</b>。 默认值为空字符串 ("")。 读/写 <b>String</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageFieldOrder">
      <MemberSignature Language="C#" Value="public int PageFieldOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageFieldOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property PageFieldOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageFieldOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置页字段在数据透视表布局上的顺序。 可以是下列常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> <b>：xlDownThenOver</b> 或 <b>xlOverThenDown</b>。 默认常量是 <b>xlDownThenOver</b>。 <b>Integer</b> 型，可读/写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageFields">
      <MemberSignature Language="C#" Value="public object PageFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PageFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PageFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(714)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(714)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 指定要返回的字段的名称或编号（可以是指定多个字段的数组）。</param>
        <summary>返回一个对象，该对象表示单个数据透视表字段 (一个对象) 或一个当前 (页字段) <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 的所有字段 <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 的集合。 只读。</summary>
        <value>To be added.</value>
        <remarks><para>一个层次只能包含一个页字段。</para>
          <para>对基于数据透视表高速缓存的数据透视表而言，返回的数据透视表字段的集合反应了当前高速缓存中的内容。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageFieldStyle">
      <MemberSignature Language="C#" Value="public string PageFieldStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageFieldStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property PageFieldStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageFieldStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置用于边界页字段区域中的样式。默认值为 null 字符串（默认时无样式）。<b>String</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>此样式用作背景区域的默认样式，并且在用户指定格式前起作用。当对某字段进行数据透视时，从页字段区域移到其他位置的单元格保留此样式。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageFieldWrapCount">
      <MemberSignature Language="C#" Value="public int PageFieldWrapCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageFieldWrapCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldWrapCount" />
      <MemberSignature Language="VB.NET" Value="Public Property PageFieldWrapCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageFieldWrapCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置数据透视表中每行或每列的页字段数目。 <b>Integer</b> 型，可读/写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range PageRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range PageRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ PageRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表数据透视表中包含页区域的区域。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRangeCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range PageRangeCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range PageRangeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageRangeCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageRangeCells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ PageRangeCells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1482)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，该对象仅代表指定数据透视表中包含页字段和项目下拉列表 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 的单元格。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的父对象。只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCache">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCache PivotCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCache PivotCache() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotCache" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCache () As PivotCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCache ^ PivotCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCache</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> 一个对象，该对象代表指定数据透视表的缓存。 只读。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape PivotChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape PivotChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotChart As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ PivotChart { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> 个对象，该对象代表数据透视图隐藏数据透视表的独立数据透视表。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotColumnAxis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotAxis PivotColumnAxis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotAxis PivotColumnAxis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotColumnAxis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotColumnAxis As PivotAxis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotAxis ^ PivotColumnAxis { Microsoft::Office::Interop::Excel::PivotAxis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotAxis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /> 一个代表整个列轴的对象。 只读。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotFields">
      <MemberSignature Language="C#" Value="public object PivotFields (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotFields([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotFields (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(718)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 要返回的字段的名称或编号。</param>
        <summary>返回一个对象，该对象代表单个数据透视表字段 (一个对象) 或同时包含可见和隐藏字段的集合 (数据透视) 数据透视表中的一个对象 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 。 只读。</summary>
        <returns>To be added.</returns>
        <remarks><para>对于 OLAP 数据源，没有隐藏字段，并且返回的对象或集合反映了当前可见的内容。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotFormulas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotFormulas PivotFormulas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotFormulas PivotFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotFormulas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotFormulas As PivotFormulas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotFormulas ^ PivotFormulas { Microsoft::Office::Interop::Excel::PivotFormulas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1497)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotFormulas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotFormulas" /> 一个对象，该对象代表指定报表的公式 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 集合。 只读。</summary>
        <value>To be added.</value>
        <remarks><para>对于 OLAP 数据源，该属性将返回一个空集合。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotRowAxis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotAxis PivotRowAxis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotAxis PivotRowAxis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotRowAxis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotRowAxis As PivotAxis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotAxis ^ PivotRowAxis { Microsoft::Office::Interop::Excel::PivotAxis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2547)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotAxis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /> 一个代表整个行轴的对象。 只读。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotSelect">
      <MemberSignature Language="C#" Value="public void PivotSelect (string Name, Microsoft.Office.Interop.Excel.XlPTSelectionMode Mode = Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel, object UseStandardName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotSelect([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlPTSelectionMode Mode, [in]object UseStandardName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotSelect (Name As String, Optional Mode As XlPTSelectionMode = Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel, Optional UseStandardName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlPTSelectionMode" />
        <Parameter Name="UseStandardName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">必需的 <b>字符串</b> 。 所选内容，采用标准数据透视表选择格式。</param>
        <param name="Mode">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode" /> 。 指定结构化选择模式。</param>
        <param name="UseStandardName">可选 <b>对象</b>。 如果为 <b>True</b>，则表示将在其他位置运行录制的宏。</param>
        <summary>选定数据透视表的一部分。</summary>
        <remarks><para>只能使用指定模式来选择数据透视表中的相应项。例如，无法通过 <b>xlButton</b> 模式来选择数据和标志；同样，也无法通过 <b>xlDataOnly</b> 模式来选择按钮。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotSelection">
      <MemberSignature Language="C#" Value="public string PivotSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PivotSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotSelection As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PivotSelection { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以标准数据透视表的选定区域格式返回或设置数据透视表的选定区域。<b>String</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>设置此属性等效于调用参数设置为 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)" /> <paramref name="Mode" /> <b>xlDataAndLabel 的方法</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotSelectionStandard">
      <MemberSignature Language="C#" Value="public string PivotSelectionStandard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PivotSelectionStandard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotSelectionStandard" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotSelectionStandard As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PivotSelectionStandard { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2089)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2089)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置用英语（美国）设置的标准数据透视表格式的数据透视表选定内容的 <b>String</b> 类型的数值。可读写。</summary>
        <value>To be added.</value>
        <remarks><para><b>PivotSelectionStandard</b>属性是"国际友好"属性，而 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.PivotSelection" /> 该属性不是。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> 。 报告数据源。</param>
        <param name="SourceData">可选 <b>对象</b>。 新报表的数据。 可以是对象、区域数组或代表其他报表名称的文本 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 常量。 对于外部数据库，是包含查询字符串的字符串SQL，其中每个元素的长度最多 <paramref name="SourceData" /> 为 255 个字符。 应该使用 <paramref name="Connection" /> 参数指定 ODBC 连接字符串。 为了与早期版本的 <paramref name="SourceData" /> Excel，可以是一个双元素数组。 第一个元素是指定数据的 ODBC 源的连接字符串。 第二个元素是SQL数据的查询字符串。 如果指定 <paramref name="SourceData" /> ，则还必须指定 <paramref name="SourceType" /> 。 如果活动单元格位于该 <paramref name="SourceData" /> 范围内，则还必须 <paramref name="TableDestination" /> 指定 。</param>
        <param name="TableDestination">可选 <b>对象</b>。 一个 <b>Range</b> 对象，它指定报表在工作表中的位置。 如果省略此参数，则将报表置于活动单元格中。</param>
        <param name="TableName">可选 <b>对象</b>。 用于指定新报表名称的字符串。</param>
        <param name="RowGrand">可选 <b>对象</b>。 
						如果为 <b>True</b>，则显示报表中的行总计。</param>
        <param name="ColumnGrand">可选 <b>对象</b>。 
						如果为 <b>True</b>，则显示报表中的列总计。</param>
        <param name="SaveData">可选 <b>对象</b>。 如果为 <b>True</b>，则保存报表中的数据。 如果为 <b>False</b>，则仅保存报表的定义。</param>
        <param name="HasAutoFormat">可选 <b>对象</b>。 
						如果为 <b>True</b>，当刷新报表或移动字段时，Microsoft Excel 将自动设置其格式。</param>
        <param name="AutoPage">可选 <b>对象</b>。 仅在为 <paramref name="SourceType" /> <b>xlConsolidation 时有效</b>。 如果值为 <b>True</b>，Microsoft Excel 将为合并创建页字段。 如果 <paramref name="AutoPage" /> 为 <b>False，</b>则必须创建一个或多个页字段。</param>
        <param name="Reserved">可选 <b>对象</b>。 不在 Microsoft Excel 中使用。</param>
        <param name="BackgroundQuery">可选 <b>对象</b>。 如果为 <b>True</b>，则 Excel 将异步执行（后台执行）报表查询。 默认值为 <b>False</b>。</param>
        <param name="OptimizeCache">可选 <b>对象</b>。 如果为 <b>True</b>，则在构造数据透视表的缓存时对其进行优化。 默认值为 <b>False</b>。</param>
        <param name="PageFieldOrder">可选 <b>对象</b>。 在数据透视表布局中添加页字段的顺序。 可以是下列常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> <b>：xlDownThenOver</b> 或 <b>xlOverThenDown</b>。 默认值为 <b>xlDownThenOver</b>。</param>
        <param name="PageFieldWrapCount">可选 <b>对象</b>。 数据透视表中每列或每行的页字段数。 默认值为 0（零）。</param>
        <param name="ReadData">可选 <b>对象</b>。 如果为 <b>True</b>，则创建数据透视表缓存以包含外部数据库中的所有记录；此时缓存可能会很大。 如果 <paramref name="ReadData" /> 为 <b>False，</b>可以在实际读取数据之前将某些字段设置为基于服务器的页字段。</param>
        <param name="Connection">可选 <b>对象</b>。 包含 ODBC 设置的字符串，这些设置使得 Excel 可以连接 ODBC 数据源。 连接字符串的形式为"ODBC; &lt;connection string &gt; ". 此参数替代对象属性之前 <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> 的任何 <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> 设置。</param>
        <summary>创建 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 对象。 此方法不显示数据透视表向导。 此方法对 OLE DB 数据源不可用。 使用 <see cref="M:Microsoft.Office.Interop.Excel.PivotTables.Add(Microsoft.Office.Interop.Excel.PivotCache,System.Object,System.Object,System.Object,System.Object)" /> 方法可添加数据透视表缓存，然后基于缓存创建数据透视表。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotValueCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotValueCell PivotValueCell (object rowline, object columnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotValueCell PivotValueCell([in]object rowline, [in]object columnline) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotValueCell(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotValueCell (Optional rowline As Object, Optional columnline As Object) As PivotValueCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3064)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotValueCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowline" Type="System.Object" />
        <Parameter Name="columnline" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rowline">如果类型为<b>PivotLine</b>，则指定<b>PivotValueCell</b>所对齐的行区域中的 PivotLine。 <b></b> 如果类型 <b>为 Int</b>，则指定 <b>PivotLine</b> 在 <b>PivotValueCell</b> 所对齐的行区域上的位置。 如果缺少，则 Empty、Null 或 0 指定总计行。</param>
        <param name="columnline">如果类型为<b>PivotLine</b>，则指定<b>PivotValueCell</b>与列区域中的<b>PivotLine</b>对齐。 如果类型 <b>为 Int</b>，则指定 <b>PivotLine</b> 在 <b>PivotValueCell</b> 所对齐的列区域上的位置。 如果缺少空、Null 或 0，则指定总计列。</param>
        <summary>检索 <see cref="T:Microsoft.Office.Interop.Excel.PivotValueCell" /> 给定数据透视表（提供特定行和列索引）的对象。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PreserveFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果通过透视、排序或更改页字段项等操作刷新或重新计算报表时保留格式，则此属性为<b>True。</b> 读/写 <b>Boolean</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDrillIndicators">
      <MemberSignature Language="C#" Value="public bool PrintDrillIndicators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintDrillIndicators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PrintDrillIndicators" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintDrillIndicators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintDrillIndicators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2549)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定是否使用 打印钻取指示器 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>如果随 一起打印钻取指示器，则返回<b>True;</b>如果没有使用 打印深化标记，则返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> <b>False。</b> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /></para>
          <para>当 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" /> 该属性设置为 False <b>时</b>， <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" /> 该属性不起作用。 钻取指示器未显示在 中时，不会打印 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 它们。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTitles">
      <MemberSignature Language="C#" Value="public bool PrintTitles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintTitles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PrintTitles" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTitles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintTitles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1838)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果基于数据透视表设置工作表的打印标题，则该属性值为 <b>True</b>。如果使用工作表的打印标题，则该属性值为 <b>False</b>。默认值为 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>行打印标题设置为包含数据透视表的列字段项的行。列打印标题设置为包含行项目的列。</para>
          <para>数据透视表必须是打印区域中的唯一报表。 若要为数据透视表设置缩进格式，请使用 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)" /> 方法。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDataSourceValues">
      <MemberSignature Language="C#" Value="public void RefreshDataSourceValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshDataSourceValues() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.RefreshDataSourceValues" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshDataSourceValues ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshDataSourceValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为处于回写模式的数据透视表中所有编辑过的单元格，从数据源检索当前值。</summary>
        <remarks><para>若要确定数据透视表是否位于写回模式，请检查 对象的 或 属性，其中任一对象 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 将返回 True。 对于不处于回写模式的数据透视表，尝试执行此方法将会生成运行时错误。</para>
          <para>对于具有 OLAP 数据源的数据透视表，执行方法将创建与 OLAP 服务器的单独连接，并执行完整的 MDX (值 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.RefreshDataSourceValues" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。<see cref="P:Microsoft.Office.Interop.Excel.PivotTable.MDX" /> 属性) ，用于执行更新操作以填充数据透视表。 Excel提取为数据透视表视图中已编辑的所有单元格返回的值，然后将这些值存储在这些单元格 <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.DataSourceValue" /> 的 属性中。</para>
          <para>此方法仅适用于使用 OLAP 数据源的数据透视表。尝试对使用非 OLAP 数据源的数据透视表执行此方法将会生成运行时错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDate">
      <MemberSignature Language="C#" Value="public DateTime RefreshDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime RefreshDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RefreshDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefreshDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime RefreshDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回数据透视表或缓存最近一次刷新的日期。 只读<b>DateTime 。</b></summary>
        <value>To be added.</value>
        <remarks><para>对于 OLAP 数据源，在每次查询后都会更新此属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshName">
      <MemberSignature Language="C#" Value="public string RefreshName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RefreshName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RefreshName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefreshName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RefreshName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回上次刷新数据透视表数据或数据透视表缓存的人的姓名。 只读 <b>String</b>。</summary>
        <value>To be added.</value>
        <remarks><para>对于 OLAP 数据源，在每次查询后都会更新此属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshTable">
      <MemberSignature Language="C#" Value="public bool RefreshTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RefreshTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.RefreshTable" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshTable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RefreshTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(717)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用源数据刷新数据透视表。如果成功，则该值为 <b>True</b>。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatAllLabels">
      <MemberSignature Language="C#" Value="public void RepeatAllLabels (Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels Repeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RepeatAllLabels([in]valuetype Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels Repeat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.RepeatAllLabels(Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RepeatAllLabels (Repeat As XlPivotFieldRepeatLabels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RepeatAllLabels(Microsoft::Office::Interop::Excel::XlPivotFieldRepeatLabels Repeat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Repeat" Type="Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels" />
      </Parameters>
      <Docs>
        <param name="Repeat">指定是否要对指定数据透视表中的所有透视字段重复项目标签。</param>
        <summary>设置是否对指定数据透视表中的所有透视字段重复项目标签。</summary>
        <remarks><para>使用 方法对应于"数据透视表工具设计"选项卡的"报表布局"下拉列表中的"重复所有项目标签"和"不重复 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.RepeatAllLabels(Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels)" /> 项目标签"命令。</para>
          <para>若要指定是否对单个透视字段重复项目标签，请使用 <see cref="P:Microsoft.Office.Interop.Excel.PivotField.RepeatLabels" /> 属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatItemsOnEachPrintedPage">
      <MemberSignature Language="C#" Value="public bool RepeatItemsOnEachPrintedPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepeatItemsOnEachPrintedPage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RepeatItemsOnEachPrintedPage" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatItemsOnEachPrintedPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepeatItemsOnEachPrintedPage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1842)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1842)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1842)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当打印指定的数据透视表时，如果每页第一行上都显示行、列和项标志，则该值为 <b>True</b>。如果仅在第一页上打印这些标志，则该值为 <b>False</b>。默认值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>数据透视表必须是打印区域中的唯一报表。 若要为数据透视表设置缩进格式，请使用 <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)" /> 方法。</para>
          <para>对于工作表，Microsoft Excel 打印行和列标签，而不是打印标题。 使用 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.PrintTitles" /> 属性可确定是否为数据透视表设置了打印标题。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RowAxisLayout">
      <MemberSignature Language="C#" Value="public void RowAxisLayout (Microsoft.Office.Interop.Excel.XlLayoutRowType RowLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RowAxisLayout([in]valuetype Microsoft.Office.Interop.Excel.XlLayoutRowType RowLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RowAxisLayout (RowLayout As XlLayoutRowType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RowAxisLayout(Microsoft::Office::Interop::Excel::XlLayoutRowType RowLayout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2556)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowLayout" Type="Microsoft.Office.Interop.Excel.XlLayoutRowType" />
      </Parameters>
      <Docs>
        <param name="RowLayout">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlLayoutRowType" /> 项可以是 <b>xlCompactRow</b> <b>、xlTabularRow</b>或 <b>xlOutlineRow</b>。</param>
        <summary>此方法用于同时设置所有现有 s 的布局 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 选项。</summary>
        <remarks><para>此方法是原子方法，因此它确保在任何 上无法设置布局选项，则任何字段的布局选项都将更改，并且 不会 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 对 进行任何更改 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RowFields">
      <MemberSignature Language="C#" Value="public object RowFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RowFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(712)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(712)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 指定要返回的字段的名称或编号（可以是指定多个字段的数组）。</param>
        <summary>返回一个对象，该对象代表数据透视表中的单个字段 (对象) 或当前 (行字段) 的所有字段 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 的集合。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowGrand">
      <MemberSignature Language="C#" Value="public bool RowGrand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowGrand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RowGrand" />
      <MemberSignature Language="VB.NET" Value="Public Property RowGrand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowGrand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表显示行的总数，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range RowRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RowRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ RowRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表数据透视表上包括行区域的区域。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveData">
      <MemberSignature Language="C#" Value="public bool SaveData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SaveData" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果数据透视表的数据随工作簿一起保存，则为 <b>True</b>。如果仅保存数据透视表的定义，则为 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>对于 OLAP 数据源，此属性始终设置为 <b>False</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPTSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPTSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As XlPTSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPTSelectionMode SelectionMode { Microsoft::Office::Interop::Excel::XlPTSelectionMode get(); void set(Microsoft::Office::Interop::Excel::XlPTSelectionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPTSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置数据透视表的结构化选择模式。 读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode" /> 。</summary>
        <value>To be added.</value>
        <remarks><para>如果数据透视表字段不是分级显示的，则指定任意常量与 <b>xlFirstRow</b> 的和将等价于单独指定该常量。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCellBackgroundFromOLAP">
      <MemberSignature Language="C#" Value="public bool ShowCellBackgroundFromOLAP { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellBackgroundFromOLAP" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowCellBackgroundFromOLAP" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellBackgroundFromOLAP As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellBackgroundFromOLAP { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b></b>如此 如果 MDX (多维表达式) Microsoft Excel 发送到服务器包含数据区域中对应于联机分析处理 (OLAP) 数据集中的单元格的每个单元格 <see cref="P:Microsoft.Office.Interop.Excel.ChartFillFormat.BackColor" /> 的属性。 默认值为 <b>False</b> 。 读/写 <b>boolean 类型的值</b> 。</summary>
        <value>To be added.</value>
        <remarks><para>如果 OLAP 数据集返回<b>BackColor</b>属性值，则单元格填充颜色将设置为该工作表Microsoft Excel调色板中最近的颜色。 如果用户手动将单元格模式格式应用于单元格，这将覆盖 OLAP 数据集的任何格式。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDrillIndicators">
      <MemberSignature Language="C#" Value="public bool ShowDrillIndicators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDrillIndicators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDrillIndicators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDrillIndicators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" />属性用于切换 中钻取指示器的显示 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>如果钻取指示器显示在 中，则返回<b>True;</b>如果钻取指示器未显示在 中，则返回 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> <b>False。</b> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPageMultipleItemLabel">
      <MemberSignature Language="C#" Value="public bool ShowPageMultipleItemLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPageMultipleItemLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowPageMultipleItemLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPageMultipleItemLabel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPageMultipleItemLabel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2130)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2130)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2130)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果为 <b>True</b>（默认），那么只要隐藏了项，并且在数据透视表视图中显示非隐藏项的总计，“( 多个项目 )”将显示在工作表的数据透视表单元格中。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPages">
      <MemberSignature Language="C#" Value="public object ShowPages (object PageField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPages([in]object PageField) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ShowPages(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPages (Optional PageField As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PageField" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PageField">可选 <b>对象</b>。 命名报表中单个页字段的字符串。</param>
        <summary>为页字段中的每个数据项创建新的数据透视表。每个新报表都创建在新的工作表上。</summary>
        <returns>To be added.</returns>
        <remarks><para>本方法对 OLAP 数据源无效。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleColumnHeaders">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleColumnHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleColumnHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleColumnHeaders As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleColumnHeaders { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2567)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2567)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2567)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果列标题应显示在 中，则该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnHeaders" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> True。 读/写。</summary>
        <value>Boolean</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleColumnStripes">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleColumnStripes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleColumnStripes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnStripes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleColumnStripes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleColumnStripes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Boolean 属性显示带形列，其中偶数列的格式与奇数列的格式不同。 这样 <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> 更易于阅读。 读/写。</summary>
        <value>Boolean</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleLastColumn">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleLastColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleLastColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleLastColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleLastColumn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleLastColumn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2563)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2563)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2563)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>返回 <see cref="T:System.Boolean" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleRowHeaders">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleRowHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleRowHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleRowHeaders As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleRowHeaders { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2566)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2566)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2566)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果行标题应显示在 中，则该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowHeaders" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> True。 读/写。</summary>
        <value>Boolean</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleRowStripes">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleRowStripes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleRowStripes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowStripes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleRowStripes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleRowStripes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2564)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2564)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>该属性显示偶数行格式与奇数行不同的 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowStripes" /> 带带行。 这样 <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> 更易于阅读。 读/写。</summary>
        <value>Boolean</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValuesRow">
      <MemberSignature Language="C#" Value="public bool ShowValuesRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValuesRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowValuesRow" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValuesRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValuesRow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2883)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2883)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否显示值行。</summary>
        <value>如果显示值行，则其值为<b>true;</b>否则为<b>false</b>。</value>
        <remarks><para>读/写。</para>
          <para>此属性对应于“数据透视表选项”对话框的“显示”选项卡上的“显示值行”复选框的设置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Slicers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicers Slicers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicers Slicers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Slicers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Slicers As Slicers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicers ^ Slicers { Microsoft::Office::Interop::Excel::Slicers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2881)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> 指定数据透视表的集合。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Slicers" />指定数据透视表的集合。</value>
        <remarks><para>只读。</para>
          <para>切片器可用于筛选数据透视表中的数据。 该 <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> 集合包含表示与指定数据透视表关联的 <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> 切片器的对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallGrid">
      <MemberSignature Language="C#" Value="public bool SmallGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmallGrid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SmallGrid" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallGrid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmallGrid { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1841)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 Microsoft Excel 为新建的数据透视表使用一个具有两个单元格宽度和两个单元格高度的网格，则该值为 <b>True</b>。如果 Excel 使用一个空白模板边框，则该值为 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>应使用模板边框。使用网格的目的仅是为了与早期版本的 Excel 兼容。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortUsingCustomLists">
      <MemberSignature Language="C#" Value="public bool SortUsingCustomLists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortUsingCustomLists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SortUsingCustomLists" />
      <MemberSignature Language="VB.NET" Value="Public Property SortUsingCustomLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SortUsingCustomLists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>属性控制自定义列表是否用于对字段的项进行排序，包括最初初始化 时和 按标题排序时，以及以后用户应用 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.SortUsingCustomLists" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> 排序时。 读/写。</summary>
        <value><b>Boolean</b></value>
        <remarks><para>将此属性设置为 <b>False</b> 可优化具有多个项的字段的性能，并且它还允许不需要基于自定义列表排序的用户避免基于自定义列表进行排序。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceData">
      <MemberSignature Language="C#" Value="public object SourceData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SourceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SourceData" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SourceData { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回数据透视表的数据源。 读写 <b>对象</b>。</summary>
        <value>To be added.</value>
        <remarks><para>返回的值取决于数据源，如下所示：</para>
          <list type="table">
            <item>
              <term>Microsoft Excel 列表或数据库</term>
              <description>文本形式的单元格引用。</description>
            </item>
            <item>
              <term>外部数据源</term>
              <description>数组。 每行包含一SQL连接字符串，其余元素作为查询字符串，细分为 255 个字符的段。</description>
            </item>
            <item>
              <term>多个合并区域</term>
              <description>二维数组。每行由一个引用及与其相关联的页字段项组成。</description>
            </item>
            <item>
              <term>其他数据透视表</term>
              <description>以上三种信息之一。</description>
            </item>
          </list>
          <para>该属性不可用于 OLE DB 数据源。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtotalHiddenPageItems">
      <MemberSignature Language="C#" Value="public bool SubtotalHiddenPageItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubtotalHiddenPageItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SubtotalHiddenPageItems" />
      <MemberSignature Language="VB.NET" Value="Public Property SubtotalHiddenPageItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SubtotalHiddenPageItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1498)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1498)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1498)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果在行或列的分类汇总、块汇总和总计中包括数据透视表中的隐藏页字段项，则该值为 <b>True</b>。默认值为 <b>False</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>对于 OLAP 数据源，该属性值总是 <b>True</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtotalLocation">
      <MemberSignature Language="C#" Value="public void SubtotalLocation (Microsoft.Office.Interop.Excel.XlSubtototalLocationType Location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubtotalLocation([in]valuetype Microsoft.Office.Interop.Excel.XlSubtototalLocationType Location) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.SubtotalLocation(Microsoft.Office.Interop.Excel.XlSubtototalLocationType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubtotalLocation (Location As XlSubtototalLocationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubtotalLocation(Microsoft::Office::Interop::Excel::XlSubtototalLocationType Location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Location" Type="Microsoft.Office.Interop.Excel.XlSubtototalLocationType" />
      </Parameters>
      <Docs>
        <param name="Location">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlSubtototalLocationType" /> 项可以是 <b>xlAtTop 或</b> <b>xlAtBottom</b>。</param>
        <summary>此方法更改所有现有 的汇总位置 <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 。 更改分类汇总位置仅对大纲形式的字段产生直接的视觉效果，但是也会对表格形式的字段设置该方法。</summary>
        <remarks><para><see cref="M:Microsoft.Office.Interop.Excel.PivotTable.SubtotalLocation(Microsoft.Office.Interop.Excel.XlSubtototalLocationType)" />方法自动 <see cref="P:Microsoft.Office.Interop.Excel.PivotField.LayoutSubtotalLocation" /> 设置所有现有 <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> 属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public string Summary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Summary" />
      <MemberSignature Language="VB.NET" Value="Public Property Summary As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Summary { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与指定数据透视表的可选文本字符串关联的说明。</summary>
        <value>与指定数据透视表的可选文本字符串关联的说明。</value>
        <remarks><para>读/写。</para>
          <para>该属性的值对应于"数据透视表选项"对话框的"可选文字"选项卡上"说明"框中 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.Summary" /> 的值。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableRange1">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TableRange1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TableRange1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableRange1 As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TableRange1 { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表包含整个数据透视表但不包括页字段的范围。 只读。</summary>
        <value>To be added.</value>
        <remarks><para>属性 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange2" /> 包括页字段。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableRange2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TableRange2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TableRange2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableRange2 As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TableRange2 { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表包含整个数据透视表（包括页字段）的范围。 只读。</summary>
        <value>To be added.</value>
        <remarks><para><see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange1" />属性不包括页字段。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public string TableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置数据透视表的正文中使用的样式。 默认值为 null 字符串（默认时无样式）。 读/写 <b>String</b>。</summary>
        <value>To be added.</value>
        <remarks><para>此样式用作背景区域的默认样式，并且在用户指定格式前起作用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle2">
      <MemberSignature Language="C#" Value="public object TableStyle2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TableStyle2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle2" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TableStyle2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2562)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2562)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2562)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle2" />属性指定当前应用于 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 的样式 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 。 读/写。</summary>
        <value><b>Object</b></value>
        <remarks><para>调用属性是因为 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle2" /> 存在名为 的现有属性 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle" /> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置与数据透视表一起保存的字符串。<b>String</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalsAnnotation">
      <MemberSignature Language="C#" Value="public bool TotalsAnnotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TotalsAnnotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TotalsAnnotation" />
      <MemberSignature Language="VB.NET" Value="Public Property TotalsAnnotation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TotalsAnnotation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1843)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果在基于 OLAP 数据源的指定数据透视表中，每个分类汇总和总计旁都显示有星号 (*)，则该值为 <b>True</b>。默认值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks><para>当本属性设置为 <b>True</b> 时，星号表示汇总中包含隐藏项。而无论报表中是否隐藏了任何项，星号都会出现。</para>
          <para>对于非 OLAP 数据源，该属性的值总为 <b>False</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>更新链接或数据透视表。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VacatedStyle">
      <MemberSignature Language="C#" Value="public string VacatedStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VacatedStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.VacatedStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property VacatedStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VacatedStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置当数据透视表刷新时，应用于空单元格的样式。默认值为无效字符串。（默认状态下没有样式应用）。<b>String</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>数据透视表的名称。 读/写 <b>String</b>。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotTableVersionList Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotTableVersionList Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As XlPivotTableVersionList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotTableVersionList Version { Microsoft::Office::Interop::Excel::XlPivotTableVersionList get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotTableVersionList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回Microsoft Excel版本号。 只读 <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableVersionList" /> 。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewCalculatedMembers">
      <MemberSignature Language="C#" Value="public bool ViewCalculatedMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewCalculatedMembers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ViewCalculatedMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewCalculatedMembers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ViewCalculatedMembers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2124)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2124)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2124)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果设置为 <b>True</b>（默认），则可以查看联机分析处理 (OLAP) 数据透视表的计算成员。<b>Boolean</b> 类型，可读写。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFields">
      <MemberSignature Language="C#" Value="public object VisibleFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VisibleFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.VisibleFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VisibleFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选 <b>对象</b>。 指定要返回的字段的名称或编号（可以是指定多个字段的数组）。</param>
        <summary>返回一个对象，该对象代表数据透视表中的单个字段 (一个对象) 或对象集合中所有可见 (<see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> 的集合) 。 可见字段显示为行、列、页或数据字段。 只读。</summary>
        <value>To be added.</value>
        <remarks><para>对于 OLAP 数据源，没有隐藏字段，此属性返回数据透视表缓存中的所有字段。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTotals">
      <MemberSignature Language="C#" Value="public bool VisualTotals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VisualTotals" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.VisualTotals" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTotals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VisualTotals { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果 (数据) 数据透视表 (联机分析处理) ，则默认值为<b>True，</b>以在视图中隐藏项目后重新计算总计。 读/写 <b>Boolean</b>。</summary>
        <value>To be added.</value>
        <remarks><para>在非 OLAP 数据透视表中，如果隐藏了项目，则将重新进行汇总以只反映数据透视表中剩余的可见项目。在 OLAP 数据透视表中，汇总将在服务器上进行，因此无论数据透视表中是否隐藏了项目，都不会影响汇总。但是，如果 OLAP 数据透视表的 <b>VisualTotals</b> 属性为 <b>False</b>，那么 OLAP 数据透视表的结果将与非 OLAP 数据透视表的结果相匹配。</para>
          <para>对于 OLAP 数据透视表，将 <b>VisualTotals</b> 属性设置为 <b>True</b>（默认值）时，其工作方式与非 OLAP 数据透视表中描述的一样。</para>
          <para>所有新的数据透视表的 <b>VisualTotals</b> 属性返回 <b>True</b>。 但是，如果您在当前版本的 Microsoft Excel中打开工作簿，并且已在早期版本的 Excel 中创建数据透视表，<b>则 VisualTotals</b>属性将返回<b>False</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTotalsForSets">
      <MemberSignature Language="C#" Value="public bool VisualTotalsForSets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VisualTotalsForSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.VisualTotalsForSets" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTotalsForSets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VisualTotalsForSets { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2882)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2882)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否将筛选的项目包括在指定数据透视表的命名集总数中。</summary>
        <value>如果包含指定数据透视表命名集总计中的筛选项，则其为<b>true;</b>否则为<b>false</b>。 默认值为 <b>false</b></value>
        <remarks><para>读/写。</para>
          <para>如果已筛选项目包含在命名集的总计中，则其值为
            <b>true;</b>否则<b>为 false</b>。 此属性的默认值为 <b>false</b>。</para>
          <para>在基于 OLAP 数据源的数据透视表中，可配置数据透视表中命名集的总计是否将包含已筛选的项目。 该属性的设置对应于"数据透视表选项"对话框的"总计筛选器"选项卡上的"在设置总计中包括 <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.VisualTotalsForSets" /> &amp; 筛选的项目"复选框。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
